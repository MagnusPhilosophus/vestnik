(undo-tree-save-format-version . 1)
"a77f20a89163a318d524018a5719860f97ca3ba2"
[nil nil nil nil (25752 30193 375759 518000) 0 nil]
([nil nil ((#("# Makefile for building LaTeX documents

# Define variables
LATEX := xelatex -interaction=nonstopmode -output-driver='xdvipdfmx -z3' -file-line-error -synctex=1
LATEX_FLAGS := -halt-on-error -interaction=nonstopmode \\
	       -output-driver='xdvipdfmx -z3' -file-line-error -synctex=1
LATEX_TEST_FLAGS := -halt-on-error -interaction=errorstopmode -draftmode -no-pdf
SOURCE_DIR := src
BUILD_DIR := build
TEXFILE := $(SOURCE_DIR)/main.tex
PDF := $(BUILD_DIR)/main.pdf

# Create build directory if it doesn't exist
$(shell mkdir -p $(BUILD_DIR))

# Default target
pdf: $(PDF)

# Rule to build PDF documents from LaTeX source
$(PDF): $(TEXFILE)
	$(LATEX) $(LATEX_FLAGS) -output-directory=$(BUILD_DIR) $(TEXFILE)

test: $(TEXFILE)
	$(LATEX) $(LATEX_TEST_FLAGS) -output-directory=$(BUILD_DIR) $(TEXFILE)

# Clean target
clean:
	rm -rf $(BUILD_DIR)
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 40 (fontified t face font-lock-comment-face) 40 41 (fontified t) 41 43 (fontified t face font-lock-comment-delimiter-face) 43 60 (fontified t face font-lock-comment-face) 60 65 (fontified t face font-lock-variable-name-face) 65 117 (fontified t) 117 132 (fontified t face font-lock-string-face) 132 161 (fontified t) 161 172 (fontified t face font-lock-variable-name-face) 172 216 (fontified t) 216 218 (fontified t syntax-table (1)) 218 226 (fontified t) 226 240 (fontified t face font-lock-variable-name-face) 240 241 (fontified t) 241 256 (fontified t face font-lock-string-face) 256 285 (fontified t) 285 301 (fontified t face font-lock-variable-name-face) 301 366 (fontified t) 366 376 (fontified t face font-lock-variable-name-face) 376 384 (fontified t) 384 393 (fontified t face font-lock-variable-name-face) 393 403 (fontified t) 403 410 (fontified t face font-lock-variable-name-face) 410 416 (fontified t) 416 426 (fontified t face (font-lock-variable-name-face)) 426 437 (fontified t) 437 440 (fontified t face font-lock-variable-name-face) 440 446 (fontified t) 446 455 (fontified t face (font-lock-variable-name-face)) 455 467 (fontified t) 467 469 (fontified t face font-lock-comment-delimiter-face) 469 512 (fontified t face font-lock-comment-face) 512 514 (fontified t) 514 519 (fontified t face (font-lock-function-name-face font-lock-variable-name-face)) 519 520 (fontified t face (font-lock-function-name-face)) 520 531 (fontified t face (makefile-shell)) 531 540 (fontified t face (makefile-shell font-lock-variable-name-face)) 540 541 (fontified t face (makefile-shell)) 541 544 (fontified t) 544 546 (fontified t face font-lock-comment-delimiter-face) 546 561 (fontified t face font-lock-comment-face) 561 564 (fontified t face (makefile-targets)) 564 568 (fontified t) 568 571 (fontified t face (font-lock-variable-name-face)) 571 574 (fontified t) 574 576 (fontified t face font-lock-comment-delimiter-face) 576 622 (fontified t face font-lock-comment-face) 622 624 (fontified t face (makefile-targets)) 624 627 (fontified t face (makefile-targets font-lock-variable-name-face)) 627 628 (fontified t face (makefile-targets)) 628 632 (fontified t) 632 639 (fontified t face (font-lock-variable-name-face)) 639 644 (fontified t) 644 649 (fontified t face (font-lock-variable-name-face)) 649 653 (fontified t) 653 664 (fontified t face (font-lock-variable-name-face)) 664 686 (fontified t) 686 695 (fontified t face (font-lock-variable-name-face)) 695 699 (fontified t) 699 706 (fontified t face (font-lock-variable-name-face)) 706 709 (fontified t) 709 713 (fontified t face (makefile-targets)) 713 717 (fontified t) 717 724 (fontified t face (font-lock-variable-name-face)) 724 729 (fontified t) 729 734 (fontified t face (font-lock-variable-name-face)) 734 738 (fontified t) 738 754 (fontified t face (font-lock-variable-name-face)) 754 776 (fontified t) 776 785 (fontified t face (font-lock-variable-name-face)) 785 789 (fontified t) 789 796 (fontified t face (font-lock-variable-name-face)) 796 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 814 (fontified t face font-lock-comment-face) 814 819 (fontified t face (makefile-targets)) 819 831 (fontified t) 831 840 (fontified t face (font-lock-variable-name-face)) 840 842 (fontified t)) . 1) (undo-tree-id0 . -842) (undo-tree-id1 . -683) (undo-tree-id2 . -683) (undo-tree-id3 . -683) (undo-tree-id4 . -842) (undo-tree-id5 . -683) (undo-tree-id6 . -683) (undo-tree-id7 . -683) (undo-tree-id8 . -683) (undo-tree-id9 . -842) (undo-tree-id10 . -842) (undo-tree-id11 . -842) (undo-tree-id12 . -842) (undo-tree-id13 . -841) (undo-tree-id14 . -842) (undo-tree-id15 . -842) (undo-tree-id16 . -842) (undo-tree-id17 . -842) (undo-tree-id18 . -842) 843 (t 25752 29564 496953 104000)) nil (25752 30193 375755 188000) 0 nil])
([nil nil ((nil rear-nonsticky nil 886 . 887) (nil fontified nil 1 . 887) (1 . 887)) nil (25752 31847 302704 244000) 0 nil])
([nil nil ((741 . 747) (#("i" 0 1 (fontified t)) . -741) (undo-tree-id57 . -1) (739 . 742) (#("$" 0 1 (fontified t)) . -739) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("(" 0 1 (fontified t)) . -740) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("T" 0 1 (fontified t face (font-lock-variable-name-face))) . -741) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("E" 0 1 (fontified t face (font-lock-variable-name-face))) . -742) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("X" 0 1 (fontified t face (font-lock-variable-name-face))) . -743) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("F" 0 1 (fontified t face (font-lock-variable-name-face))) . -744) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("I" 0 1 (fontified t face (font-lock-variable-name-face))) . -745) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("L" 0 1 (fontified t face (font-lock-variable-name-face))) . -746) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("E" 0 1 (fontified t face (font-lock-variable-name-face))) . -747) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("S" 0 1 (fontified t face (font-lock-variable-name-face))) . -748) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#(")" 0 1 (fontified t)) . -749) (undo-tree-id108 . -1) (undo-tree-id109 . 1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 750 (t 25752 30193 380168 808000)) nil (25752 31857 185681 350000) 0 nil] [nil nil ((#("S" 0 1 (fontified t face font-lock-variable-name-face)) . 418) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (t 25752 30193 380168 808000)) ((418 . 419)) (25752 31847 302498 911000) 0 nil])
([nil nil ((828 . 836) (#("$" 0 1 (fontified nil)) . -828) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("(" 0 1 (fontified nil)) . -829) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . 1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("T" 0 1 (fontified nil face (font-lock-variable-name-face))) . -830) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("E" 0 1 (fontified nil face (font-lock-variable-name-face))) . -831) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("X" 0 1 (fontified nil face (font-lock-variable-name-face))) . -832) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("F" 0 1 (fontified nil face (font-lock-variable-name-face))) . -833) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("I" 0 1 (fontified nil face (font-lock-variable-name-face))) . -834) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("L" 0 1 (fontified nil face (font-lock-variable-name-face))) . -835) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("E" 0 1 (fontified nil face (font-lock-variable-name-face))) . -836) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("S" 0 1 (fontified nil face (font-lock-variable-name-face))) . -837) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(")" 0 1 (fontified t)) . -838) (undo-tree-id54 . 1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 839) nil (25752 31857 185625 477000) 0 nil])
nil
([nil nil ((739 . 743) (t 25752 31857 187705 420000)) nil (25752 31874 958584 500000) 0 nil])
([nil current ((832 . 836)) nil (25752 31874 958578 842000) 0 nil])
nil
