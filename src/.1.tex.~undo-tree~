(undo-tree-save-format-version . 1)
"2f55a40e360dac31edb4098beb6ba86ffd79828b"
[nil nil nil nil (25752 31352 507026 675000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -50093) (1 . 50094) (t 25752 31343 730522 989000)) nil (25752 31352 507023 812000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1)) nil (25752 31352 507019 552000) 0 nil])
([nil nil ((50092 . 50093) 50031) nil (25752 31352 506989 450000) 0 nil])
([nil nil ((31 . 34) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -31) (undo-tree-id5 . -1) (27 . 32) (#("textbf" 0 6 (face font-lock-keyword-face fontified t)) . 27) (undo-tree-id6 . -5) (undo-tree-id7 . -6) (undo-tree-id8 . -6) (undo-tree-id9 . -6) (undo-tree-id10 . -6) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (t 25752 31352 513808 124000)) nil (25752 37745 226112 539000) 0 nil])
([nil nil ((16281 . 16287) (#("i" 0 1 (face font-lock-keyword-face latex-env-pair t fontified t)) . -16281) (undo-tree-id46 . -1) (16276 . 16282) (16273 . 16276) (#("(" 0 1 (latex-env-pair t fontified t)) . -16273) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 16274 (16267 . 16274) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -16267) (undo-tree-id53 . -1) (16263 . 16268) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -16263) (undo-tree-id54 . -1) (16259 . 16264) (t 25752 37745 232061 760000)) nil (25752 37873 46541 799000) 0 nil])
([nil nil ((16288 . 16292) 16300) nil (25752 37873 46534 186000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16288) 16300) nil (25752 37873 46531 811000) 0 nil])
([nil nil ((16288 . 16292) 16300) nil (25752 37873 46529 437000) 0 nil])
([nil nil ((#("  " 0 2 (latex-env-pair t fontified nil)) . -16278) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (16274 . 16278) 16286) nil (25752 37873 46526 992000) 0 nil])
([nil nil ((16285 . 16288) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -16285) (undo-tree-id41 . -1) (16276 . 16286) (16273 . 16276) 16271) nil (25752 37873 46522 592000) 0 nil])
([nil nil ((16361 . 16367) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -16361) (undo-tree-id13 . -1) (16356 . 16362) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -16356) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 16357 (16355 . 16357) (#(" " 0 1 (fontified t)) . -16355) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -16356) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -16357) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t)) . -16358) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 16359 (16354 . 16359) 16318) nil (25752 37873 46516 446000) 0 nil])
([nil nil ((16258 . 16259) 16256) nil (25752 37873 46372 433000) 0 nil])
([nil nil ((#("Рис. " 0 5 (fontified t)) . 16370) (undo-tree-id130 . -4) (undo-tree-id131 . -5) (t 25752 37873 51360 358000)) nil (25752 37902 200798 114000) 0 nil])
([nil nil ((#("2- " 0 3 (fontified t)) . 16370) (undo-tree-id128 . -2) (undo-tree-id129 . -3)) nil (25752 37902 200794 343000) 0 nil])
([nil nil ((#("Пример построения пожарной сигнализации на основе системы BOLID,
которая включает три автоматические установки пожаротушения (порошковое,
газовое, водяное)
" 0 65 (fontified t) 65 100 (fontified t) 100 138 (fontified t) 138 156 (fontified t)) . 16370) (undo-tree-id117 . -138) (undo-tree-id118 . -155) (undo-tree-id119 . -138) (undo-tree-id120 . -138) (undo-tree-id121 . -156) (undo-tree-id122 . -138) (undo-tree-id123 . -138) (undo-tree-id124 . -138) (undo-tree-id125 . -138) (undo-tree-id126 . -138) (undo-tree-id127 . -156) 16508) nil (25752 37902 200790 572000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16305 . 16306) (#("
" 0 1 (fontified nil)) . -16461) (16305 . 16462) 16303) nil (25752 37902 200782 610000) 0 nil])
([nil nil ((16305 . 16306) (#("
" 0 1 (rear-nonsticky t fontified t)) . -16305) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 16290) nil (25752 37902 200779 327000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t latex-env-pair t)) . 16304) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . 1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1)) nil (25752 37902 200771 714000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16304) (undo-tree-id101 . -1) (undo-tree-id102 . -1)) nil (25752 37902 200626 375000) 0 nil])
([nil nil ((16459 . 16460)) nil (25752 37902 200623 581000) 0 nil])
([nil nil ((#("    \\captions{Пример построения пожарной сигнализации на основе системы BOLID,
которая включает три автоматические установки пожаротушения (порошковое,
газовое, водяное)}
" 0 4 (fontified t latex-env-pair t) 4 13 (face font-lock-keyword-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 79 (fontified t) 79 114 (fontified t) 114 152 (fontified t) 152 170 (fontified t) 170 171 (fontified t)) . 16290) (undo-tree-id55 . -169) (undo-tree-id56 . -170) (undo-tree-id57 . -17) (undo-tree-id58 . 1) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -171) (undo-tree-id64 . -171) (undo-tree-id65 . -169) (undo-tree-id66 . -17) (undo-tree-id67 . -13) (undo-tree-id68 . -13) (undo-tree-id69 . -14) (undo-tree-id70 . -14) (undo-tree-id71 . -14) (undo-tree-id72 . -14) (undo-tree-id73 . -14) (undo-tree-id74 . -14) (undo-tree-id75 . -14) (undo-tree-id76 . -14) (undo-tree-id77 . -93) (undo-tree-id78 . -93) (undo-tree-id79 . -169) (undo-tree-id80 . -169) (undo-tree-id81 . -170) (undo-tree-id82 . -170) (undo-tree-id83 . -170) (undo-tree-id84 . -170) (undo-tree-id85 . -170) (undo-tree-id86 . -169) (undo-tree-id87 . -169) (undo-tree-id88 . -169) (undo-tree-id89 . -169) (undo-tree-id90 . -169) (undo-tree-id91 . -169) (undo-tree-id92 . -171) (undo-tree-id93 . -17) (undo-tree-id94 . -169) (undo-tree-id95 . -169) (undo-tree-id96 . -169) (undo-tree-id97 . -169) (undo-tree-id98 . -169) (undo-tree-id99 . -17) (undo-tree-id100 . -171) 16307) nil (25752 37902 200618 832000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16343 . 16344) (#("
" 0 1 (fontified nil)) . -16510) (16339 . 16511) 16307) nil (25752 37902 200585 29000) 0 nil])
([nil nil ((#("\\" 0 1 (latex-env-pair t fontified t)) . -14045) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#("c" 0 1 (face font-lock-keyword-face latex-env-pair t fontified t)) . -14046) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (#("a" 0 1 (face font-lock-keyword-face latex-env-pair t fontified t)) . -14047) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 14048 (14045 . 14048) (14042 . 14045) (14039 . 14042) (#("i" 0 1 (face font-lock-keyword-face latex-env-pair t fontified t)) . -14039) (undo-tree-id227 . -1) (14032 . 14040) (14029 . 14032) (14027 . 14029) (#("." 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . -14027) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("e" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . -14028) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("}" 0 1 (latex-env-pair t fontified t)) . -14029) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . 1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 14030 (14023 . 14030) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -14023) (undo-tree-id241 . -1) (14019 . 14024) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14019) (undo-tree-id242 . -1) (14015 . 14020) (14014 . 14015) (#("o" 0 1 (fontified t)) . -14014) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) 14015 (14014 . 14015) (t 25752 37902 204533 715000)) nil (25752 37981 134978 987000) 0 nil])
([nil nil ((14046 . 14048)) nil (25752 37981 134869 616000) 0 nil])
([nil nil ((#("  
" 0 2 (latex-env-pair t fontified t) 2 3 (fontified t)) . 14043) (undo-tree-id194 . -2) (undo-tree-id195 . -1) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -3) 14044) nil (25752 37981 134865 286000) 0 nil])
([nil nil ((#("ис. " 0 4 (fontified t)) . 14093) (undo-tree-id192 . -3) (undo-tree-id193 . -4)) nil (25752 37981 134751 375000) 0 nil])
([nil nil ((#("1- " 0 3 (fontified t)) . 14093) (undo-tree-id190 . -2) (undo-tree-id191 . -3)) nil (25752 37981 134748 22000) 0 nil])
([nil nil ((#("Р" 0 1 (fontified t)) . 14092) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1)) nil (25752 37981 134743 203000) 0 nil])
([nil nil ((14097 . 14102) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14097) (undo-tree-id173 . -1) (14092 . 14098) (#("c" 0 1 (fontified t)) . -14092) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 14093 (14092 . 14093)) nil (25752 37981 134732 657000) 0 nil])
([nil nil ((14233 . 14234)) nil (25752 37981 134727 489000) 0 nil])
([nil nil ((14092 . 14094)) nil (25752 37981 134725 184000) 0 nil])
([nil nil ((14161 . 14163)) nil (25752 37981 134722 251000) 0 nil])
([nil nil ((14230 . 14232)) nil (25752 37981 134719 876000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14091) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1)) nil (25752 37981 134715 616000) 0 nil])
([nil nil ((14246 . 14251) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -14246) (undo-tree-id132 . -1) (14240 . 14247) (#(" " 0 1 (fontified t)) . -14240) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("\\" 0 1 (fontified t)) . -14241) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 14242 (14241 . 14242) (#(" " 0 1 (fontified t)) . -14241) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) 14242 (14239 . 14242) 14229) nil (25752 37981 134695 83000) 0 nil])
([nil nil ((14251 . 14252)) nil (25752 37981 134585 851000) 0 nil])
([nil nil ((14035 . 14036) (t 25752 37981 134100 594000)) nil (25752 38033 24795 166000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-keyword-face latex-env-pair t fontified t)) . 14037) (undo-tree-id250 . -1) (undo-tree-id251 . -1)) nil (25752 38033 24789 928000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 14101) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (t 25752 38033 30482 482000)) nil (25752 38118 974249 770000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t latex-env-pair t)) . 16402) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (t 25752 38118 980010 838000)) nil (25752 38129 60035 633000) 0 nil])
([nil nil ((98 . 99) (#("
" 0 1 (face font-lock-function-name-face fontified t)) . -98) (undo-tree-id263 . -1) 35 (t 25752 38129 66622 155000)) nil (25752 38174 803964 570000) 0 nil])
([nil nil ((35 . 106) (#("ПРИМЕНЕНИЕ ИНТЕЛЛЕКТУЛЬНЫХ систем пожарной безопасности в умных городах" 0 63 (face font-lock-function-name-face fontified t) 63 64 (face font-lock-function-name-face fontified t) 64 71 (face font-lock-function-name-face fontified t)) . 35) 105) nil (25752 38174 803950 252000) 0 nil])
([nil nil ((27 . 34) (#("section" 0 7 (face font-lock-keyword-face fontified t)) . 27) (undo-tree-id264 . -6) (undo-tree-id265 . -7) (undo-tree-id266 . -7) (t 25752 38174 809704 476000)) nil (25752 39028 272168 882000) 0 nil])
([nil nil ((120 . 122) (#("}" 0 1 (latex-env-pair t fontified t)) . -120) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . 1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) 121 (112 . 121) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -112) (undo-tree-id380 . -1) (108 . 113)) nil (25752 39042 480609 293000) 0 nil] [nil nil ((2 . 12) (#("ragg" 0 4 (fontified nil)) . 2) (2 . 6) (#("raggedleft" 0 10 (face font-lock-keyword-face fontified t)) . -2) (undo-tree-id287 . -10) (undo-tree-id289 . -6) (undo-tree-id291 . -9) (undo-tree-id293 . -10) (undo-tree-id295 . -10) 12 (2 . 12) (#("textbf" 0 6 (face font-lock-keyword-face fontified t)) . 2) (undo-tree-id296 . -5) (undo-tree-id297 . -6) (undo-tree-id298 . -6) (undo-tree-id300 . -6) (undo-tree-id302 . -6) (undo-tree-id304 . -6) (undo-tree-id306 . -6) (undo-tree-id308 . -6) (undo-tree-id310 . -6) (undo-tree-id312 . -6) (t 25752 38845 839355 570000)) ((2 . 8) (#("raggedleft" 0 10 (face font-lock-keyword-face fontified nil)) . 2) (undo-tree-id364 . -10) (2 . 12) (#("ragg" 0 4 (fontified nil)) . 2) (2 . 6) (#("raggedleft" 0 10 (face font-lock-keyword-face fontified t)) . 2) (undo-tree-id365 . -9) (undo-tree-id366 . -9) (undo-tree-id367 . -9) (undo-tree-id368 . -9) (undo-tree-id369 . -9) (undo-tree-id370 . -9) (undo-tree-id371 . -9) (undo-tree-id372 . -9) (undo-tree-id373 . -9) (t 25752 38911 495661 951000)) (25752 38910 349452 472000) 0 nil] [nil nil ((#("textbf{МРНТИ 50.41.17}" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 21 (face (bold) fontified t) 21 22 (fontified t)) . 2) (undo-tree-id267 . -21) (undo-tree-id268 . -6) (undo-tree-id269 . -6) (undo-tree-id270 . -6) (undo-tree-id271 . -6) (undo-tree-id272 . -6) (undo-tree-id273 . -6) (undo-tree-id274 . -6) (undo-tree-id275 . -6) (undo-tree-id276 . -6) (undo-tree-id277 . -6) (undo-tree-id278 . -6) (undo-tree-id279 . -6) (undo-tree-id280 . -6) (undo-tree-id281 . -6) (undo-tree-id282 . -22) (undo-tree-id283 . -22) (t 25752 38845 839355 570000)) ((2 . 24)) (25752 38868 120595 564000) 0 nil])
([nil nil ((nil rear-nonsticky nil 540 . 541) (#("
" 0 1 (fontified nil)) . -555) (540 . 556) 517) nil (25752 39046 473300 383000) 0 nil] [nil nil ((nil rear-nonsticky nil 541 . 542) (#("
" 0 1 (fontified nil)) . -556) (541 . 557)) ((#("
\\begin{center}
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil latex-env-pair t) 8 14 (face font-lock-function-name-face fontified nil latex-env-pair t) 14 15 (fontified nil latex-env-pair t) 15 16 (fontified nil)) . 541) (undo-tree-id381 . -15) (undo-tree-id382 . -1) (undo-tree-id383 . -15) (556 . 557) (nil rear-nonsticky t 541 . 542)) (25752 39042 480181 236000) 0 nil])
([nil nil ((44 . 50) (#("i" 0 1 (fontified t)) . -44) (undo-tree-id284 . -1) (37 . 45) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -37) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (29 . 38) (28 . 29) 11) ((#("
" 0 1 (fontified t)) . 28) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (#("\\raggedri" 0 8 (face font-lock-keyword-face fontified nil) 8 9 (face font-lock-keyword-face fontified nil)) . 29) (undo-tree-id326 . -8) (undo-tree-id327 . -9) (undo-tree-id328 . -9) (undo-tree-id329 . 1) (undo-tree-id330 . -8) (undo-tree-id331 . 1) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (37 . 38) (#("ight{doi" 0 4 (face font-lock-keyword-face fontified nil) 4 7 (fontified nil) 7 8 (fontified nil)) . 37) (undo-tree-id340 . -7) (undo-tree-id341 . -8) (undo-tree-id342 . 1) (undo-tree-id343 . -7) (undo-tree-id344 . 4) (undo-tree-id345 . -5) (undo-tree-id346 . -7) (undo-tree-id347 . -7) (undo-tree-id348 . -7) (undo-tree-id349 . -7) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (44 . 45) (#("i ...}" 0 6 (fontified t)) . 44) (undo-tree-id353 . -5) (undo-tree-id354 . -5) (undo-tree-id355 . 1) (undo-tree-id356 . -6) (undo-tree-id357 . -5) (undo-tree-id358 . -5) (undo-tree-id359 . -5) (undo-tree-id360 . -5) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -5) (t 25752 38886 965796 557000)) (25752 38886 958791 476000) 0 nil])
nil
([nil nil ((542 . 545) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 542) (undo-tree-id384 . -4) (undo-tree-id385 . -5) (undo-tree-id386 . -5)) nil (25752 39046 473294 307000) 0 nil])
nil
nil
([nil nil ((31 . 34) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -31) (undo-tree-id387 . -1) (27 . 32) (#("chapter" 0 7 (face font-lock-keyword-face fontified t)) . 27) (undo-tree-id388 . -6) (undo-tree-id389 . -7) (undo-tree-id390 . -7) (t 25752 39046 478254 574000)) nil (25752 39073 552446 806000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -278) (undo-tree-id442 . -1) (t 25752 39073 558105 975000)) nil (25752 39207 746067 917000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 278) (undo-tree-id440 . -1) (undo-tree-id441 . -1)) nil (25752 39207 746065 53000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 278) (undo-tree-id438 . -1) (undo-tree-id439 . -1)) nil (25752 39207 746061 631000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 278) (undo-tree-id436 . -1) (undo-tree-id437 . -1)) nil (25752 39207 746058 279000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 278) (undo-tree-id434 . -1) (undo-tree-id435 . -1)) nil (25752 39207 746054 926000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 278) (undo-tree-id432 . -1) (undo-tree-id433 . -1)) nil (25752 39207 746052 63000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 278) (undo-tree-id430 . -1) (undo-tree-id431 . -1)) nil (25752 39207 746048 292000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 278) (undo-tree-id428 . -1) (undo-tree-id429 . -1)) nil (25752 39207 746045 9000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 278) (undo-tree-id424 . 1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1)) nil (25752 39207 746040 749000) 0 nil])
([nil nil ((277 . 278) (#("
" 0 1 (fontified t)) . -277) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 248) nil (25752 39207 745967 206000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 276) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . 1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1)) nil (25752 39307 615178 85000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 1326) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (t 25752 39207 750702 934000)) nil (25752 39540 59907 404000) 0 nil] [nil nil ((414 . 415) (t 25752 39207 750702 934000) 414) ((#("
" 0 1 (fontified t)) . 414) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1)) (25752 39307 614869 387000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1326) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1)) nil (25752 39540 59903 633000) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t)) . 1326) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1)) nil (25752 39540 59899 861000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 1326) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1)) nil (25752 39540 59895 42000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1326) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1)) nil (25752 39540 59890 642000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 1326) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1)) nil (25752 39540 59885 404000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 1326) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1)) nil (25752 39540 59879 328000) 0 nil])
([nil nil ((1339 . 1343) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -1339) (undo-tree-id446 . -1) (1335 . 1340) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -1335) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -1336) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) 1337 (1327 . 1337)) nil (25752 39540 59867 455000) 0 nil])
([nil nil ((1330 . 1340) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -1330) (undo-tree-id538 . -1) (1327 . 1331) (#("c" 0 1 (face font-lock-keyword-face fontified t)) . -1327) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -1328) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 1329 (1326 . 1329) (1325 . 1326) (t 25752 39540 65546 40000) 1325) nil (25752 39570 452135 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1885 . 1886) (#("
" 0 1 (fontified nil)) . -1900) (1885 . 1901) 1875) nil (25752 39570 452125 23000) 0 nil])
([nil nil ((1887 . 1890) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 1887) (undo-tree-id532 . -4) (undo-tree-id533 . -5) (undo-tree-id534 . -5) (undo-tree-id535 . -5) (undo-tree-id536 . -5) (undo-tree-id537 . -5)) nil (25752 39570 452122 160000) 0 nil])
([nil nil ((1581 . 1582) (#("
" 0 1 (fontified t)) . -1581) (undo-tree-id528 . -1) (#("
" 0 1 (fontified t)) . -1581) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) 1555) nil (25752 39570 452115 944000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 1580) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . 1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1)) nil (25752 39570 452110 706000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1580) (undo-tree-id513 . -1) (undo-tree-id514 . -1)) nil (25752 39570 452102 255000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 1580) (undo-tree-id511 . -1) (undo-tree-id512 . -1)) nil (25752 39570 452098 903000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1580) (undo-tree-id509 . -1) (undo-tree-id510 . -1)) nil (25752 39570 452095 969000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1580) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1)) nil (25752 39570 452092 128000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 1580) (undo-tree-id504 . -1) (undo-tree-id505 . -1)) nil (25752 39570 452088 776000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1580) (undo-tree-id502 . -1) (undo-tree-id503 . -1)) nil (25752 39570 452084 934000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 1580) (undo-tree-id500 . -1) (undo-tree-id501 . -1)) nil (25752 39570 452081 652000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 1580) (undo-tree-id498 . -1) (undo-tree-id499 . -1)) nil (25752 39570 452077 391000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 1580) (undo-tree-id494 . 1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1)) nil (25752 39570 452072 642000) 0 nil])
([nil nil ((1580 . 1581)) nil (25752 39570 452057 277000) 0 nil])
([nil nil ((nil face (italic) 49189 . 49190) (nil face (font-lock-keyword-face italic) 49182 . 49189) (#("\\textbf{" 0 7 (face (font-lock-keyword-face italic)) 7 8 (face (italic))) . 49179) (49187 . 49198) (nil face (italic) 48219 . 48220) (nil face (font-lock-keyword-face italic) 48212 . 48219) (#("\\textbf{" 0 7 (face (font-lock-keyword-face italic)) 7 8 (face (italic))) . 48209) (48217 . 48228) (nil face font-lock-keyword-face 46708 . 46715) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 46705) (46713 . 46724) (nil face font-lock-keyword-face 45247 . 45254) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 45244) (45252 . 45263) (nil face font-lock-keyword-face 43879 . 43886) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 43876) (43884 . 43895) (nil face font-lock-keyword-face 9960 . 9967) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 9957) (9965 . 9976) (nil face font-lock-keyword-face 6328 . 6335) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 6325) (6333 . 6344) (nil face font-lock-keyword-face 5369 . 5376) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5366) (5374 . 5385) (nil face font-lock-keyword-face 4034 . 4041) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 4031) (4039 . 4050) (nil face font-lock-keyword-face 3876 . 3883) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 3873) (3881 . 3892) (nil fontified t 2981 . 2982) (nil fontified t 2974 . 2981) (nil face font-lock-keyword-face 2974 . 2981) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2971) (2979 . 2990) (nil fontified t 2820 . 2821) (nil fontified t 2813 . 2820) (nil face font-lock-keyword-face 2813 . 2820) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2810) (2818 . 2829) (nil fontified t 2744 . 2745) (nil fontified t 2737 . 2744) (nil face font-lock-keyword-face 2737 . 2744) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2734) (2742 . 2753) (nil fontified t 2579 . 2580) (nil fontified t 2572 . 2579) (nil face font-lock-keyword-face 2572 . 2579) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2569) (2577 . 2588) (nil fontified t 1446 . 1447) (nil fontified t 1439 . 1446) (nil face font-lock-keyword-face 1439 . 1446) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 1436) (1444 . 1455) (nil fontified t 1168 . 1169) (nil fontified t 1161 . 1168) (nil face font-lock-keyword-face 1161 . 1168) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 1158) (1166 . 1177) (nil fontified t 136 . 137) (nil fontified t 129 . 136) (nil face font-lock-keyword-face 129 . 136) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 126) (134 . 145) (nil fontified t 11 . 12) (t 25752 39570 458712 593000) (nil fontified t 5 . 11) (t 25752 39570 458712 593000) (nil face font-lock-keyword-face 5 . 11) (t 25752 39570 458712 593000) (nil fontified t 4 . 5) (t 25752 39570 458712 593000) (nil face font-lock-keyword-face 4 . 5) (t 25752 39570 458712 593000) (#("\\textbf{" 0 1 (face font-lock-keyword-face fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 1) (t 25752 39570 458712 593000) (9 . 20) (t 25752 39570 458712 593000)) nil (25752 39632 913707 454000) 0 nil])
([nil nil ((2735 . 2741) (t 25752 39632 915036 534000)) nil (25752 39783 735910 884000) 0 nil])
([nil nil ((2738 . 2748) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -2738) (undo-tree-id556 . -1) (2734 . 2739) (2733 . 2734)) nil (25752 39783 735908 21000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3253 . 3254) (#("
" 0 1 (fontified nil)) . -3268) (3253 . 3269) 3243) nil (25752 39783 735903 411000) 0 nil])
([nil nil ((3255 . 3258) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 3255) (undo-tree-id553 . -4) (undo-tree-id554 . -5) (undo-tree-id555 . -5)) nil (25752 39783 735897 125000) 0 nil])
([nil nil ((3130 . 3131) (#("
" 0 1 (fontified t)) . -3130) (undo-tree-id563 . -1) (#("
" 0 1 (fontified t)) . -3130) (undo-tree-id564 . -1) 3128 (t 25752 39783 740875 552000)) nil (25752 39823 979178 224000) 0 nil])
([nil nil ((3150 . 3152) (#(" " 0 1 (fontified t)) . -3150) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) 3151) nil (25752 39823 979170 332000) 0 nil])
([nil nil ((4079 . 4085) (4076 . 4079) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -4076) (undo-tree-id573 . -1) (4069 . 4077) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -4069) (undo-tree-id574 . -1) (4065 . 4070) (4064 . 4065) (t 25752 39823 987321 368000) 4064) nil (25752 40576 255082 487000) 0 nil])
([nil nil ((6920 . 6921) 6893) nil (25752 40576 255077 249000) 0 nil])
([nil nil ((6921 . 6926)) nil (25752 40576 255074 804000) 0 nil])
([nil nil ((6926 . 6935) (#("multicols" 0 9 (fontified nil)) . -6926) (6926 . 6935)) nil (25752 40576 255072 360000) 0 nil])
([nil nil ((6935 . 6937)) nil (25752 40576 255069 7000) 0 nil])
([nil nil ((#("{" 0 1 (latex-env-pair t fontified t)) . -6936) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) 6937) nil (25752 40576 255062 861000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t)) . 6921) (undo-tree-id575 . -15) (undo-tree-id576 . 1) (undo-tree-id577 . 1) (undo-tree-id578 . -14) (undo-tree-id579 . -14) (undo-tree-id580 . -14) (undo-tree-id581 . -14) (undo-tree-id582 . -14) (undo-tree-id583 . 2) (undo-tree-id584 . -15) (undo-tree-id585 . 12) (undo-tree-id586 . -5) (undo-tree-id587 . -14) (undo-tree-id588 . -14) (undo-tree-id589 . -14) (undo-tree-id590 . -14) (undo-tree-id591 . -14) (undo-tree-id592 . -14) (undo-tree-id593 . -14) (undo-tree-id594 . -16) 6935 (t 25752 40576 259859 980000)) nil (25752 40711 765463 52000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14151 . 14152) (#("
" 0 1 (fontified nil)) . -14167) (14151 . 14168) 14138) nil (25752 40711 765435 116000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 14152) (undo-tree-id599 . -15) (undo-tree-id600 . -15) (undo-tree-id601 . -16) (undo-tree-id602 . -16) (undo-tree-id603 . -16) (undo-tree-id604 . -16) (undo-tree-id605 . -16) (undo-tree-id606 . -16) (t 25752 40711 769116 380000)) nil (25752 40811 692931 202000) 0 nil])
([nil nil ((nil rear-nonsticky nil 43929 . 43930) (#("
" 0 1 (fontified nil)) . -43945) (43929 . 43946) 43891) nil (25752 40811 692923 31000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 43930) (undo-tree-id595 . -15) (undo-tree-id596 . -15) (undo-tree-id597 . -16) (undo-tree-id598 . -16)) nil (25752 40811 692919 678000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45297 . 45298) (#("
" 0 1 (fontified nil)) . -45313) (45297 . 45314) 45239) nil (25752 40811 692904 34000) 0 nil])
([nil nil ((14166 . 14167) (14157 . 14166) (#("multicols" 0 9 (fontified nil)) . -14157) (14157 . 14166) (14152 . 14157) (14151 . 14152) (t 25752 40811 698568 23000) 14141) nil (25752 40904 844491 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14406 . 14407) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -14422) (14406 . 14423)) nil (25752 40904 844487 840000) 0 nil])
([nil nil ((14411 . 14413) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14411) (undo-tree-id607 . -1) (14408 . 14412) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -14408) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -14409) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14410) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -14411) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) 14412 (14410 . 14412) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14410) (undo-tree-id647 . -1) (14408 . 14411) (#("end" 0 3 (face font-lock-keyword-face fontified t)) . 14408) (undo-tree-id648 . -2) (undo-tree-id649 . -3) (undo-tree-id650 . -3)) nil (25752 40904 844481 136000) 0 nil])
([nil nil ((14425 . 14427) (14424 . 14425)) nil (25752 40904 844443 2000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 20 (fontified t latex-env-pair t) 20 21 (fontified t)) . 14407) (undo-tree-id684 . -17) (undo-tree-id685 . -20) (undo-tree-id686 . 1) (undo-tree-id687 . -19) (undo-tree-id688 . -19) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . 1) (undo-tree-id704 . 2) (undo-tree-id705 . -20) (undo-tree-id706 . 4) (undo-tree-id707 . -18) (undo-tree-id708 . -19) (undo-tree-id709 . -19) (undo-tree-id710 . -19) (undo-tree-id711 . -19) (undo-tree-id712 . -19) (undo-tree-id713 . -19) (undo-tree-id714 . -19) (undo-tree-id715 . -19) (undo-tree-id716 . -19) (undo-tree-id717 . -19) (undo-tree-id718 . -19) (undo-tree-id719 . -19) (undo-tree-id720 . -19) (undo-tree-id721 . -19) (undo-tree-id722 . -19) (undo-tree-id723 . -21) 14426 (t 25752 40904 851390 185000)) nil (25752 40945 440254 136000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (rear-nonsticky t fontified t)) . 14152) (undo-tree-id670 . -15) (undo-tree-id671 . -14) (undo-tree-id672 . -16) (undo-tree-id673 . -16) (undo-tree-id674 . -16) (undo-tree-id675 . -14) (undo-tree-id676 . 2) (undo-tree-id677 . -15) (undo-tree-id678 . 12) (undo-tree-id679 . -5) (undo-tree-id680 . -14) (undo-tree-id681 . -14) (undo-tree-id682 . -14) (undo-tree-id683 . -16) 14166) nil (25752 40945 440232 136000) 0 nil])
([nil nil ((14170 . 14171) (#("}" 0 1 (fontified t latex-env-pair t)) . -14170) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . 1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) 14171 (14168 . 14171) (#("t" 0 1 (fontified t latex-env-pair t)) . -14168) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) 14169 (14167 . 14169)) nil (25752 40945 440217 888000) 0 nil])
([nil nil ((#("[ht]" 0 4 (fontified t latex-env-pair t)) . 14167) (undo-tree-id754 . -3) (undo-tree-id755 . -3) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -3) (undo-tree-id763 . -3) (undo-tree-id764 . -3) (undo-tree-id765 . -3) (undo-tree-id766 . -3) (undo-tree-id767 . -3) (undo-tree-id768 . -3) (undo-tree-id769 . -3) (undo-tree-id770 . -3) (undo-tree-id771 . -3) (undo-tree-id772 . -3) (undo-tree-id773 . -3) (undo-tree-id774 . -3) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (undo-tree-id777 . -3) (undo-tree-id778 . -3) (undo-tree-id779 . -3) (undo-tree-id780 . -3) (undo-tree-id781 . -2) (undo-tree-id782 . -1) (undo-tree-id783 . 4) (undo-tree-id784 . -1) (undo-tree-id785 . 1) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (t 25752 40945 444500 766000)) nil (25752 42525 715507 73000) 0 nil])
([nil nil ((14155 . 14164) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -14155) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) 14156 (14152 . 14156)) nil (25752 42534 774725 700000) 0 nil] [nil nil ((#("0" 0 1 (fontified t)) . 14206) (undo-tree-id752 . -1)) ((14206 . 14207)) (25752 42525 315723 541000) 0 nil])
([nil nil ((14179 . 14182) (t 25752 42534 782446 26000)) nil (25752 42630 480554 715000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 14206) (undo-tree-id750 . -1)) ((14206 . 14207)) (25752 42525 99581 315000) 0 nil])
([nil nil ((#("\\columnbreak
" 0 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t)) . 14152) (undo-tree-id1050 . -12) (undo-tree-id1051 . -13) (undo-tree-id1052 . -11) (undo-tree-id1053 . -13) (undo-tree-id1054 . -11) (undo-tree-id1055 . -11) (undo-tree-id1056 . -11) (undo-tree-id1057 . -11) (undo-tree-id1058 . -13) 14163 (t 25752 42630 488587 510000)) nil (25752 42651 412035 946000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 14206) (undo-tree-id748 . -1)) ((14206 . 14207)) (25752 42524 678727 295000) 0 nil])
([nil nil ((14166 . 14167) (14157 . 14166) (#("multicols" 0 9 (fontified nil)) . -14157) (14157 . 14166) (14152 . 14157) (14151 . 14152) 14149) nil (25752 42651 412026 936000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 14206) (undo-tree-id746 . -1)) ((14206 . 14207)) (25752 42524 504419 649000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14408 . 14409) (#("
" 0 1 (fontified nil)) . -14424) (14408 . 14425)) nil (25752 42651 412022 536000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 14206) (undo-tree-id744 . -1)) ((14206 . 14207)) (25752 42524 361679 496000) 0 nil])
([nil nil ((14413 . 14415) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14413) (undo-tree-id1046 . -1) (14410 . 14414) (#("end" 0 3 (face font-lock-keyword-face fontified t)) . 14410) (undo-tree-id1047 . -2) (undo-tree-id1048 . -3) (undo-tree-id1049 . -3)) nil (25752 42651 412017 787000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 14206) (undo-tree-id742 . -1)) ((14206 . 14207)) (25752 42524 49543 286000) 0 nil])
([nil nil ((14426 . 14429)) nil (25752 42651 412002 143000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 14206) (undo-tree-id740 . -1)) ((14206 . 14207)) (25752 42523 902586 46000) 0 nil])
([nil nil ((14167 . 14168) (t 25752 42651 415139 343000) 14166) nil (25752 42654 605313 972000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 14206) (undo-tree-id738 . -1)) ((14206 . 14207)) (25752 42523 782523 359000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16487 . 16488) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -16766) (16487 . 16767) (t 25752 42654 611788 469000)) nil (25752 42711 798755 582000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 14206) (undo-tree-id736 . -1)) ((14206 . 14207)) (25752 42523 609525 865000) 0 nil])
([nil nil ((#("Беспроводная система пожарной сигнализации и автоматики,
  включающая в себя облачный сервис для технологического мониторинга
  {[}7{]}" 0 1 (fontified t) 1 56 (fontified t) 56 57 (fontified t) 57 59 (fontified t) 59 126 (fontified t) 126 128 (fontified t) 128 135 (fontified t)) . 16595) (undo-tree-id1173 . -134) (undo-tree-id1174 . -59) (undo-tree-id1175 . -57) (undo-tree-id1176 . -126) (undo-tree-id1177 . -126) (undo-tree-id1178 . -57) (undo-tree-id1179 . -57) (undo-tree-id1180 . -57) (undo-tree-id1181 . -57) (undo-tree-id1182 . -57) (undo-tree-id1183 . -59) (undo-tree-id1184 . -59) (undo-tree-id1185 . -59) (undo-tree-id1186 . -59) (undo-tree-id1187 . -59) (undo-tree-id1188 . -59) (undo-tree-id1189 . -135) 16654) nil (25752 42711 798751 811000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 14206) (undo-tree-id734 . -1)) ((14206 . 14207)) (25752 42523 462591 604000) 0 nil])
([nil nil ((#("Пример построения пожарной сигнализации на основе системы BOLID,
которая включает три автоматические установки пожаротушения (порошковое,
газовое, водяное)" 0 65 (fontified t) 65 100 (fontified t) 100 138 (fontified t) 138 155 (fontified t)) . 16725) (undo-tree-id1152 . -154) (undo-tree-id1153 . -76) (undo-tree-id1154 . -65) (undo-tree-id1155 . -138) (undo-tree-id1156 . -138) (undo-tree-id1157 . -65) (undo-tree-id1158 . -65) (undo-tree-id1159 . -138) (undo-tree-id1160 . -138) (undo-tree-id1161 . -138) (undo-tree-id1162 . -138) (undo-tree-id1163 . -65) (undo-tree-id1164 . -76) (undo-tree-id1165 . -149) (undo-tree-id1166 . -149) (undo-tree-id1167 . -65) (undo-tree-id1168 . -76) (undo-tree-id1169 . -76) (undo-tree-id1170 . -76) (undo-tree-id1171 . -76) (undo-tree-id1172 . -155) 16801) nil (25752 42711 798740 78000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 14206) (undo-tree-id732 . -1)) ((14206 . 14207)) (25752 42523 269519 560000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16749 . 16750) (nil fontified nil 16595 . 16750) (16595 . 16750) 16594) nil (25752 42711 798726 738000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 14206) (undo-tree-id730 . -1)) ((14206 . 14207)) (25752 42522 845532 460000) 0 nil])
([nil nil ((#("\\begin{figure}
    \\centering
    \\includegraphics[width=0.8\\textwidth]{image2}
    \\caption{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t) 15 19 (fontified t) 19 21 (face font-lock-keyword-face fontified t) 21 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t latex-env-pair t) 30 34 (fontified t) 34 50 (face font-lock-keyword-face fontified t) 50 60 (fontified t) 60 70 (face font-lock-keyword-face fontified t) 70 72 (fontified t) 72 78 (face font-lock-builtin-face fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 83 (fontified t latex-env-pair t) 83 84 (fontified t rear-nonsticky t latex-env-pair t) 84 92 (face font-lock-keyword-face fontified t latex-env-pair t) 92 93 (fontified t latex-env-pair t) 93 94 (fontified t) 94 95 (fontified t) 95 99 (face font-lock-keyword-face fontified t) 99 100 (fontified t latex-env-pair t) 100 106 (face font-lock-function-name-face fontified t latex-env-pair t) 106 107 (fontified t latex-env-pair t) 107 108 (fontified t)) . 16787) (undo-tree-id1076 . -106) (undo-tree-id1077 . -107) (undo-tree-id1078 . -106) (undo-tree-id1079 . -11) (undo-tree-id1080 . -84) (undo-tree-id1081 . -34) (undo-tree-id1082 . -92) (undo-tree-id1083 . -92) (undo-tree-id1084 . -11) (undo-tree-id1085 . -15) (undo-tree-id1086 . -30) (undo-tree-id1087 . -80) (undo-tree-id1088 . -93) (undo-tree-id1089 . -93) (undo-tree-id1090 . -95) (undo-tree-id1091 . -108) (undo-tree-id1092 . -108) (undo-tree-id1093 . -95) (undo-tree-id1094 . -93) (undo-tree-id1095 . -93) (undo-tree-id1096 . -80) (undo-tree-id1097 . -30) (undo-tree-id1098 . -15) (undo-tree-id1099 . -15) (undo-tree-id1100 . -30) (undo-tree-id1101 . -80) (undo-tree-id1102 . -93) (undo-tree-id1103 . -93) (undo-tree-id1104 . -93) (undo-tree-id1105 . -93) (undo-tree-id1106 . -95) (undo-tree-id1107 . -95) (undo-tree-id1108 . -95) (undo-tree-id1109 . -93) (undo-tree-id1110 . -93) (undo-tree-id1111 . -80) (undo-tree-id1112 . -30) (undo-tree-id1113 . -15) (undo-tree-id1114 . -11) (undo-tree-id1115 . -26) (undo-tree-id1116 . -41) (undo-tree-id1117 . -91) (undo-tree-id1118 . -93) (undo-tree-id1119 . -93) (undo-tree-id1120 . -106) (undo-tree-id1121 . -93) (undo-tree-id1122 . -93) (undo-tree-id1123 . -93) (undo-tree-id1124 . -93) (undo-tree-id1125 . -93) (undo-tree-id1126 . -93) (undo-tree-id1127 . -43) (undo-tree-id1128 . -28) (undo-tree-id1129 . -13) (undo-tree-id1130 . -13) (undo-tree-id1131 . -28) (undo-tree-id1132 . -46) (undo-tree-id1133 . -46) (undo-tree-id1134 . -46) (undo-tree-id1135 . -93) (undo-tree-id1136 . -106) (undo-tree-id1137 . -108) (undo-tree-id1138 . -11) (undo-tree-id1139 . -106) (undo-tree-id1140 . -106) (undo-tree-id1141 . -106) (undo-tree-id1142 . -91) (undo-tree-id1143 . -91) (undo-tree-id1144 . -41) (undo-tree-id1145 . -41) (undo-tree-id1146 . -26) (undo-tree-id1147 . -26) (undo-tree-id1148 . -11) (undo-tree-id1149 . -11) (undo-tree-id1150 . -11) (undo-tree-id1151 . -108) 16798) nil (25752 42711 799021 398000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 14206) (undo-tree-id728 . -1)) ((14206 . 14207)) (25752 42521 751846 631000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16787) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1)) nil (25752 42722 395915 288000) 0 nil] [nil nil ((#("

Каждая система автоматического подавления пожаров имеет свои
преимущества и недостатки. Ниже приведены некоторые из них:

" 0 1 (fontified t) 1 2 (fontified t) 2 124 (fontified t)) . 16787) (undo-tree-id1059 . -123) (undo-tree-id1060 . -123) (undo-tree-id1061 . -123) (undo-tree-id1062 . -1) (undo-tree-id1063 . -2) (undo-tree-id1064 . -63) (undo-tree-id1065 . -123) (undo-tree-id1066 . -124) (undo-tree-id1067 . -124) (undo-tree-id1068 . -123) (undo-tree-id1069 . -63) (undo-tree-id1070 . -2) (undo-tree-id1071 . -1) (undo-tree-id1072 . -124) (undo-tree-id1073 . -123) (undo-tree-id1074 . -123) (undo-tree-id1075 . -124) 16910) ((16787 . 16911)) (25752 42711 798520 497000) 0 nil])
([nil nil ((14212 . 14216) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14212) (undo-tree-id901 . -1) (14208 . 14213) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14208) (undo-tree-id903 . -1) (14206 . 14209)) ((#("\\li" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil)) . 14206) (14208 . 14209) (#("inewi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 14208) (14212 . 14213) (#("idth" 0 4 (face font-lock-keyword-face fontified t)) . 14212)) (25752 42521 581709 209000) 0 nil] [nil nil ((14212 . 14216) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14212) (undo-tree-id724 . -1) (14208 . 14213) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -14208) (undo-tree-id726 . -1) (14206 . 14209)) ((#("\\li" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil)) . 14206) (14208 . 14209) (#("inewi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 14208) (14212 . 14213) (#("idth" 0 4 (face font-lock-keyword-face fontified t)) . 14212)) (25752 42252 583235 959000) 0 nil])
([nil nil ((16581 . 16582) (#("1" 0 1 (face font-lock-builtin-face fontified t)) . 16581) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1)) nil (25752 42722 395907 536000) 0 nil])
nil
([nil nil ((#("  \\centering
" 0 2 (fontified t latex-env-pair t) 2 12 (face font-lock-keyword-face fontified t latex-env-pair t) 12 13 (fontified t latex-env-pair t)) . 14168) (undo-tree-id904 . -12) (undo-tree-id905 . -13) (undo-tree-id906 . -7) (undo-tree-id907 . -7) (undo-tree-id908 . -11) (undo-tree-id910 . -11) (undo-tree-id912 . -11) (undo-tree-id914 . -13) 14179 (t 25752 42257 513967 522000)) ((14168 . 14181)) (25752 42521 458648 235000) 0 nil])
([nil nil ((#("\\begin{figure}
  \\centering
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 17 (fontified t latex-env-pair t) 17 27 (face font-lock-keyword-face fontified t latex-env-pair t) 27 28 (fontified t latex-env-pair t)) . 14153) (undo-tree-id847 . -22) (undo-tree-id848 . -27) (undo-tree-id849 . -28) (undo-tree-id850 . -7) (undo-tree-id851 . -22) (undo-tree-id852 . -22) (undo-tree-id853 . -22) (undo-tree-id854 . -22) (undo-tree-id855 . -14) (undo-tree-id856 . -14) (undo-tree-id857 . -14) (undo-tree-id858 . -14) (undo-tree-id859 . -14) (undo-tree-id860 . -14) (undo-tree-id861 . -14) (undo-tree-id862 . -14) (undo-tree-id863 . -14) (undo-tree-id864 . -14) (undo-tree-id865 . -14) (undo-tree-id866 . -14) (undo-tree-id867 . -14) (undo-tree-id868 . -14) (undo-tree-id869 . -14) (undo-tree-id870 . -14) (undo-tree-id871 . -14) (undo-tree-id872 . -14) (undo-tree-id873 . -14) (undo-tree-id874 . -14) (undo-tree-id875 . -14) (undo-tree-id876 . -14) (undo-tree-id877 . -14) (undo-tree-id878 . -14) (undo-tree-id879 . -14) (undo-tree-id880 . -14) (undo-tree-id881 . -14) (undo-tree-id882 . -13) (undo-tree-id883 . -26) (undo-tree-id884 . -22) (undo-tree-id885 . -7) (undo-tree-id886 . -7) (undo-tree-id887 . -7) (undo-tree-id888 . -7) (undo-tree-id889 . -28) (undo-tree-id890 . -7) (undo-tree-id891 . -22) (undo-tree-id892 . -7) (undo-tree-id893 . -7) (undo-tree-id894 . -15) (undo-tree-id895 . -22) (undo-tree-id896 . -22) (undo-tree-id897 . -22) (undo-tree-id898 . -22) (undo-tree-id899 . -22) (undo-tree-id900 . -28) 14175 (t 25752 42068 525004 589000)) ((14153 . 14181)) (25752 42252 459424 820000) 0 nil])
([nil nil ((24585 . 24587) (#("}" 0 1 (latex-env-pair t fontified t)) . -24585) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . 1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) 24586 (24577 . 24586) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -24577) (undo-tree-id1207 . -1) (24573 . 24578) (24572 . 24573) (t 25752 42722 398083 162000) 24572) nil (25752 42798 887294 807000) 0 nil])
([nil nil ((14160 . 14166) (#("figure" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 14160) (undo-tree-id942 . -5) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -6) (undo-tree-id949 . -6) (t 25752 42297 663747 202000)) ((14160 . 14166) (#("center" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 14160)) (25752 42521 311732 760000) 0 nil])
([nil nil ((#("\\end{figure}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 12 (fontified t latex-env-pair t) 12 13 (fontified t)) . 14346) (undo-tree-id834 . -12) (undo-tree-id835 . -11) (undo-tree-id836 . -11) (undo-tree-id837 . -7) (undo-tree-id838 . -2) (undo-tree-id839 . -13) (undo-tree-id840 . -13) (undo-tree-id841 . -7) (undo-tree-id842 . -7) (undo-tree-id843 . -7) (undo-tree-id844 . -7) (undo-tree-id845 . -7) (undo-tree-id846 . -13) 14353) ((14346 . 14359)) (25752 42252 243547 12000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24633 . 24634) (#("
" 0 1 (fontified nil)) . -24648) (24633 . 24649) 24601) nil (25752 42798 887285 658000) 0 nil])
([nil nil ((14366 . 14372) (#("figure" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 14366) (undo-tree-id936 . -5) (undo-tree-id937 . -6) (undo-tree-id938 . -6) (undo-tree-id939 . -6) (undo-tree-id940 . -6) (undo-tree-id941 . -6)) ((14366 . 14372) (#("center" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 14366)) (25752 42520 957521 86000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 14200) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1)) ((14200 . 14201)) (25752 42252 96420 756000) 0 nil])
([nil nil ((24635 . 24638) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 24635) (undo-tree-id1198 . -4) (undo-tree-id1199 . -5) (undo-tree-id1200 . -5)) nil (25752 42798 887281 397000) 0 nil])
([nil nil ((14229 . 14233) (#("r" 0 1 (fontified t)) . -14229) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (#("u" 0 1 (fontified t)) . -14230) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) 14231 (14227 . 14231) (#("i" 0 1 (fontified t)) . -14227) (undo-tree-id935 . -1) (14223 . 14228)) ((#("of{fi" 0 2 (face font-lock-keyword-face fontified nil) 2 4 (fontified nil) 4 5 (fontified nil)) . 14223) (undo-tree-id950 . -4) (undo-tree-id951 . -5) (undo-tree-id952 . 1) (undo-tree-id953 . -4) (undo-tree-id954 . 3) (undo-tree-id955 . -3) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (14227 . 14228) (#("igru" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 14227) (undo-tree-id985 . -2) (undo-tree-id986 . -4) (undo-tree-id987 . 2) (undo-tree-id988 . -2) (undo-tree-id989 . -3) (undo-tree-id990 . -3) (undo-tree-id991 . -4) (undo-tree-id992 . -4) (undo-tree-id993 . -4) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -3) (undo-tree-id998 . -3) (undo-tree-id999 . -2) (undo-tree-id1000 . -2) (undo-tree-id1001 . -2) (undo-tree-id1002 . -2) (undo-tree-id1003 . -2) (undo-tree-id1004 . -2) (undo-tree-id1005 . -2) (undo-tree-id1006 . -2) (undo-tree-id1007 . -2) (undo-tree-id1008 . -2) (undo-tree-id1009 . -2) (undo-tree-id1010 . -2) (undo-tree-id1011 . -2) (undo-tree-id1012 . -2) (undo-tree-id1013 . -2) (undo-tree-id1014 . -2) (undo-tree-id1015 . -2) (undo-tree-id1016 . -2) (undo-tree-id1017 . -2) (14229 . 14231) (#("ure}" 0 4 (fontified t)) . 14229) (undo-tree-id1018 . -3) (undo-tree-id1019 . -3) (undo-tree-id1020 . 1) (undo-tree-id1021 . -4) (undo-tree-id1022 . -3) (undo-tree-id1023 . -3) (undo-tree-id1024 . -3) (undo-tree-id1025 . -3) (undo-tree-id1026 . -3) (undo-tree-id1027 . -3) (undo-tree-id1028 . -3) (undo-tree-id1029 . -3) (undo-tree-id1030 . -3) (undo-tree-id1031 . -3) (undo-tree-id1032 . -3) (undo-tree-id1033 . -3) (undo-tree-id1034 . -3) (undo-tree-id1035 . -3) (undo-tree-id1036 . -3) (undo-tree-id1037 . -3) (undo-tree-id1038 . -3) (undo-tree-id1039 . -3) (undo-tree-id1040 . -3) (t 25752 42398 359861 304000)) (25752 42398 353623 430000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 14200) (undo-tree-id829 . -1) (undo-tree-id830 . -1)) ((14200 . 14201)) (25752 42251 950411 612000) 0 nil])
([nil nil ((24633 . 24634) 24591) nil (25752 42798 887590 585000) 0 nil])
nil
([nil nil ((#("a" 0 1 (fontified t)) . 14200) (undo-tree-id827 . -1) (undo-tree-id828 . -1)) ((14200 . 14201)) (25752 42251 803836 614000) 0 nil])
([nil nil ((24588 . 24590)) nil (25752 42818 251478 432000) 0 nil] [nil nil ((24588 . 24592)) ((#("    " 0 4 (fontified t)) . 24588)) (25752 42798 887262 889000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 14200) (undo-tree-id825 . -1) (undo-tree-id826 . -1)) ((14200 . 14201)) (25752 42251 679394 179000) 0 nil])
([nil nil ((24656 . 24657) (#("[" 0 1 (fontified t)) . -24656) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) 24657 (24650 . 24657) (#("i" 0 1 (fontified t)) . -24650) (undo-tree-id1274 . -1) (24646 . 24651) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -24646) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) 24647 (24643 . 24647) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -24643) (undo-tree-id1281 . -1) (24636 . 24644)) nil (25752 42818 251474 172000) 0 nil])
nil
([nil nil ((#("t" 0 1 (fontified t)) . 14200) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1)) ((14200 . 14201)) (25752 42251 511564 33000) 0 nil])
([nil nil ((#("Рис. 3 - Элементы системы пожарной безопасности на основе IoT" 0 61 (fontified t)) . 24672) (undo-tree-id1243 . -60) (undo-tree-id1244 . -20) (undo-tree-id1245 . -19) (undo-tree-id1246 . -18) (undo-tree-id1247 . -17) (undo-tree-id1248 . -16) (undo-tree-id1249 . -15) (undo-tree-id1250 . -14) (undo-tree-id1251 . -13) (undo-tree-id1252 . -12) (undo-tree-id1253 . -11) (undo-tree-id1254 . -10) (undo-tree-id1255 . -9) (undo-tree-id1256 . -8) (undo-tree-id1257 . -7) (undo-tree-id1258 . -6) (undo-tree-id1259 . -5) (undo-tree-id1260 . -4) (undo-tree-id1261 . -3) (undo-tree-id1262 . -2) (undo-tree-id1263 . -1) (undo-tree-id1264 . -61) (undo-tree-id1265 . -61)) nil (25752 42818 251461 41000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 14200) (undo-tree-id819 . -1) (undo-tree-id820 . -1)) ((14200 . 14201)) (25752 42251 294177 584000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24717 . 24718) (nil fontified nil 24657 . 24718) (24657 . 24718) 24656) nil (25752 42818 251447 73000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 14200) (undo-tree-id817 . -1) (undo-tree-id818 . -1)) ((14200 . 14201)) (25752 42250 962403 191000) 0 nil])
([nil nil ((24718 . 24719)) nil (25752 42818 251444 210000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 14200) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1)) ((14200 . 14201)) (25752 42250 400356 352000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24734) (undo-tree-id1242 . -1)) nil (25752 42818 251441 765000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 14200) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . 1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1)) ((14200 . 14201)) (25752 42249 953485 616000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24733) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1)) nil (25752 42818 252035 207000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 14335) (undo-tree-id789 . -1) (undo-tree-id790 . 1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1)) ((14335 . 14336) (t 25752 42166 207801 893000)) (25752 42166 201568 279000) 0 nil])
([nil nil ((24619 . 24623) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -24619) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (24617 . 24620) (24615 . 24617) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -24615) (undo-tree-id1284 . -1) (24613 . 24616) (#("0.8\\textwidth" 0 3 (fontified t) 3 13 (face font-lock-keyword-face fontified t)) . 24613) (undo-tree-id1285 . -12) (undo-tree-id1286 . -13) (undo-tree-id1287 . -13) (t 25752 42821 154207 909000)) nil (25752 42851 949421 690000) 0 nil] [nil nil ((24719 . 24720) (#("
" 0 1 (fontified t rear-nonsticky t)) . -24719) (undo-tree-id1208 . 1) (undo-tree-id1209 . -1) (undo-tree-id1210 . 1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) 24636) ((24719 . 24720) (#(" " 0 1 (fontified t)) . 24719)) (25752 42818 251416 64000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 31693 . 31694) (#("
" 0 1 (fontified nil)) . -31992) (31693 . 31993) (t 25752 42835 250797 222000)) nil (25752 42889 873318 668000) 0 nil] [nil nil ((24622 . 24623) (#("h" 0 1 (face font-lock-keyword-face fontified t)) . 24622) (undo-tree-id1288 . -1) (t 25752 42835 250797 222000)) ((24622 . 24623) (#("/" 0 1 (fontified t)) . 24622)) (25752 42851 949020 451000) 0 nil])
nil
([nil nil ((#("\\includegraphics[width=0.8\\textwidth]{image4}
" 0 16 (face font-lock-keyword-face fontified t) 16 26 (fontified t) 26 36 (face font-lock-keyword-face fontified t) 36 38 (fontified t) 38 44 (face font-lock-builtin-face fontified t) 44 46 (fontified t)) . 31993) (undo-tree-id1353 . -45) (undo-tree-id1354 . -38) (undo-tree-id1355 . -44) (undo-tree-id1356 . -44) (undo-tree-id1357 . -44) (undo-tree-id1358 . -44) (undo-tree-id1359 . -44) (undo-tree-id1360 . -44) (undo-tree-id1361 . -44) (undo-tree-id1362 . -38) (undo-tree-id1363 . -44) (undo-tree-id1364 . -44) (undo-tree-id1365 . -44) (undo-tree-id1366 . -44) (undo-tree-id1367 . -44) (undo-tree-id1368 . -44) (undo-tree-id1369 . -38) (undo-tree-id1370 . -38) (undo-tree-id1371 . -38) (undo-tree-id1372 . -38) (undo-tree-id1373 . -46)) nil (25752 42889 873315 316000) 0 nil])
nil
([nil nil ((31787 . 31788) (#("2" 0 1 (face font-lock-builtin-face fontified t)) . 31787) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1)) nil (25752 42889 873302 605000) 0 nil])
([nil nil ((#("Пример построения пожарной сигнализации на основе системы BOLID,
которая включает три автоматические установки пожаротушения (порошковое,
газовое, водяное)" 0 154 (fontified t) 154 155 (fontified t rear-nonsticky t)) . 31801) (undo-tree-id1336 . -154) (undo-tree-id1337 . -34) (undo-tree-id1338 . -65) (undo-tree-id1339 . -138) (undo-tree-id1340 . -138) (undo-tree-id1341 . -65) (undo-tree-id1342 . -65) (undo-tree-id1343 . -65) (undo-tree-id1344 . -34) (undo-tree-id1345 . -34) (undo-tree-id1346 . -34) (undo-tree-id1347 . -34) (undo-tree-id1348 . -34) (undo-tree-id1349 . -34) (undo-tree-id1350 . -155) 31835) nil (25752 42889 873299 252000) 0 nil])
([nil nil ((#("Рис. 4 - Стандартная архитектура системы пожарной безопасности на основе
IoT
" 0 77 (fontified t)) . 31839) (undo-tree-id1312 . -73) (undo-tree-id1313 . -76) (undo-tree-id1314 . -73) (undo-tree-id1315 . -73) (undo-tree-id1316 . -11) (undo-tree-id1317 . -10) (undo-tree-id1318 . -9) (undo-tree-id1319 . -8) (undo-tree-id1320 . -7) (undo-tree-id1321 . -6) (undo-tree-id1322 . -5) (undo-tree-id1323 . -4) (undo-tree-id1324 . -3) (undo-tree-id1325 . -2) (undo-tree-id1326 . -1) (undo-tree-id1327 . -77) (undo-tree-id1328 . -73) (undo-tree-id1329 . -73) (undo-tree-id1330 . -73) (undo-tree-id1331 . -73) (undo-tree-id1332 . -73) (undo-tree-id1333 . -73) (undo-tree-id1334 . -73) (undo-tree-id1335 . -77) 31912) nil (25752 42889 873289 125000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31802 . 31803) (#("
" 0 1 (fontified nil)) . -31879) (31802 . 31880) 31800) nil (25752 42889 873274 878000) 0 nil])
([nil nil ((31802 . 31803) (#("
" 0 1 (rear-nonsticky t fontified t)) . -31802) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) 31790) nil (25752 42889 873272 84000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 31801) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . 1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1)) nil (25752 42889 873266 357000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 31801) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1)) nil (25752 42889 873254 763000) 0 nil])
([nil nil ((31877 . 31878)) nil (25752 42889 873250 573000) 0 nil])
([nil nil ((31873 . 31874) (#("
" 0 1 (fontified t)) . -31873) (undo-tree-id1289 . -1) 31793) nil (25752 42889 873245 265000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 31915) (undo-tree-id1374 . 1) (undo-tree-id1375 . -1) (t 25752 42889 880497 444000)) nil (25752 42935 626414 343000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39900 . 39901) (#("
" 0 1 (fontified nil)) . -40120) (39900 . 40121) (t 25752 42892 570482 683000)) nil (25752 42960 883390 518000) 0 nil] [nil nil ((31694 . 31695) (t 25752 42892 570482 683000)) ((#("/" 0 1 (fontified t)) . 31694) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1)) (25752 42935 626085 321000) 0 nil])
([nil nil ((#("\\includegraphics[width=0.8\\textwidth]{image5}
" 0 16 (face font-lock-keyword-face fontified t) 16 26 (fontified t) 26 36 (face font-lock-keyword-face fontified t) 36 38 (fontified t) 38 44 (face font-lock-builtin-face fontified t) 44 46 (fontified t)) . 40121) (undo-tree-id1430 . -45) (undo-tree-id1431 . -38) (undo-tree-id1432 . -44) (undo-tree-id1433 . -44) (undo-tree-id1434 . -44) (undo-tree-id1435 . -44) (undo-tree-id1436 . -44) (undo-tree-id1437 . -44) (undo-tree-id1438 . -44) (undo-tree-id1439 . -38) (undo-tree-id1440 . -38) (undo-tree-id1441 . -46) (undo-tree-id1442 . -46)) nil (25752 42960 883387 654000) 0 nil])
nil
([nil nil ((39994 . 39995) (#("4" 0 1 (face font-lock-builtin-face fontified t)) . 39994) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1)) nil (25752 42960 883379 134000) 0 nil])
([nil nil ((#("Рис. 4 - Стандартная архитектура системы пожарной безопасности на основе IoT" 0 72 (fontified t) 72 73 (fontified t) 73 76 (fontified t)) . 40008) (undo-tree-id1417 . -75) (undo-tree-id1418 . -34) (undo-tree-id1419 . -34) (undo-tree-id1420 . -34) (undo-tree-id1421 . -34) (undo-tree-id1422 . -34) (undo-tree-id1423 . -34) (undo-tree-id1424 . -34) (undo-tree-id1425 . -76) 40042) nil (25752 42960 883373 965000) 0 nil])
([nil nil ((#("Рис. 5 - Система речевого оповещения о пожаре серии Альфа" 0 57 (fontified t)) . 40046) (undo-tree-id1402 . -56) (undo-tree-id1403 . -11) (undo-tree-id1404 . -11) (undo-tree-id1405 . -10) (undo-tree-id1406 . -9) (undo-tree-id1407 . -8) (undo-tree-id1408 . -7) (undo-tree-id1409 . -6) (undo-tree-id1410 . -5) (undo-tree-id1411 . -4) (undo-tree-id1412 . -3) (undo-tree-id1413 . -2) (undo-tree-id1414 . -1) (undo-tree-id1415 . -57) (undo-tree-id1416 . -57)) nil (25752 42960 883366 353000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40064 . 40065) (nil fontified nil 40008 . 40065) (40008 . 40065) 40007) nil (25752 42960 883356 645000) 0 nil])
([nil nil ((#("Р" 0 1 (fontified t)) . 40008) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1)) nil (25752 42960 883354 270000) 0 nil])
([nil nil ((#("и" 0 1 (fontified t)) . 40008) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1)) nil (25752 42960 883350 988000) 0 nil])
([nil nil ((#("с" 0 1 (fontified t)) . 40008) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1)) nil (25752 42960 883347 635000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 40008) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1)) nil (25752 42960 883343 864000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 40008) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1)) nil (25752 42960 883341 70000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 40008) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1)) nil (25752 42960 883336 880000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 40008) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1)) nil (25752 42960 883333 597000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 40008) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1)) nil (25752 42960 883330 245000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 40008) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1)) nil (25752 42960 884004 143000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 40094) (undo-tree-id1484 . -1)) nil (25752 42976 906762 337000) 0 nil] [nil nil ((#("С" 0 1 (fontified t)) . 40008) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1)) ((40008 . 40009)) (25752 42960 883317 883000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 40094) (undo-tree-id1483 . -1)) nil (25752 42976 906759 963000) 0 nil])
nil
([nil nil ((#("Р" 0 1 (fontified t)) . 31801) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1)) nil (25752 42976 906757 29000) 0 nil])
([nil nil ((#("и" 0 1 (fontified t)) . 31801) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1)) nil (25752 42976 906753 677000) 0 nil])
([nil nil ((#("с" 0 1 (fontified t)) . 31801) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1)) nil (25752 42976 906750 744000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 31801) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1)) nil (25752 42976 906747 880000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 31801) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1)) nil (25752 42976 906744 39000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . 31801) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1)) nil (25752 42976 906531 163000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 31801) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1)) nil (25752 42976 906527 810000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 31801) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1)) nil (25752 42976 906524 947000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 31801) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1)) nil (25752 42976 906522 83000) 0 nil])
([nil nil ((#("Р" 0 1 (fontified t)) . 24654) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1)) nil (25752 42976 906518 801000) 0 nil])
([nil nil ((#("и" 0 1 (fontified t)) . 24654) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1)) nil (25752 42976 906515 518000) 0 nil])
([nil nil ((#("с" 0 1 (fontified t)) . 24654) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1)) nil (25752 42976 906512 236000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 24654) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1)) nil (25752 42976 906508 464000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 24654) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1)) nil (25752 42976 906504 693000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 24654) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1)) nil (25752 42976 906500 363000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 24654) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1)) nil (25752 42976 906496 451000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 24654) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1)) nil (25752 42976 906491 702000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 24654) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1)) nil (25752 42976 906484 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 43745 . 43746) (#("
" 0 1 (fontified nil)) . -43937) (43745 . 43938) (t 25752 42976 913353 189000)) nil (25752 43035 98590 85000) 0 nil])
([nil nil ((#("\\includegraphics[width=0.8\\textwidth]{image6}
" 0 16 (fontified t face font-lock-keyword-face) 16 26 (fontified t) 26 36 (fontified t face font-lock-keyword-face) 36 38 (fontified t) 38 44 (face font-lock-builtin-face fontified t) 44 46 (fontified t)) . 43938) (undo-tree-id1584 . -45) (undo-tree-id1585 . -38) (undo-tree-id1586 . -38) (undo-tree-id1587 . -38) (undo-tree-id1588 . -38) (undo-tree-id1589 . -38) (undo-tree-id1590 . -38) (undo-tree-id1591 . -38) (undo-tree-id1592 . -38) (undo-tree-id1593 . -38) (undo-tree-id1594 . -38) (undo-tree-id1595 . -38) (undo-tree-id1596 . -38) (undo-tree-id1597 . -38) (undo-tree-id1598 . -38) (undo-tree-id1599 . -38) (undo-tree-id1600 . -38) (undo-tree-id1601 . -38) (undo-tree-id1602 . -38) (undo-tree-id1603 . -38) (undo-tree-id1604 . -38) (undo-tree-id1605 . -38) (undo-tree-id1606 . -38) (undo-tree-id1607 . -38) (undo-tree-id1608 . -38) (undo-tree-id1609 . -38) (undo-tree-id1610 . -38) (undo-tree-id1611 . -38) (undo-tree-id1612 . -38) (undo-tree-id1613 . -46) (undo-tree-id1614 . -46)) nil (25752 43035 98586 733000) 0 nil])
([nil nil ((nil fontified t 43839 . 43840) (nil face font-lock-builtin-face 43839 . 43840) (#("5" 0 1 (face font-lock-builtin-face fontified t)) . -43839) (43840 . 43841) 43839) nil (25752 43035 98571 368000) 0 nil])
([nil nil ((#("Рис. " 0 5 (fontified t)) . 43939) (undo-tree-id1580 . -4) (undo-tree-id1581 . -5) (undo-tree-id1582 . -3) (undo-tree-id1583 . -5)) nil (25752 43035 98568 993000) 0 nil])
([nil nil ((#("6 " 0 2 (fontified t)) . 43939) (undo-tree-id1577 . -1) (undo-tree-id1578 . -2) (undo-tree-id1579 . -2)) nil (25752 43035 98565 222000) 0 nil])
([nil nil ((#("- " 0 2 (fontified t)) . 43939) (undo-tree-id1574 . -1) (undo-tree-id1575 . -2) (undo-tree-id1576 . -2)) nil (25752 43035 98561 450000) 0 nil])
([nil nil ((#("Пример централизованной системы контроля, позволяющей выявлять
чрезвычайные ситуации в пределах обширной территории
" 0 63 (fontified t) 63 116 (fontified t)) . 43939) (undo-tree-id1546 . -115) (undo-tree-id1547 . -115) (undo-tree-id1548 . -115) (undo-tree-id1549 . -115) (undo-tree-id1550 . -36) (undo-tree-id1551 . -36) (undo-tree-id1552 . -36) (undo-tree-id1553 . -32) (undo-tree-id1554 . -24) (undo-tree-id1555 . -7) (undo-tree-id1556 . -116) (undo-tree-id1557 . -115) (undo-tree-id1558 . -63) (undo-tree-id1559 . -63) (undo-tree-id1560 . -63) (undo-tree-id1561 . -63) (undo-tree-id1562 . -63) (undo-tree-id1563 . -63) (undo-tree-id1564 . -63) (undo-tree-id1565 . -63) (undo-tree-id1566 . -63) (undo-tree-id1567 . -63) (undo-tree-id1568 . -115) (undo-tree-id1569 . -115) (undo-tree-id1570 . -115) (undo-tree-id1571 . -115) (undo-tree-id1572 . -115) (undo-tree-id1573 . -116) 44054) nil (25752 43035 98556 701000) 0 nil])
([nil nil ((nil rear-nonsticky nil 43968 . 43969) (nil fontified nil 43853 . 43969) (43853 . 43969) 43852) nil (25752 43035 98389 780000) 0 nil])
([nil nil ((#("Система речевого оповещения о пожаре серии Альфа" 0 1 (fontified t) 1 47 (fontified t) 47 48 (fontified t rear-nonsticky t)) . 43969) (undo-tree-id1543 . -47) (undo-tree-id1544 . -34) (undo-tree-id1545 . -48)) nil (25752 43035 98387 336000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -43968) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) 43916) nil (25752 43035 98382 447000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 44005) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1)) nil (25752 43204 579831 443000) 0 nil])
([nil nil ((47161 . 47171)) nil (25752 43206 10916 403000) 0 nil] [nil nil ((47160 . 47170)) ((#("\\centering" 0 10 (face font-lock-keyword-face fontified t)) . 47160) (undo-tree-id1716 . -9) (undo-tree-id1717 . -9)) (25752 43204 579641 824000) 0 nil] [nil nil ((47159 . 47162) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -47159) (undo-tree-id1693 . -1) (47152 . 47160)) ((#("\\centeri" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil)) . 47152) (undo-tree-id1694 . -7) (undo-tree-id1695 . -8) (undo-tree-id1696 . -7) (undo-tree-id1697 . -7) (undo-tree-id1698 . -7) (undo-tree-id1699 . -7) (undo-tree-id1700 . -7) (undo-tree-id1701 . -7) (undo-tree-id1702 . -7) (undo-tree-id1703 . -7) (undo-tree-id1704 . -7) (47159 . 47160) (#("ing" 0 3 (face font-lock-keyword-face fontified t)) . 47159) (undo-tree-id1705 . -2) (undo-tree-id1706 . -2) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) (undo-tree-id1710 . -2) (undo-tree-id1711 . -2) (undo-tree-id1712 . -2) (undo-tree-id1713 . -2) (undo-tree-id1714 . -2) (undo-tree-id1715 . -2) (t 25752 43146 469089 428000)) (25752 43146 462328 373000) 0 nil] [nil nil ((47156 . 47159) (47150 . 47156)) ((#("\\cente" 0 6 (face font-lock-keyword-face fontified nil)) . 47150) (undo-tree-id1663 . -6) (undo-tree-id1664 . -6) (undo-tree-id1665 . -6) (undo-tree-id1666 . -6) (undo-tree-id1667 . -6) (undo-tree-id1668 . -6) (undo-tree-id1669 . -6) (undo-tree-id1670 . -6) (undo-tree-id1671 . -6) (undo-tree-id1672 . -6) (undo-tree-id1673 . -6) (undo-tree-id1674 . -6) (undo-tree-id1675 . -6) (undo-tree-id1676 . -6) (undo-tree-id1677 . -6) (#("red" 0 1 (face font-lock-keyword-face fontified t) 1 3 (face font-lock-keyword-face fontified t)) . 47156) (undo-tree-id1678 . -1) (undo-tree-id1679 . -2) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1)) (25752 43142 356836 552000) 0 nil] [nil nil ((47152 . 47161) (t 25752 43035 103033 877000)) ((#("\\centered" 0 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t)) . 47152) (undo-tree-id1626 . -7) (undo-tree-id1627 . -7) (undo-tree-id1628 . -8) (undo-tree-id1629 . -7) (undo-tree-id1630 . -8) (undo-tree-id1631 . -8) (undo-tree-id1632 . -8) (undo-tree-id1633 . -8) (undo-tree-id1634 . -8) (undo-tree-id1635 . -8) (undo-tree-id1636 . -7) (undo-tree-id1637 . -7) (undo-tree-id1638 . -7) (undo-tree-id1639 . -7) (undo-tree-id1640 . -7) (undo-tree-id1641 . -7) (undo-tree-id1642 . -7) (undo-tree-id1643 . -7) (undo-tree-id1644 . -7) (undo-tree-id1645 . -7) (undo-tree-id1646 . -7) (undo-tree-id1647 . -7) (undo-tree-id1648 . -7)) (25752 43099 477813 846000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 45673) (undo-tree-id1718 . -15) (undo-tree-id1719 . -14) (undo-tree-id1720 . -16) (undo-tree-id1721 . -14) (undo-tree-id1722 . -14) (undo-tree-id1723 . 2) (undo-tree-id1724 . -15) (undo-tree-id1725 . 12) (undo-tree-id1726 . -5) (undo-tree-id1727 . -14) (undo-tree-id1728 . -14) (undo-tree-id1729 . -14) (undo-tree-id1730 . -16) 45687 (t 25752 43206 18762 652000)) nil (25752 43257 654310 456000) 0 nil])
nil
nil
([nil nil ((47149 . 47150) 47140) ((#("
" 0 1 (fontified t)) . 47149)) (25752 43141 771824 223000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 47159) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (t 25752 43082 749439 86000)) ((47159 . 47160)) (25752 43099 99951 189000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45539 . 45540) (#("
" 0 1 (fontified nil)) . -45555) (45539 . 45556) 45512) nil (25753 45659 795908 736000) 0 nil])
([nil nil ((47158 . 47161) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -47158) (undo-tree-id1649 . -1) (47158 . 47159) (#("ed" 0 2 (face font-lock-keyword-face fontified t)) . 47158) (undo-tree-id1650 . -1) (undo-tree-id1651 . -2) (undo-tree-id1652 . -2) (t 25752 43103 905989 657000)) ((47158 . 47160) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 47158) (undo-tree-id1653 . -1) (47158 . 47159) (#("ing" 0 3 (face font-lock-keyword-face fontified t)) . 47158) (undo-tree-id1654 . -2) (undo-tree-id1655 . -2) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (undo-tree-id1658 . -2) (undo-tree-id1659 . -2) (undo-tree-id1660 . -2) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) (t 25752 43124 309211 29000)) (25752 43124 300202 272000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-keyword-face fontified t)) . 47159) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1)) ((47159 . 47160) (t 25752 43090 32732 453000)) (25752 43090 28292 922000) 0 nil])
([nil nil ((45713 . 45714) (t 25753 45385 357178 360000) 45713) nil (25753 46727 431889 141000) 0 nil] [nil nil ((45713 . 47202) (#("
1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 72 (fontified t) 72 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 133 (fontified t) 133 186 (fontified t) 186 187 (fontified t face font-lock-keyword-face) 187 200 (fontified t face font-lock-string-face) 200 201 (fontified t face font-lock-keyword-face) 201 202 (fontified t) 202 203 (fontified t) 203 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 233 (fontified t) 233 274 (fontified t) 274 275 (fontified t face font-lock-keyword-face) 275 285 (fontified t face font-lock-string-face) 285 286 (fontified t face font-lock-keyword-face) 286 301 (fontified t) 301 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 319 (fontified t) 319 331 (fontified t) 331 332 (fontified t face font-lock-keyword-face) 332 341 (fontified t face font-lock-string-face) 341 342 (fontified t face font-lock-keyword-face) 342 382 (fontified t) 382 465 (fontified t) 465 466 (fontified t) 466 469 (fontified t) 469 511 (fontified t) 511 513 (fontified t face font-lock-keyword-face) 513 536 (fontified t) 536 623 (fontified t) 623 624 (fontified t) 624 627 (fontified t) 627 690 (fontified t) 690 727 (fontified t) 727 728 (fontified t face font-lock-keyword-face) 728 738 (fontified t face font-lock-string-face) 738 739 (fontified t face font-lock-keyword-face) 739 838 (fontified t) 838 839 (fontified t) 839 842 (fontified t) 842 912 (fontified t) 912 974 (fontified t) 974 975 (fontified t) 975 978 (fontified t) 978 1025 (fontified t) 1025 1026 (fontified t face font-lock-keyword-face) 1026 1037 (fontified t face font-lock-string-face) 1037 1038 (fontified t face font-lock-keyword-face) 1038 1046 (fontified t) 1046 1067 (fontified t) 1067 1068 (fontified t) 1068 1071 (fontified t) 1071 1137 (fontified t) 1137 1179 (fontified t) 1179 1180 (fontified t) 1180 1184 (fontified t) 1184 1241 (fontified t) 1241 1242 (fontified t face font-lock-keyword-face) 1242 1247 (fontified t face font-lock-string-face) 1247 1254 (fontified t face font-lock-string-face) 1254 1255 (fontified t face font-lock-keyword-face) 1255 1284 (fontified t) 1284 1285 (fontified t) 1285 1289 (fontified t) 1289 1349 (fontified t) 1349 1437 (fontified t)) . -45713) (undo-tree-id378 . -1419) (undo-tree-id379 . -1) (undo-tree-id380 . -1436) (undo-tree-id381 . 1437) (undo-tree-id382 . -1) (undo-tree-id383 . -130) (undo-tree-id384 . -230) (undo-tree-id385 . -1) (undo-tree-id386 . -130) (undo-tree-id387 . -1) (undo-tree-id388 . -130) (undo-tree-id389 . -230) (undo-tree-id390 . -1) (undo-tree-id391 . -130) (undo-tree-id392 . -230) (undo-tree-id393 . -316) (undo-tree-id394 . -466) (undo-tree-id395 . -624) (undo-tree-id396 . -839) (undo-tree-id397 . -975) (undo-tree-id398 . -1068) (undo-tree-id399 . -1180) (undo-tree-id400 . -1285) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -130) (undo-tree-id404 . -130) (undo-tree-id405 . -230) (undo-tree-id406 . -230) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1419) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1437) (undo-tree-id414 . -1419) (undo-tree-id415 . -690) (undo-tree-id416 . -1419) (undo-tree-id417 . -1437) 47150 (t 25753 45385 357178 360000)) ((45713 . 47150) (#("\\begin{enumerate}

1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).
\\item
А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).
\\item
Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).
\\item
Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).
\\item
Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).
\\item
Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).
\\item
Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).
\\item
Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).
\\item
К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).
\\item
Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).
\\item
С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
\\end{enumerate}
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t latex-env-pair t) 7 16 (fontified t latex-env-pair t face font-lock-function-name-face) 16 17 (fontified t latex-env-pair t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 22 (fontified t) 22 90 (fontified t) 90 146 (fontified t) 146 147 (fontified t) 147 152 (fontified t face font-lock-keyword-face) 152 153 (fontified t) 153 206 (fontified t) 206 207 (fontified t face font-lock-keyword-face) 207 220 (fontified t face font-lock-string-face) 220 221 (fontified t face font-lock-keyword-face) 221 222 (fontified t) 222 223 (fontified t) 223 248 (fontified t) 248 249 (fontified t) 249 254 (fontified t face font-lock-keyword-face) 254 255 (fontified t) 255 296 (fontified t) 296 297 (fontified t face font-lock-keyword-face) 297 307 (fontified t face font-lock-string-face) 307 308 (fontified t face font-lock-keyword-face) 308 323 (fontified t) 323 336 (fontified t) 336 337 (fontified t) 337 342 (fontified t face font-lock-keyword-face) 342 343 (fontified t) 343 355 (fontified t) 355 356 (fontified t face font-lock-keyword-face) 356 365 (fontified t face font-lock-string-face) 365 366 (fontified t face font-lock-keyword-face) 366 406 (fontified t) 406 488 (fontified t) 488 489 (fontified t) 489 494 (fontified t face font-lock-keyword-face) 494 495 (fontified t) 495 537 (fontified t) 537 539 (fontified t face font-lock-keyword-face) 539 562 (fontified t) 562 648 (fontified t) 648 649 (fontified t) 649 654 (fontified t face font-lock-keyword-face) 654 655 (fontified t) 655 718 (fontified t) 718 755 (fontified t) 755 756 (fontified t face font-lock-keyword-face) 756 766 (fontified t face font-lock-string-face) 766 767 (fontified t face font-lock-keyword-face) 767 865 (fontified t) 865 866 (fontified t) 866 871 (fontified t face font-lock-keyword-face) 871 872 (fontified t) 872 942 (fontified t) 942 1003 (fontified t) 1003 1004 (fontified t) 1004 1009 (fontified t face font-lock-keyword-face) 1009 1010 (fontified t) 1010 1057 (fontified t) 1057 1058 (fontified t face font-lock-keyword-face) 1058 1069 (fontified t face font-lock-string-face) 1069 1070 (fontified t face font-lock-keyword-face) 1070 1078 (fontified t) 1078 1098 (fontified t) 1098 1099 (fontified t) 1099 1104 (fontified t face font-lock-keyword-face) 1104 1105 (fontified t) 1105 1171 (fontified t) 1171 1212 (fontified t) 1212 1213 (fontified t) 1213 1218 (fontified t face font-lock-keyword-face) 1218 1219 (fontified t) 1219 1276 (fontified t) 1276 1277 (fontified t face font-lock-keyword-face) 1277 1282 (fontified t face font-lock-string-face) 1282 1289 (fontified t face font-lock-string-face) 1289 1290 (fontified t face font-lock-keyword-face) 1290 1318 (fontified t) 1318 1319 (fontified t) 1319 1324 (fontified t face font-lock-keyword-face) 1324 1325 (fontified t) 1325 1385 (fontified t) 1385 1473 (fontified t) 1473 1477 (fontified t face font-lock-keyword-face) 1477 1478 (fontified t latex-env-pair t) 1478 1487 (fontified t latex-env-pair t face font-lock-function-name-face) 1487 1488 (fontified t latex-env-pair t) 1488 1489 (fontified t)) . 45713) (undo-tree-id418 . 1471) (undo-tree-id419 . -249) (undo-tree-id420 . -249) (undo-tree-id421 . -249)) (25753 45659 795433 536000) 0 nil] [nil nil ((45717 . 45730) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -45717) (undo-tree-id329 . -1) (45713 . 45718) (t 25753 45345 514063 663000)) ((#("\\begi" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face font-lock-keyword-face)) . 45713) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (45717 . 45718) (#("in{enumerate}" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t latex-env-pair t) 3 12 (fontified t latex-env-pair t face font-lock-function-name-face) 12 13 (fontified t latex-env-pair t)) . 45717) (undo-tree-id373 . -10) (undo-tree-id374 . -10) (undo-tree-id375 . -10) (undo-tree-id376 . -10) (undo-tree-id377 . -10)) (25753 45382 697583 858000) 0 nil] [nil nil ((45713 . 47236) (#("
1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 72 (fontified t) 72 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 133 (fontified t) 133 186 (fontified t) 186 187 (fontified t face font-lock-keyword-face) 187 200 (fontified t face font-lock-string-face) 200 201 (fontified t face font-lock-keyword-face) 201 203 (fontified t) 203 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 233 (fontified t) 233 274 (fontified t) 274 275 (fontified t face font-lock-keyword-face) 275 285 (fontified t face font-lock-string-face) 285 286 (fontified t face font-lock-keyword-face) 286 301 (fontified t) 301 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 319 (fontified t) 319 331 (fontified t) 331 332 (fontified t face font-lock-keyword-face) 332 341 (fontified t face font-lock-string-face) 341 342 (fontified t face font-lock-keyword-face) 342 382 (fontified t) 382 465 (fontified t) 465 466 (fontified t) 466 469 (fontified t) 469 511 (fontified t) 511 513 (fontified t face font-lock-keyword-face) 513 536 (fontified t) 536 623 (fontified t) 623 624 (fontified t) 624 627 (fontified t) 627 690 (fontified t) 690 727 (fontified t) 727 728 (fontified t face font-lock-keyword-face) 728 738 (fontified t face font-lock-string-face) 738 739 (fontified t face font-lock-keyword-face) 739 838 (fontified t) 838 839 (fontified t) 839 842 (fontified t) 842 912 (fontified t) 912 974 (fontified t) 974 975 (fontified t) 975 978 (fontified t) 978 1025 (fontified t) 1025 1026 (fontified t face font-lock-keyword-face) 1026 1037 (fontified t face font-lock-string-face) 1037 1038 (fontified t face font-lock-keyword-face) 1038 1046 (fontified t) 1046 1067 (fontified t) 1067 1068 (fontified t) 1068 1071 (fontified t) 1071 1137 (fontified t) 1137 1179 (fontified t) 1179 1180 (fontified t) 1180 1184 (fontified t) 1184 1241 (fontified t) 1241 1242 (fontified t face font-lock-keyword-face) 1242 1247 (fontified t face font-lock-string-face) 1247 1254 (fontified t face font-lock-string-face) 1254 1255 (fontified t face font-lock-keyword-face) 1255 1284 (fontified t) 1284 1285 (fontified t) 1285 1289 (fontified t) 1289 1349 (fontified t) 1349 1437 (fontified t)) . 45713) (undo-tree-id257 . -1437) (undo-tree-id258 . -1419) (undo-tree-id259 . -230) (undo-tree-id260 . -232) (undo-tree-id261 . 1208) (undo-tree-id262 . -1) (undo-tree-id263 . -130) (undo-tree-id264 . -230) (undo-tree-id265 . -1) (undo-tree-id266 . -130) (undo-tree-id267 . -1) (undo-tree-id268 . -130) (undo-tree-id269 . -230) (undo-tree-id270 . -1) (undo-tree-id271 . -130) (undo-tree-id272 . -230) (undo-tree-id273 . -316) (undo-tree-id274 . -466) (undo-tree-id275 . -624) (undo-tree-id276 . -839) (undo-tree-id277 . -975) (undo-tree-id278 . -1068) (undo-tree-id279 . -1180) (undo-tree-id280 . -1285) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -130) (undo-tree-id284 . -130) (undo-tree-id285 . -230) (undo-tree-id286 . -230) (undo-tree-id287 . -1437) (undo-tree-id289 . -203) (undo-tree-id291 . -1437) (undo-tree-id293 . -1419) (undo-tree-id295 . -1419) (t 25752 43257 661812 597000)) ((45713 . 47150) (#("\\\\begin{enumerate}

1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).
\\item
2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).
\\item
3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).
\\item
4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).
\\item
5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).
\\item
6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).
\\item
7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).
\\item
8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).
\\item
9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).
\\item
10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).
\\item
11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).

\\\\end{enumerate}" 0 1 (fontified t face font-lock-warning-face) 1 2 (fontified t face font-lock-warning-face) 2 7 (fontified t) 7 8 (fontified t latex-env-pair t) 8 17 (fontified t latex-env-pair t face font-lock-function-name-face) 17 18 (fontified t latex-env-pair t) 18 19 (fontified t) 148 153 (face font-lock-keyword-face) 210 211 (face font-lock-keyword-face) 211 224 (face font-lock-string-face) 224 225 (face font-lock-keyword-face) 253 258 (face font-lock-keyword-face) 303 304 (face font-lock-keyword-face) 304 314 (face font-lock-string-face) 314 315 (face font-lock-keyword-face) 344 349 (face font-lock-keyword-face) 365 366 (face font-lock-keyword-face) 366 375 (face font-lock-string-face) 375 376 (face font-lock-keyword-face) 499 504 (face font-lock-keyword-face) 550 552 (face font-lock-keyword-face) 662 667 (face font-lock-keyword-face) 734 771 (fontified t) 771 772 (fontified t face font-lock-keyword-face) 772 782 (fontified t face font-lock-string-face) 782 783 (fontified t face font-lock-keyword-face) 783 881 (fontified t) 881 882 (fontified t) 882 887 (fontified t face font-lock-keyword-face) 887 888 (fontified t) 888 891 (fontified t) 891 961 (fontified t) 961 1022 (fontified t) 1022 1023 (fontified t) 1023 1028 (fontified t face font-lock-keyword-face) 1028 1029 (fontified t) 1029 1032 (fontified t) 1032 1079 (fontified t) 1079 1080 (fontified t face font-lock-keyword-face) 1080 1091 (fontified t face font-lock-string-face) 1091 1092 (fontified t face font-lock-keyword-face) 1092 1100 (fontified t) 1100 1120 (fontified t) 1120 1121 (fontified t) 1121 1126 (fontified t face font-lock-keyword-face) 1126 1127 (fontified t) 1127 1130 (fontified t) 1130 1196 (fontified t) 1196 1237 (fontified t) 1237 1238 (fontified t) 1238 1243 (fontified t face font-lock-keyword-face) 1243 1244 (fontified t) 1244 1248 (fontified t) 1248 1305 (fontified t) 1305 1306 (fontified t face font-lock-keyword-face) 1306 1311 (fontified t face font-lock-string-face) 1311 1318 (fontified t face font-lock-string-face) 1318 1319 (fontified t face font-lock-keyword-face) 1319 1347 (fontified t) 1347 1348 (fontified t) 1348 1353 (fontified t face font-lock-keyword-face) 1353 1354 (fontified t) 1354 1358 (fontified t) 1358 1418 (fontified t) 1418 1506 (fontified t) 1506 1507 (fontified t) 1507 1508 (fontified t face font-lock-warning-face) 1508 1509 (fontified t face font-lock-warning-face) 1509 1512 (fontified t) 1512 1513 (latex-env-pair t fontified t) 1513 1518 (latex-env-pair t fontified t face font-lock-function-name-face) 1518 1522 (latex-env-pair t fontified t face font-lock-function-name-face) 1522 1523 (latex-env-pair t fontified t)) . 45713) (undo-tree-id299 . 1504) (undo-tree-id300 . -1354) (undo-tree-id301 . -1357) (undo-tree-id302 . -1354) (undo-tree-id303 . -154) (undo-tree-id304 . -1354) (undo-tree-id305 . -1507) (undo-tree-id306 . -1507) (undo-tree-id307 . -734) (undo-tree-id308 . -1354) (undo-tree-id309 . -1354) (undo-tree-id310 . -148) (undo-tree-id311 . -148) (undo-tree-id312 . -1354) (undo-tree-id313 . -505) (undo-tree-id314 . -19) (undo-tree-id315 . -19) (undo-tree-id316 . -19) (undo-tree-id317 . -19) (undo-tree-id318 . -1506) (undo-tree-id319 . -1506) (undo-tree-id320 . -1506) (undo-tree-id321 . -1506) (undo-tree-id322 . -1506) (undo-tree-id323 . -1506) (undo-tree-id324 . -1506) (undo-tree-id325 . -1507) (undo-tree-id326 . -1507) (undo-tree-id327 . -1507)) (25753 45342 367226 740000) 0 nil] [nil nil ((45713 . 47242) (#("
1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).

" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 72 (fontified t) 72 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 133 (fontified t) 133 186 (fontified t) 186 187 (fontified t face font-lock-keyword-face) 187 200 (fontified t face font-lock-string-face) 200 201 (fontified t face font-lock-keyword-face) 201 203 (fontified t) 203 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 233 (fontified t) 233 274 (fontified t) 274 275 (fontified t face font-lock-keyword-face) 275 285 (fontified t face font-lock-string-face) 285 286 (fontified t face font-lock-keyword-face) 286 301 (fontified t) 301 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 319 (fontified t) 319 331 (fontified t) 331 332 (fontified t face font-lock-keyword-face) 332 341 (fontified t face font-lock-string-face) 341 342 (fontified t face font-lock-keyword-face) 342 382 (fontified t) 382 465 (fontified t) 465 466 (fontified t) 466 469 (fontified t) 469 511 (fontified t) 511 513 (fontified t face font-lock-keyword-face) 513 536 (fontified t) 536 623 (fontified t) 623 624 (fontified t) 624 627 (fontified t) 627 690 (fontified t) 690 727 (fontified t) 727 728 (fontified t face font-lock-keyword-face) 728 738 (fontified t face font-lock-string-face) 738 739 (fontified t face font-lock-keyword-face) 739 838 (fontified t) 838 839 (fontified t) 839 842 (fontified t) 842 912 (fontified t) 912 974 (fontified t) 974 975 (fontified t) 975 978 (fontified t) 978 1025 (fontified t) 1025 1026 (fontified t face font-lock-keyword-face) 1026 1037 (fontified t face font-lock-string-face) 1037 1038 (fontified t face font-lock-keyword-face) 1038 1046 (fontified t) 1046 1067 (fontified t) 1067 1068 (fontified t) 1068 1071 (fontified t) 1071 1137 (fontified t) 1137 1179 (fontified t) 1179 1180 (fontified t) 1180 1184 (fontified t) 1184 1241 (fontified t) 1241 1242 (fontified t face font-lock-keyword-face) 1242 1247 (fontified t face font-lock-string-face) 1247 1254 (fontified t face font-lock-string-face) 1254 1255 (fontified t face font-lock-keyword-face) 1255 1284 (fontified t) 1284 1285 (fontified t) 1285 1289 (fontified t) 1289 1349 (fontified t) 1349 1437 (fontified t) 1437 1438 (fontified t)) . -45713) (undo-tree-id181 . -1437) (undo-tree-id182 . -230) (undo-tree-id183 . -232) (undo-tree-id184 . 1209) (undo-tree-id185 . -1) (undo-tree-id186 . -130) (undo-tree-id187 . -230) (undo-tree-id188 . -1) (undo-tree-id189 . -130) (undo-tree-id190 . -1) (undo-tree-id191 . -130) (undo-tree-id192 . -230) (undo-tree-id193 . -1) (undo-tree-id194 . -130) (undo-tree-id195 . -230) (undo-tree-id196 . -316) (undo-tree-id197 . -466) (undo-tree-id198 . -624) (undo-tree-id199 . -839) (undo-tree-id200 . -975) (undo-tree-id201 . -1068) (undo-tree-id202 . -1180) (undo-tree-id203 . -1285) (undo-tree-id204 . -1438) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -130) (undo-tree-id208 . -130) (undo-tree-id209 . -230) (undo-tree-id210 . -230) (undo-tree-id211 . -203) (undo-tree-id212 . -1437) (undo-tree-id213 . -229) (undo-tree-id214 . -203) (undo-tree-id215 . -203) (undo-tree-id216 . -1438) (undo-tree-id217 . -1437) (undo-tree-id218 . -974) (undo-tree-id219 . -1437) (undo-tree-id220 . -1438) 47151 (t 25752 43257 661812 597000)) ((45713 . 47151) (#("\\\\begin{enumerate}

1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).
\\item
2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).
\\item
3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).
\\item
4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).
\\item
5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).
\\item
6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).
\\item
7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).
\\item
8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).
\\item
9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).
\\item
10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).
\\item
11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
\\item

\\\\end{enumerate}" 0 2 (fontified t face font-lock-warning-face) 2 7 (fontified t) 7 8 (fontified t latex-env-pair t) 8 17 (fontified t latex-env-pair t face font-lock-function-name-face) 17 18 (fontified t latex-env-pair t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 23 (fontified t) 23 91 (fontified t) 91 147 (fontified t) 147 148 (fontified t) 148 153 (fontified t face font-lock-keyword-face) 153 154 (fontified t) 154 155 (fontified t) 155 157 (fontified t) 157 210 (fontified t) 210 211 (fontified t face font-lock-keyword-face) 211 224 (fontified t face font-lock-string-face) 224 225 (fontified t face font-lock-keyword-face) 225 227 (fontified t) 227 252 (fontified t) 252 253 (fontified t) 253 258 (fontified t face font-lock-keyword-face) 258 259 (fontified t) 259 260 (fontified t) 260 262 (fontified t) 262 303 (fontified t) 303 304 (fontified t face font-lock-keyword-face) 304 314 (fontified t face font-lock-string-face) 314 315 (fontified t face font-lock-keyword-face) 315 330 (fontified t) 330 343 (fontified t) 343 344 (fontified t) 344 349 (fontified t face font-lock-keyword-face) 349 350 (fontified t) 350 353 (fontified t) 353 365 (fontified t) 365 366 (fontified t face font-lock-keyword-face) 366 375 (fontified t face font-lock-string-face) 375 376 (fontified t face font-lock-keyword-face) 376 416 (fontified t) 416 498 (fontified t) 498 499 (fontified t) 499 504 (fontified t face font-lock-keyword-face) 504 505 (fontified t) 505 508 (fontified t) 508 550 (fontified t) 550 552 (fontified t face font-lock-keyword-face) 552 575 (fontified t) 575 661 (fontified t) 661 662 (fontified t) 662 667 (fontified t face font-lock-keyword-face) 667 668 (fontified t) 668 671 (fontified t) 671 734 (fontified t) 734 771 (fontified t) 771 772 (fontified t face font-lock-keyword-face) 772 782 (fontified t face font-lock-string-face) 782 783 (fontified t face font-lock-keyword-face) 783 881 (fontified t) 881 882 (fontified t) 882 887 (fontified t face font-lock-keyword-face) 887 888 (fontified t) 888 891 (fontified t) 891 961 (fontified t) 961 1022 (fontified t) 1022 1023 (fontified t) 1023 1028 (fontified t face font-lock-keyword-face) 1028 1029 (fontified t) 1029 1032 (fontified t) 1032 1079 (fontified t) 1079 1080 (fontified t face font-lock-keyword-face) 1080 1091 (fontified t face font-lock-string-face) 1091 1092 (fontified t face font-lock-keyword-face) 1092 1100 (fontified t) 1100 1120 (fontified t) 1120 1121 (fontified t) 1121 1126 (fontified t face font-lock-keyword-face) 1126 1127 (fontified t) 1127 1130 (fontified t) 1130 1196 (fontified t) 1196 1237 (fontified t) 1237 1238 (fontified t) 1238 1243 (fontified t face font-lock-keyword-face) 1243 1244 (fontified t) 1244 1248 (fontified t) 1248 1305 (fontified t) 1305 1306 (fontified t face font-lock-keyword-face) 1306 1311 (fontified t face font-lock-string-face) 1311 1318 (fontified t face font-lock-string-face) 1318 1319 (fontified t face font-lock-keyword-face) 1319 1347 (fontified t) 1347 1348 (fontified t) 1348 1353 (fontified t face font-lock-keyword-face) 1353 1354 (fontified t) 1354 1358 (fontified t) 1358 1418 (fontified t) 1418 1500 (fontified t) 1500 1505 (fontified t) 1505 1506 (fontified t) 1506 1511 (fontified t face font-lock-keyword-face) 1511 1513 (fontified t) 1513 1515 (fontified t face font-lock-warning-face) 1515 1518 (fontified t) 1518 1519 (fontified t latex-env-pair t) 1519 1528 (fontified t latex-env-pair t face font-lock-function-name-face) 1528 1529 (fontified t latex-env-pair t)) . 45713) (undo-tree-id221 . 1510) (undo-tree-id222 . -1513) (undo-tree-id223 . -734) (undo-tree-id224 . -1513) (undo-tree-id225 . -1513)) (25753 45236 323456 535000) 0 nil] [nil nil ((#("i" 0 1 (fontified t face font-lock-keyword-face)) . -45718) (undo-tree-id168 . -1) (45714 . 45719) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -45714) (undo-tree-id170 . -1) (45713 . 45715) (t 25752 43257 661812 597000)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 45713) (45714 . 45715) (#("itemi" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face font-lock-keyword-face)) . 45714) (45718 . 45719)) (25753 44689 647676 174000) 0 nil] [nil nil ((45714 . 45718) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -45714) (undo-tree-id165 . -1) (45713 . 45715) (t 25752 43257 661812 597000)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 45713) (45714 . 45715) (#("item" 0 4 (fontified t face font-lock-keyword-face)) . 45714)) (25753 44653 120985 265000) 0 nil] [nil nil ((45714 . 45718) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -45714) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 45715 (45713 . 45715) (#("|" 0 1 (fontified t)) . -45713) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 45714 (45713 . 45714) (#("?" 0 1 (fontified t)) . -45713) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 45714 (45713 . 45714) (#("?" 0 1 (fontified t)) . -45713) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("i" 0 1 (fontified t)) . -45714) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 45715 (45714 . 45715) (#("i" 0 1 (fontified t)) . -45714) (undo-tree-id62 . -1) (45713 . 45715) (t 25752 43257 661812 597000)) ((#("?i" 0 1 (fontified nil) 1 2 (fontified nil)) . 45713) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (45714 . 45715) (#("i" 0 1 (fontified nil)) . 45714) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (45713 . 45715) (#("?" 0 1 (fontified nil)) . 45713) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (45713 . 45714) (#("|" 0 1 (fontified nil)) . 45713) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (45713 . 45714) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 45713) (undo-tree-id78 . -2) (45714 . 45715) (#("item" 0 4 (fontified t face font-lock-keyword-face)) . 45714)) (25753 44449 485242 88000) 0 nil] [nil nil ((45714 . 45718) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -45714) (undo-tree-id19 . -1) (45713 . 45715) (t 25752 43257 661812 597000)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 45713) (45714 . 45715) (#("item" 0 4 (fontified t face font-lock-keyword-face)) . 45714)) (25753 44347 952824 197000) 0 nil] [nil nil ((45714 . 45718) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -45714) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (45713 . 45715) (t 25752 43257 661812 597000)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 45713) (45714 . 45715) (#("item" 0 4 (fontified t face font-lock-keyword-face)) . 45714)) (25753 44298 369167 760000) 0 nil])
nil
nil
([nil nil ((45715 . 47217) (#("1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
" 0 1 (fontified t) 1 3 (fontified t) 3 71 (fontified t) 71 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 132 (fontified t) 132 185 (fontified t) 185 186 (fontified t face font-lock-keyword-face) 186 199 (fontified t face font-lock-string-face) 199 200 (fontified t face font-lock-keyword-face) 200 201 (fontified t) 201 202 (fontified t) 202 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 232 (fontified t) 232 273 (fontified t) 273 274 (fontified t face font-lock-keyword-face) 274 284 (fontified t face font-lock-string-face) 284 285 (fontified t face font-lock-keyword-face) 285 300 (fontified t) 300 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 318 (fontified t) 318 330 (fontified t) 330 331 (fontified t face font-lock-keyword-face) 331 340 (fontified t face font-lock-string-face) 340 341 (fontified t face font-lock-keyword-face) 341 381 (fontified t) 381 464 (fontified t) 464 465 (fontified t) 465 468 (fontified t) 468 510 (fontified t) 510 512 (fontified t face font-lock-keyword-face) 512 535 (fontified t) 535 622 (fontified t) 622 623 (fontified t) 623 626 (fontified t) 626 689 (fontified t) 689 726 (fontified t) 726 727 (fontified t face font-lock-keyword-face) 727 737 (fontified t face font-lock-string-face) 737 738 (fontified t face font-lock-keyword-face) 738 837 (fontified t) 837 838 (fontified t) 838 841 (fontified t) 841 911 (fontified t) 911 973 (fontified t) 973 974 (fontified t) 974 977 (fontified t) 977 1024 (fontified t) 1024 1025 (fontified t face font-lock-keyword-face) 1025 1036 (fontified t face font-lock-string-face) 1036 1037 (fontified t face font-lock-keyword-face) 1037 1045 (fontified t) 1045 1066 (fontified t) 1066 1067 (fontified t) 1067 1070 (fontified t) 1070 1136 (fontified t) 1136 1178 (fontified t) 1178 1179 (fontified t) 1179 1183 (fontified t) 1183 1240 (fontified t) 1240 1241 (fontified t face font-lock-keyword-face) 1241 1246 (fontified t face font-lock-string-face) 1246 1253 (fontified t face font-lock-string-face) 1253 1254 (fontified t face font-lock-keyword-face) 1254 1283 (fontified t) 1283 1284 (fontified t) 1284 1288 (fontified t) 1288 1348 (fontified t) 1348 1418 (fontified t) 1418 1436 (fontified t)) . -45715) (undo-tree-id970 . -1418) (undo-tree-id971 . -129) (undo-tree-id972 . -229) (undo-tree-id973 . -129) (undo-tree-id974 . -129) (undo-tree-id975 . -229) (undo-tree-id976 . -129) (undo-tree-id977 . -229) (undo-tree-id978 . -315) (undo-tree-id979 . -465) (undo-tree-id980 . -623) (undo-tree-id981 . -838) (undo-tree-id982 . -974) (undo-tree-id983 . -1067) (undo-tree-id984 . -1179) (undo-tree-id985 . -1284) (undo-tree-id986 . -129) (undo-tree-id987 . -229) (undo-tree-id988 . -1418) (undo-tree-id989 . -1283) (undo-tree-id990 . -1178) (undo-tree-id991 . -1066) (undo-tree-id992 . -973) (undo-tree-id993 . -837) (undo-tree-id994 . -622) (undo-tree-id995 . -464) (undo-tree-id996 . -314) (undo-tree-id997 . -228) (undo-tree-id998 . -128) (undo-tree-id999 . -128) (undo-tree-id1000 . -228) (undo-tree-id1001 . -314) (undo-tree-id1002 . -464) (undo-tree-id1003 . -622) (undo-tree-id1004 . -837) (undo-tree-id1005 . -973) (undo-tree-id1006 . -1066) (undo-tree-id1007 . -1178) (undo-tree-id1008 . -1283) (undo-tree-id1009 . -1418) (undo-tree-id1010 . -1283) (undo-tree-id1011 . -1178) (undo-tree-id1012 . -1066) (undo-tree-id1013 . -973) (undo-tree-id1014 . -837) (undo-tree-id1015 . -622) (undo-tree-id1016 . -464) (undo-tree-id1017 . -314) (undo-tree-id1018 . -1418) (undo-tree-id1019 . -623) (undo-tree-id1020 . -1436) (undo-tree-id1021 . -1418) (undo-tree-id1022 . -128) (undo-tree-id1023 . -228) (undo-tree-id1024 . -314) (undo-tree-id1025 . -464) (undo-tree-id1026 . -622) (undo-tree-id1027 . -837) (undo-tree-id1028 . -1418) (undo-tree-id1029 . -1418) (undo-tree-id1030 . -1436) 47151) nil (25753 46803 782816 89000) 0 nil] [nil nil ((45715 . 47216) (#("1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
" 0 1 (fontified t) 1 3 (fontified t) 3 71 (fontified t) 71 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 132 (fontified t) 132 185 (fontified t) 185 186 (fontified t face font-lock-keyword-face) 186 199 (fontified t face font-lock-string-face) 199 200 (fontified t face font-lock-keyword-face) 200 201 (fontified t) 201 202 (fontified t) 202 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 232 (fontified t) 232 273 (fontified t) 273 274 (fontified t face font-lock-keyword-face) 274 284 (fontified t face font-lock-string-face) 284 285 (fontified t face font-lock-keyword-face) 285 300 (fontified t) 300 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 318 (fontified t) 318 330 (fontified t) 330 331 (fontified t face font-lock-keyword-face) 331 340 (fontified t face font-lock-string-face) 340 341 (fontified t face font-lock-keyword-face) 341 381 (fontified t) 381 464 (fontified t) 464 465 (fontified t) 465 468 (fontified t) 468 510 (fontified t) 510 512 (fontified t face font-lock-keyword-face) 512 535 (fontified t) 535 622 (fontified t) 622 623 (fontified t) 623 626 (fontified t) 626 689 (fontified t) 689 726 (fontified t) 726 727 (fontified t face font-lock-keyword-face) 727 737 (fontified t face font-lock-string-face) 737 738 (fontified t face font-lock-keyword-face) 738 837 (fontified t) 837 838 (fontified t) 838 841 (fontified t) 841 911 (fontified t) 911 973 (fontified t) 973 974 (fontified t) 974 977 (fontified t) 977 1024 (fontified t) 1024 1025 (fontified t face font-lock-keyword-face) 1025 1036 (fontified t face font-lock-string-face) 1036 1037 (fontified t face font-lock-keyword-face) 1037 1045 (fontified t) 1045 1066 (fontified t) 1066 1067 (fontified t) 1067 1070 (fontified t) 1070 1136 (fontified t) 1136 1178 (fontified t) 1178 1179 (fontified t) 1179 1183 (fontified t) 1183 1240 (fontified t) 1240 1241 (fontified t face font-lock-keyword-face) 1241 1246 (fontified t face font-lock-string-face) 1246 1253 (fontified t face font-lock-string-face) 1253 1254 (fontified t face font-lock-keyword-face) 1254 1283 (fontified t) 1283 1284 (fontified t) 1284 1288 (fontified t) 1288 1348 (fontified t) 1348 1418 (fontified t) 1418 1436 (fontified t)) . 45715) (undo-tree-id865 . -1436) (undo-tree-id866 . -1418) (undo-tree-id867 . -129) (undo-tree-id868 . -229) (undo-tree-id869 . -129) (undo-tree-id870 . -129) (undo-tree-id871 . -229) (undo-tree-id872 . -129) (undo-tree-id873 . -229) (undo-tree-id874 . -315) (undo-tree-id875 . -465) (undo-tree-id876 . -623) (undo-tree-id877 . -838) (undo-tree-id878 . -974) (undo-tree-id879 . -1067) (undo-tree-id880 . -1179) (undo-tree-id881 . -1284) (undo-tree-id882 . -129) (undo-tree-id883 . -229) (undo-tree-id884 . -1418) (undo-tree-id885 . -1283) (undo-tree-id886 . -1178) (undo-tree-id887 . -1066) (undo-tree-id888 . -973) (undo-tree-id889 . -837) (undo-tree-id890 . -622) (undo-tree-id891 . -464) (undo-tree-id892 . -314) (undo-tree-id893 . -228) (undo-tree-id894 . -128) (undo-tree-id895 . -128) (undo-tree-id896 . -228) (undo-tree-id897 . -314) (undo-tree-id898 . -464) (undo-tree-id899 . -622) (undo-tree-id900 . -837) (undo-tree-id901 . -973) (undo-tree-id902 . -1066) (undo-tree-id903 . -1178) (undo-tree-id904 . -1283) (undo-tree-id905 . -1418) (undo-tree-id906 . -1436) (undo-tree-id907 . -1436) (undo-tree-id908 . -1418) (undo-tree-id909 . -1436) (undo-tree-id910 . -1418) (undo-tree-id911 . -1418) (undo-tree-id912 . -1418) (undo-tree-id913 . -1418) (undo-tree-id914 . -1283) (undo-tree-id915 . -1178) (undo-tree-id916 . -1066) (undo-tree-id917 . -973) (undo-tree-id918 . -837) (undo-tree-id919 . -622) (undo-tree-id920 . -622) (undo-tree-id921 . -464) (undo-tree-id922 . -314)) ((45715 . 47151) (#("
\\begin{enumerate}\\item
Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

\\item
А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

\\item
Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

\\item
Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

\\item
Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

\\item
Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

\\item
Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

\\item
Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

\\item
К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

\\item
Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

\\item
С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
\\end{enumerate}
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t latex-env-pair t) 8 17 (fontified t latex-env-pair t face font-lock-function-name-face) 17 18 (fontified t latex-env-pair t) 18 23 (fontified t face font-lock-keyword-face) 23 24 (fontified t) 24 92 (fontified t) 92 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 155 (fontified t face font-lock-keyword-face) 155 156 (fontified t) 156 209 (fontified t) 209 210 (fontified t face font-lock-keyword-face) 210 223 (fontified t face font-lock-string-face) 223 224 (fontified t face font-lock-keyword-face) 224 225 (fontified t) 225 226 (fontified t) 226 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 258 (fontified t face font-lock-keyword-face) 258 259 (fontified t) 259 300 (fontified t) 300 301 (fontified t face font-lock-keyword-face) 301 311 (fontified t face font-lock-string-face) 311 312 (fontified t face font-lock-keyword-face) 312 327 (fontified t) 327 340 (fontified t) 340 341 (fontified t) 341 342 (fontified t) 342 347 (fontified t face font-lock-keyword-face) 347 348 (fontified t) 348 360 (fontified t) 360 361 (fontified t face font-lock-keyword-face) 361 370 (fontified t face font-lock-string-face) 370 371 (fontified t face font-lock-keyword-face) 371 411 (fontified t) 411 494 (fontified t) 494 495 (fontified t) 495 500 (fontified t face font-lock-keyword-face) 500 501 (fontified t) 501 543 (fontified t) 543 545 (fontified t face font-lock-keyword-face) 545 568 (fontified t) 568 655 (fontified t) 655 656 (fontified t) 656 661 (fontified t face font-lock-keyword-face) 661 662 (fontified t) 662 725 (fontified t) 725 762 (fontified t) 762 763 (fontified t face font-lock-keyword-face) 763 773 (fontified t face font-lock-string-face) 773 774 (fontified t face font-lock-keyword-face) 774 873 (fontified t) 873 874 (fontified t) 874 879 (fontified t face font-lock-keyword-face) 879 880 (fontified t) 880 950 (fontified t) 950 1012 (fontified t) 1012 1013 (fontified t) 1013 1018 (fontified t face font-lock-keyword-face) 1018 1019 (fontified t) 1019 1066 (fontified t) 1066 1067 (fontified t face font-lock-keyword-face) 1067 1078 (fontified t face font-lock-string-face) 1078 1079 (fontified t face font-lock-keyword-face) 1079 1087 (fontified t) 1087 1108 (fontified t) 1108 1109 (fontified t) 1109 1114 (fontified t face font-lock-keyword-face) 1114 1115 (fontified t) 1115 1181 (fontified t) 1181 1223 (fontified t) 1223 1224 (fontified t) 1224 1229 (fontified t face font-lock-keyword-face) 1229 1230 (fontified t) 1230 1287 (fontified t) 1287 1288 (fontified t face font-lock-keyword-face) 1288 1293 (fontified t face font-lock-string-face) 1293 1300 (fontified t face font-lock-string-face) 1300 1301 (fontified t face font-lock-keyword-face) 1301 1330 (fontified t) 1330 1331 (fontified t) 1331 1336 (fontified t face font-lock-keyword-face) 1336 1337 (fontified t) 1337 1397 (fontified t) 1397 1467 (fontified t) 1467 1485 (fontified t) 1485 1489 (fontified t face font-lock-keyword-face) 1489 1490 (fontified t latex-env-pair t) 1490 1499 (fontified t latex-env-pair t face font-lock-function-name-face) 1499 1500 (fontified t latex-env-pair t) 1500 1501 (fontified t)) . 45715) (undo-tree-id923 . 1500) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1)) (25753 46727 431532 252000) 0 nil] [nil nil ((45714 . 47206) (#("
1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 72 (fontified t) 72 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 133 (fontified t) 133 186 (fontified t) 186 187 (fontified t face font-lock-keyword-face) 187 200 (fontified t face font-lock-string-face) 200 201 (fontified t face font-lock-keyword-face) 201 202 (fontified t) 202 203 (fontified t) 203 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 233 (fontified t) 233 274 (fontified t) 274 275 (fontified t face font-lock-keyword-face) 275 285 (fontified t face font-lock-string-face) 285 286 (fontified t face font-lock-keyword-face) 286 301 (fontified t) 301 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 319 (fontified t) 319 331 (fontified t) 331 332 (fontified t face font-lock-keyword-face) 332 341 (fontified t face font-lock-string-face) 341 342 (fontified t face font-lock-keyword-face) 342 382 (fontified t) 382 465 (fontified t) 465 466 (fontified t) 466 469 (fontified t) 469 511 (fontified t) 511 513 (fontified t face font-lock-keyword-face) 513 536 (fontified t) 536 623 (fontified t) 623 624 (fontified t) 624 627 (fontified t) 627 690 (fontified t) 690 727 (fontified t) 727 728 (fontified t face font-lock-keyword-face) 728 738 (fontified t face font-lock-string-face) 738 739 (fontified t face font-lock-keyword-face) 739 838 (fontified t) 838 839 (fontified t) 839 842 (fontified t) 842 912 (fontified t) 912 974 (fontified t) 974 975 (fontified t) 975 978 (fontified t) 978 1025 (fontified t) 1025 1026 (fontified t face font-lock-keyword-face) 1026 1037 (fontified t face font-lock-string-face) 1037 1038 (fontified t face font-lock-keyword-face) 1038 1046 (fontified t) 1046 1067 (fontified t) 1067 1068 (fontified t) 1068 1071 (fontified t) 1071 1137 (fontified t) 1137 1179 (fontified t) 1179 1180 (fontified t) 1180 1184 (fontified t) 1184 1241 (fontified t) 1241 1242 (fontified t face font-lock-keyword-face) 1242 1247 (fontified t face font-lock-string-face) 1247 1254 (fontified t face font-lock-string-face) 1254 1255 (fontified t face font-lock-keyword-face) 1255 1284 (fontified t) 1284 1285 (fontified t) 1285 1289 (fontified t) 1289 1349 (fontified t) 1349 1419 (fontified t) 1419 1437 (fontified t)) . -45714) (undo-tree-id744 . -1419) (undo-tree-id745 . -1) (undo-tree-id746 . -1436) (undo-tree-id747 . -1) (undo-tree-id748 . -130) (undo-tree-id749 . -230) (undo-tree-id750 . -1) (undo-tree-id751 . -130) (undo-tree-id752 . -1) (undo-tree-id753 . -130) (undo-tree-id754 . -230) (undo-tree-id755 . -1) (undo-tree-id756 . -130) (undo-tree-id757 . -230) (undo-tree-id758 . -316) (undo-tree-id759 . -466) (undo-tree-id760 . -624) (undo-tree-id761 . -839) (undo-tree-id762 . -975) (undo-tree-id763 . -1068) (undo-tree-id764 . -1180) (undo-tree-id765 . -1285) (undo-tree-id766 . -1) (undo-tree-id768 . -130) (undo-tree-id770 . -230) (undo-tree-id771 . -230) (undo-tree-id772 . -1) (undo-tree-id773 . -1419) (undo-tree-id774 . -1284) (undo-tree-id775 . -1179) (undo-tree-id776 . -1067) (undo-tree-id777 . -974) (undo-tree-id778 . -838) (undo-tree-id779 . -623) (undo-tree-id780 . -465) (undo-tree-id781 . -315) (undo-tree-id782 . -229) (undo-tree-id783 . -129) (undo-tree-id784 . -1) (undo-tree-id785 . -129) (undo-tree-id786 . -229) (undo-tree-id787 . -315) (undo-tree-id788 . -465) (undo-tree-id789 . -623) (undo-tree-id790 . -838) (undo-tree-id791 . -974) (undo-tree-id792 . -1067) (undo-tree-id793 . -1179) (undo-tree-id794 . -1284) (undo-tree-id796 . -1419) (undo-tree-id797 . -1419) (undo-tree-id798 . -839) (undo-tree-id800 . -1) (undo-tree-id802 . -1) (undo-tree-id804 . -1) (undo-tree-id806 . -1419) (undo-tree-id808 . -1419) (undo-tree-id810 . -1419) (undo-tree-id812 . -1419) (undo-tree-id814 . -1437) 47151) ((45714 . 47151) (#("
\\begin{enumerate}
\\item
Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).
\\item
А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
\\item
-- 96 с. (in Russ).
\\item
Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).
\\item
Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).
\\item
Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).
\\item
Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).
\\item
Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).
\\item
Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).
\\item
К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).
\\item
Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).
\\item
С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
\\end{enumerate}
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (latex-env-pair t fontified t) 8 17 (latex-env-pair t fontified t face font-lock-function-name-face) 17 18 (latex-env-pair t fontified t) 18 19 (fontified t) 19 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 93 (fontified t) 93 149 (fontified t) 149 150 (fontified t) 150 155 (fontified t face font-lock-keyword-face) 155 156 (fontified t) 156 209 (fontified t) 209 210 (fontified t face font-lock-keyword-face) 210 223 (fontified t face font-lock-string-face) 223 224 (fontified t face font-lock-keyword-face) 224 225 (fontified t) 225 226 (fontified t) 226 231 (fontified t face font-lock-keyword-face) 231 232 (fontified t) 232 251 (fontified t) 251 252 (fontified t) 252 257 (fontified t face font-lock-keyword-face) 257 258 (fontified t) 258 299 (fontified t) 299 300 (fontified t face font-lock-keyword-face) 300 310 (fontified t face font-lock-string-face) 310 311 (fontified t face font-lock-keyword-face) 311 326 (fontified t) 326 339 (fontified t) 339 340 (fontified t) 340 345 (fontified t face font-lock-keyword-face) 345 346 (fontified t) 346 358 (fontified t) 358 359 (fontified t face font-lock-keyword-face) 359 368 (fontified t face font-lock-string-face) 368 369 (fontified t face font-lock-keyword-face) 369 409 (fontified t) 409 491 (fontified t) 491 492 (fontified t) 492 497 (fontified t face font-lock-keyword-face) 497 498 (fontified t) 498 540 (fontified t) 540 542 (fontified t face font-lock-keyword-face) 542 565 (fontified t) 565 651 (fontified t) 651 652 (fontified t) 652 657 (fontified t face font-lock-keyword-face) 657 658 (fontified t) 658 721 (fontified t) 721 758 (fontified t) 758 759 (fontified t face font-lock-keyword-face) 759 769 (fontified t face font-lock-string-face) 769 770 (fontified t face font-lock-keyword-face) 770 868 (fontified t) 868 869 (fontified t) 869 874 (fontified t face font-lock-keyword-face) 874 875 (fontified t) 875 945 (fontified t) 945 1006 (fontified t) 1006 1007 (fontified t) 1007 1012 (fontified t face font-lock-keyword-face) 1012 1013 (fontified t) 1013 1060 (fontified t) 1060 1061 (fontified t face font-lock-keyword-face) 1061 1072 (fontified t face font-lock-string-face) 1072 1073 (fontified t face font-lock-keyword-face) 1073 1081 (fontified t) 1081 1101 (fontified t) 1101 1102 (fontified t) 1102 1107 (fontified t face font-lock-keyword-face) 1107 1108 (fontified t) 1108 1174 (fontified t) 1174 1215 (fontified t) 1215 1216 (fontified t) 1216 1221 (fontified t face font-lock-keyword-face) 1221 1222 (fontified t) 1222 1279 (fontified t) 1279 1280 (fontified t face font-lock-keyword-face) 1280 1285 (fontified t face font-lock-string-face) 1285 1292 (fontified t face font-lock-string-face) 1292 1293 (fontified t face font-lock-keyword-face) 1293 1321 (fontified t) 1321 1322 (fontified t) 1322 1327 (fontified t face font-lock-keyword-face) 1327 1328 (fontified t) 1328 1388 (fontified t) 1388 1458 (fontified t) 1458 1476 (fontified t) 1476 1480 (fontified t face font-lock-keyword-face) 1480 1481 (latex-env-pair t fontified t) 1481 1490 (latex-env-pair t fontified t face font-lock-function-name-face) 1490 1491 (latex-env-pair t fontified t) 1491 1492 (fontified t)) . 45714) (undo-tree-id853 . -150) (undo-tree-id854 . -226) (undo-tree-id855 . -252) (undo-tree-id856 . -340) (undo-tree-id857 . -492) (undo-tree-id858 . -652) (undo-tree-id859 . -869) (undo-tree-id860 . -1007) (undo-tree-id861 . -1102) (undo-tree-id862 . -1216) (undo-tree-id863 . -1322) (undo-tree-id864 . -1476)) (25753 46701 429582 61000) 0 nil] [nil nil ((45715 . 47203) (#("1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
" 0 1 (fontified t) 1 3 (fontified t) 3 71 (fontified t) 71 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 132 (fontified t) 132 185 (fontified t) 185 186 (fontified t face font-lock-keyword-face) 186 199 (fontified t face font-lock-string-face) 199 200 (fontified t face font-lock-keyword-face) 200 201 (fontified t) 201 202 (fontified t) 202 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 232 (fontified t) 232 273 (fontified t) 273 274 (fontified t face font-lock-keyword-face) 274 284 (fontified t face font-lock-string-face) 284 285 (fontified t face font-lock-keyword-face) 285 300 (fontified t) 300 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 318 (fontified t) 318 330 (fontified t) 330 331 (fontified t face font-lock-keyword-face) 331 340 (fontified t face font-lock-string-face) 340 341 (fontified t face font-lock-keyword-face) 341 381 (fontified t) 381 464 (fontified t) 464 465 (fontified t) 465 468 (fontified t) 468 510 (fontified t) 510 512 (fontified t face font-lock-keyword-face) 512 535 (fontified t) 535 622 (fontified t) 622 623 (fontified t) 623 626 (fontified t) 626 689 (fontified t) 689 726 (fontified t) 726 727 (fontified t face font-lock-keyword-face) 727 737 (fontified t face font-lock-string-face) 737 738 (fontified t face font-lock-keyword-face) 738 837 (fontified t) 837 838 (fontified t) 838 841 (fontified t) 841 911 (fontified t) 911 973 (fontified t) 973 974 (fontified t) 974 977 (fontified t) 977 1024 (fontified t) 1024 1025 (fontified t face font-lock-keyword-face) 1025 1036 (fontified t face font-lock-string-face) 1036 1037 (fontified t face font-lock-keyword-face) 1037 1045 (fontified t) 1045 1066 (fontified t) 1066 1067 (fontified t) 1067 1070 (fontified t) 1070 1136 (fontified t) 1136 1178 (fontified t) 1178 1179 (fontified t) 1179 1183 (fontified t) 1183 1240 (fontified t) 1240 1241 (fontified t face font-lock-keyword-face) 1241 1246 (fontified t face font-lock-string-face) 1246 1253 (fontified t face font-lock-string-face) 1253 1254 (fontified t face font-lock-keyword-face) 1254 1283 (fontified t) 1283 1284 (fontified t) 1284 1288 (fontified t) 1288 1348 (fontified t) 1348 1418 (fontified t) 1418 1436 (fontified t)) . -45715) (undo-tree-id562 . -1418) (undo-tree-id563 . -1435) (undo-tree-id564 . -129) (undo-tree-id565 . -229) (undo-tree-id566 . -129) (undo-tree-id567 . -129) (undo-tree-id568 . -229) (undo-tree-id569 . -129) (undo-tree-id570 . -229) (undo-tree-id571 . -315) (undo-tree-id572 . -465) (undo-tree-id573 . -623) (undo-tree-id574 . -838) (undo-tree-id575 . -974) (undo-tree-id576 . -1067) (undo-tree-id577 . -1179) (undo-tree-id578 . -1284) (undo-tree-id579 . -129) (undo-tree-id580 . -129) (undo-tree-id581 . -229) (undo-tree-id582 . -229) (undo-tree-id583 . -689) (undo-tree-id584 . -1436) (undo-tree-id585 . -1436) (undo-tree-id586 . -1436) (undo-tree-id587 . -1436) (undo-tree-id588 . -1436) (undo-tree-id589 . -1436) (undo-tree-id590 . -1418) (undo-tree-id591 . -623) (undo-tree-id592 . -622) (undo-tree-id593 . -1418) (undo-tree-id594 . -1418) (undo-tree-id595 . -689) (undo-tree-id596 . -1436) (undo-tree-id597 . -1436) (undo-tree-id598 . -1418) (undo-tree-id599 . -1418) (undo-tree-id600 . -1418) (undo-tree-id601 . -1418) (undo-tree-id602 . -1283) (undo-tree-id603 . -1178) (undo-tree-id604 . -1066) (undo-tree-id605 . -973) (undo-tree-id606 . -837) (undo-tree-id607 . -622) (undo-tree-id608 . -622) (undo-tree-id609 . -464) (undo-tree-id610 . -314) (undo-tree-id611 . -228) (undo-tree-id612 . -128) (undo-tree-id613 . -1436) (undo-tree-id614 . -1418) (undo-tree-id615 . -128) (undo-tree-id616 . -228) (undo-tree-id617 . -314) (undo-tree-id618 . -464) (undo-tree-id619 . -622) (undo-tree-id620 . -837) (undo-tree-id621 . -973) (undo-tree-id622 . -1066) (undo-tree-id623 . -1178) (undo-tree-id624 . -1283) (undo-tree-id625 . -1436) (undo-tree-id626 . -1418) (undo-tree-id627 . -1436) 47151) ((45715 . 47151) (#("\\begin{enumerate}
1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).
\\item
А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
\\item
-- 96 с. (in Russ).
\\item
Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).
\\item
Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).
\\item
Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).
\\item
Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).
\\item
Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).
\\item
Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).
\\item
К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).
\\item
Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).
\\item
С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
\\end{enumerate}
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t latex-env-pair t) 7 16 (fontified t latex-env-pair t face font-lock-function-name-face) 16 17 (fontified t latex-env-pair t) 17 18 (fontified t) 18 19 (fontified t) 19 21 (fontified t) 21 89 (fontified t) 89 145 (fontified t) 145 146 (fontified t) 146 151 (fontified t face font-lock-keyword-face) 151 152 (fontified t) 152 205 (fontified t) 205 206 (fontified t face font-lock-keyword-face) 206 219 (fontified t face font-lock-string-face) 219 220 (fontified t face font-lock-keyword-face) 220 221 (fontified t) 221 222 (fontified t) 222 227 (fontified t face font-lock-keyword-face) 227 228 (fontified t) 228 247 (fontified t) 247 248 (fontified t) 248 253 (fontified t face font-lock-keyword-face) 253 254 (fontified t) 254 295 (fontified t) 295 296 (fontified t face font-lock-keyword-face) 296 306 (fontified t face font-lock-string-face) 306 307 (fontified t face font-lock-keyword-face) 307 322 (fontified t) 322 335 (fontified t) 335 336 (fontified t) 336 341 (fontified t face font-lock-keyword-face) 341 342 (fontified t) 342 354 (fontified t) 354 355 (fontified t face font-lock-keyword-face) 355 364 (fontified t face font-lock-string-face) 364 365 (fontified t face font-lock-keyword-face) 365 405 (fontified t) 405 487 (fontified t) 487 488 (fontified t) 488 493 (fontified t face font-lock-keyword-face) 493 494 (fontified t) 494 536 (fontified t) 536 538 (fontified t face font-lock-keyword-face) 538 561 (fontified t) 561 647 (fontified t) 647 648 (fontified t) 648 653 (fontified t face font-lock-keyword-face) 653 654 (fontified t) 654 717 (fontified t) 717 754 (fontified t) 754 755 (fontified t face font-lock-keyword-face) 755 765 (fontified t face font-lock-string-face) 765 766 (fontified t face font-lock-keyword-face) 766 864 (fontified t) 864 865 (fontified t) 865 870 (fontified t face font-lock-keyword-face) 870 871 (fontified t) 871 941 (fontified t) 941 1002 (fontified t) 1002 1003 (fontified t) 1003 1008 (fontified t face font-lock-keyword-face) 1008 1009 (fontified t) 1009 1056 (fontified t) 1056 1057 (fontified t face font-lock-keyword-face) 1057 1068 (fontified t face font-lock-string-face) 1068 1069 (fontified t face font-lock-keyword-face) 1069 1077 (fontified t) 1077 1097 (fontified t) 1097 1098 (fontified t) 1098 1103 (fontified t face font-lock-keyword-face) 1103 1104 (fontified t) 1104 1170 (fontified t) 1170 1211 (fontified t) 1211 1212 (fontified t) 1212 1217 (fontified t face font-lock-keyword-face) 1217 1218 (fontified t) 1218 1275 (fontified t) 1275 1276 (fontified t face font-lock-keyword-face) 1276 1281 (fontified t face font-lock-string-face) 1281 1288 (fontified t face font-lock-string-face) 1288 1289 (fontified t face font-lock-keyword-face) 1289 1317 (fontified t) 1317 1318 (fontified t) 1318 1323 (fontified t face font-lock-keyword-face) 1323 1324 (fontified t) 1324 1384 (fontified t) 1384 1454 (fontified t) 1454 1472 (fontified t) 1472 1476 (fontified t face font-lock-keyword-face) 1476 1477 (fontified t latex-env-pair t) 1477 1486 (fontified t latex-env-pair t face font-lock-function-name-face) 1486 1487 (fontified t latex-env-pair t) 1487 1488 (fontified t)) . 45715) (undo-tree-id628 . 1470)) (25753 45759 459566 166000) 0 nil] [nil nil ((45714 . 47206) (#("
1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 72 (fontified t) 72 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 133 (fontified t) 133 186 (fontified t) 186 187 (fontified t face font-lock-keyword-face) 187 200 (fontified t face font-lock-string-face) 200 201 (fontified t face font-lock-keyword-face) 201 202 (fontified t) 202 203 (fontified t) 203 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 233 (fontified t) 233 274 (fontified t) 274 275 (fontified t face font-lock-keyword-face) 275 285 (fontified t face font-lock-string-face) 285 286 (fontified t face font-lock-keyword-face) 286 301 (fontified t) 301 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 319 (fontified t) 319 331 (fontified t) 331 332 (fontified t face font-lock-keyword-face) 332 341 (fontified t face font-lock-string-face) 341 342 (fontified t face font-lock-keyword-face) 342 382 (fontified t) 382 465 (fontified t) 465 466 (fontified t) 466 469 (fontified t) 469 511 (fontified t) 511 513 (fontified t face font-lock-keyword-face) 513 536 (fontified t) 536 623 (fontified t) 623 624 (fontified t) 624 627 (fontified t) 627 690 (fontified t) 690 727 (fontified t) 727 728 (fontified t face font-lock-keyword-face) 728 738 (fontified t face font-lock-string-face) 738 739 (fontified t face font-lock-keyword-face) 739 838 (fontified t) 838 839 (fontified t) 839 842 (fontified t) 842 912 (fontified t) 912 974 (fontified t) 974 975 (fontified t) 975 978 (fontified t) 978 1025 (fontified t) 1025 1026 (fontified t face font-lock-keyword-face) 1026 1037 (fontified t face font-lock-string-face) 1037 1038 (fontified t face font-lock-keyword-face) 1038 1046 (fontified t) 1046 1067 (fontified t) 1067 1068 (fontified t) 1068 1071 (fontified t) 1071 1137 (fontified t) 1137 1179 (fontified t) 1179 1180 (fontified t) 1180 1184 (fontified t) 1184 1241 (fontified t) 1241 1242 (fontified t face font-lock-keyword-face) 1242 1247 (fontified t face font-lock-string-face) 1247 1254 (fontified t face font-lock-string-face) 1254 1255 (fontified t face font-lock-keyword-face) 1255 1284 (fontified t) 1284 1285 (fontified t) 1285 1289 (fontified t) 1289 1349 (fontified t) 1349 1419 (fontified t) 1419 1437 (fontified t)) . 45714) (undo-tree-id494 . -1437) (undo-tree-id495 . -1419) (undo-tree-id496 . -1) (undo-tree-id497 . -1436) (undo-tree-id498 . -1) (undo-tree-id499 . -130) (undo-tree-id500 . -230) (undo-tree-id501 . -1) (undo-tree-id502 . -130) (undo-tree-id503 . -1) (undo-tree-id504 . -130) (undo-tree-id505 . -230) (undo-tree-id506 . -1) (undo-tree-id507 . -130) (undo-tree-id508 . -230) (undo-tree-id509 . -316) (undo-tree-id510 . -466) (undo-tree-id511 . -624) (undo-tree-id512 . -839) (undo-tree-id513 . -975) (undo-tree-id514 . -1068) (undo-tree-id515 . -1180) (undo-tree-id516 . -1285) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -130) (undo-tree-id520 . -130) (undo-tree-id521 . -230) (undo-tree-id522 . -230) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -690) (undo-tree-id527 . -1437) (undo-tree-id528 . -1437) (undo-tree-id529 . -1437) (undo-tree-id530 . -1437) (undo-tree-id531 . -1437) (undo-tree-id532 . -1437) (undo-tree-id533 . -1419) (undo-tree-id534 . -624) (undo-tree-id535 . -623) (undo-tree-id536 . -1419) (undo-tree-id537 . -1419) (undo-tree-id538 . -1437) (undo-tree-id539 . -1437) (undo-tree-id540 . -1419) (undo-tree-id541 . -1437) (undo-tree-id542 . -1419) (undo-tree-id543 . -1419) (undo-tree-id544 . -1419) (undo-tree-id545 . -1419) (undo-tree-id546 . -1284) (undo-tree-id547 . -1179) (undo-tree-id548 . -1067) (undo-tree-id549 . -974) (undo-tree-id550 . -838) (undo-tree-id551 . -623) (undo-tree-id552 . -623) (undo-tree-id553 . -465) (undo-tree-id554 . -315) (undo-tree-id555 . -229) (undo-tree-id556 . -129)) ((45714 . 47151) (#("\\begin{enumerate}

\\item
Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).
\\item
А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
\\item
-- 96 с. (in Russ).
\\item
Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).
\\item
Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).
\\item
Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).
\\item
Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).
\\item
Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).
\\item
Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).
\\item
К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).
\\item
Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).
\\item
С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
\\end{enumerate}
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t latex-env-pair t) 7 16 (fontified t latex-env-pair t face font-lock-function-name-face) 16 17 (fontified t latex-env-pair t) 17 19 (fontified t) 19 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 93 (fontified t) 93 149 (fontified t) 149 150 (fontified t) 150 155 (fontified t face font-lock-keyword-face) 155 156 (fontified t) 156 209 (fontified t) 209 210 (fontified t face font-lock-keyword-face) 210 223 (fontified t face font-lock-string-face) 223 224 (fontified t face font-lock-keyword-face) 224 225 (fontified t) 225 226 (fontified t) 226 231 (fontified t face font-lock-keyword-face) 231 232 (fontified t) 232 251 (fontified t) 251 252 (fontified t) 252 257 (fontified t face font-lock-keyword-face) 257 258 (fontified t) 258 299 (fontified t) 299 300 (fontified t face font-lock-keyword-face) 300 310 (fontified t face font-lock-string-face) 310 311 (fontified t face font-lock-keyword-face) 311 326 (fontified t) 326 339 (fontified t) 339 340 (fontified t) 340 345 (fontified t face font-lock-keyword-face) 345 346 (fontified t) 346 358 (fontified t) 358 359 (fontified t face font-lock-keyword-face) 359 368 (fontified t face font-lock-string-face) 368 369 (fontified t face font-lock-keyword-face) 369 409 (fontified t) 409 491 (fontified t) 491 492 (fontified t) 492 497 (fontified t face font-lock-keyword-face) 497 498 (fontified t) 498 540 (fontified t) 540 542 (fontified t face font-lock-keyword-face) 542 565 (fontified t) 565 651 (fontified t) 651 652 (fontified t) 652 657 (fontified t face font-lock-keyword-face) 657 658 (fontified t) 658 721 (fontified t) 721 758 (fontified t) 758 759 (fontified t face font-lock-keyword-face) 759 769 (fontified t face font-lock-string-face) 769 770 (fontified t face font-lock-keyword-face) 770 868 (fontified t) 868 869 (fontified t) 869 874 (fontified t face font-lock-keyword-face) 874 875 (fontified t) 875 945 (fontified t) 945 1006 (fontified t) 1006 1007 (fontified t) 1007 1012 (fontified t face font-lock-keyword-face) 1012 1013 (fontified t) 1013 1060 (fontified t) 1060 1061 (fontified t face font-lock-keyword-face) 1061 1072 (fontified t face font-lock-string-face) 1072 1073 (fontified t face font-lock-keyword-face) 1073 1081 (fontified t) 1081 1101 (fontified t) 1101 1102 (fontified t) 1102 1107 (fontified t face font-lock-keyword-face) 1107 1108 (fontified t) 1108 1174 (fontified t) 1174 1215 (fontified t) 1215 1216 (fontified t) 1216 1221 (fontified t face font-lock-keyword-face) 1221 1222 (fontified t) 1222 1279 (fontified t) 1279 1280 (fontified t face font-lock-keyword-face) 1280 1285 (fontified t face font-lock-string-face) 1285 1292 (fontified t face font-lock-string-face) 1292 1293 (fontified t face font-lock-keyword-face) 1293 1321 (fontified t) 1321 1322 (fontified t) 1322 1327 (fontified t face font-lock-keyword-face) 1327 1328 (fontified t) 1328 1388 (fontified t) 1388 1458 (fontified t) 1458 1476 (fontified t) 1476 1480 (fontified t face font-lock-keyword-face) 1480 1481 (fontified t latex-env-pair t) 1481 1490 (fontified t latex-env-pair t face font-lock-function-name-face) 1490 1491 (fontified t latex-env-pair t) 1491 1492 (fontified t)) . 45714) (undo-tree-id557 . 1474) (undo-tree-id558 . -18) (undo-tree-id559 . -18) (undo-tree-id560 . -18) (undo-tree-id561 . -18)) (25753 45752 429170 329000) 0 nil] [nil nil ((45713 . 47205) (#("

1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).

2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).

3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).

4. Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).

6. Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).

7. Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).

8. Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).

9. К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).

10. Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).

11. С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 5 (fontified t) 5 73 (fontified t) 73 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 134 (fontified t) 134 187 (fontified t) 187 188 (fontified t face font-lock-keyword-face) 188 201 (fontified t face font-lock-string-face) 201 202 (fontified t face font-lock-keyword-face) 202 203 (fontified t) 203 204 (fontified t) 204 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 234 (fontified t) 234 275 (fontified t) 275 276 (fontified t face font-lock-keyword-face) 276 286 (fontified t face font-lock-string-face) 286 287 (fontified t face font-lock-keyword-face) 287 302 (fontified t) 302 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 320 (fontified t) 320 332 (fontified t) 332 333 (fontified t face font-lock-keyword-face) 333 342 (fontified t face font-lock-string-face) 342 343 (fontified t face font-lock-keyword-face) 343 383 (fontified t) 383 466 (fontified t) 466 467 (fontified t) 467 470 (fontified t) 470 512 (fontified t) 512 514 (fontified t face font-lock-keyword-face) 514 537 (fontified t) 537 624 (fontified t) 624 625 (fontified t) 625 628 (fontified t) 628 691 (fontified t) 691 728 (fontified t) 728 729 (fontified t face font-lock-keyword-face) 729 739 (fontified t face font-lock-string-face) 739 740 (fontified t face font-lock-keyword-face) 740 839 (fontified t) 839 840 (fontified t) 840 843 (fontified t) 843 913 (fontified t) 913 975 (fontified t) 975 976 (fontified t) 976 979 (fontified t) 979 1026 (fontified t) 1026 1027 (fontified t face font-lock-keyword-face) 1027 1038 (fontified t face font-lock-string-face) 1038 1039 (fontified t face font-lock-keyword-face) 1039 1047 (fontified t) 1047 1068 (fontified t) 1068 1069 (fontified t) 1069 1072 (fontified t) 1072 1138 (fontified t) 1138 1180 (fontified t) 1180 1181 (fontified t) 1181 1185 (fontified t) 1185 1242 (fontified t) 1242 1243 (fontified t face font-lock-keyword-face) 1243 1248 (fontified t face font-lock-string-face) 1248 1255 (fontified t face font-lock-string-face) 1255 1256 (fontified t face font-lock-keyword-face) 1256 1285 (fontified t) 1285 1286 (fontified t) 1286 1290 (fontified t) 1290 1350 (fontified t) 1350 1420 (fontified t) 1420 1438 (fontified t)) . -45713) (undo-tree-id424 . -1420) (undo-tree-id425 . -2) (undo-tree-id426 . -1437) (undo-tree-id427 . 1437) (undo-tree-id428 . -2) (undo-tree-id429 . -131) (undo-tree-id430 . -231) (undo-tree-id431 . -2) (undo-tree-id432 . -131) (undo-tree-id433 . -2) (undo-tree-id434 . -131) (undo-tree-id435 . -231) (undo-tree-id436 . -2) (undo-tree-id437 . -131) (undo-tree-id438 . -231) (undo-tree-id439 . -317) (undo-tree-id440 . -467) (undo-tree-id441 . -625) (undo-tree-id442 . -840) (undo-tree-id443 . -976) (undo-tree-id444 . -1069) (undo-tree-id445 . -1181) (undo-tree-id446 . -1286) (undo-tree-id447 . -2) (undo-tree-id448 . -2) (undo-tree-id449 . -131) (undo-tree-id450 . -131) (undo-tree-id451 . -231) (undo-tree-id452 . -231) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -1) (undo-tree-id456 . -1420) (undo-tree-id457 . -625) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -691) (undo-tree-id461 . -1438) (undo-tree-id462 . -1438) (undo-tree-id463 . -1438) (undo-tree-id464 . -1438) (undo-tree-id465 . -1438) (undo-tree-id466 . -1438) (undo-tree-id467 . -1420) (undo-tree-id468 . -625) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1438) (undo-tree-id480 . -1420) (undo-tree-id481 . -624) (undo-tree-id482 . -1420) (undo-tree-id483 . -1420) (undo-tree-id484 . -1438) 47151) ((45713 . 47151) (#("\\begin{enumerate}

\\item
Ву Т.З. Анализ систем автоматизированного управления умным домом //
Молодой ученый, 2011. -- №4. Т.1. -- С. 28-29. (in Eng).
\\item
А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
2006. -- 96 с. (in Russ).
\\item
Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
с. (in Russ).
\\item
Е.А. Тесля. «Умный дом» своими руками. Строим интеллектуальную
цифровую систему в своей квартире / Тесля Е.А. -- СПб., 2008. -- 224 с.
(in Russ).
\\item
Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng).
\\item
Г.З. Зиятбекова, А.Т. Мазакова, А.Д. Бургегулов, Е.Б. Муратов.
Разработка энергосберегающей системы «Умный офис» и его принципы работы
// Вестник КазУТБ. -- Нур-Султан, 2022. -- № 1(14). -- С. 13-18. (in
Russ).
\\item
Ч. Платт. Электроника: логические микросхемы, усилители и датчики для
начинающих. -- СПб.: БХВ-Петербург, 2015. -- 448 с. (in Eng).
\\item
Т. Рашид. Создаем нейронную сеть. -- СПб.: ООО «Альфа-книга», 2018.
-- 272 с. (in Russ).
\\item
К.Е. Климентьев. Системы реального времени. -- Самара: Самар.гос.
аэрокосм. ун-т, 2008. -- 45 с. (in Russ).
\\item
Р. Каллан. Нейронные сети. Краткий справочник -- М.: ООО «И.Д.
Вильямс», 2017. -- 288 с. (in Russ).
\\item
С.В. Аксенов, В.Б. Новосельцев. Организация и использование
нейронных сетей (методы и технологии). -- Томск: Изд-во НТЛ, 2006. --
128 с. (in Russ).
\\end{enumerate}
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (latex-env-pair t fontified t) 7 16 (latex-env-pair t fontified t face font-lock-function-name-face) 16 17 (latex-env-pair t fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 93 (fontified t) 93 149 (fontified t) 149 150 (fontified t) 150 155 (fontified t face font-lock-keyword-face) 155 156 (fontified t) 156 209 (fontified t) 209 210 (fontified t face font-lock-keyword-face) 210 223 (fontified t face font-lock-string-face) 223 224 (fontified t face font-lock-keyword-face) 224 225 (fontified t) 225 226 (fontified t) 226 251 (fontified t) 251 252 (fontified t) 252 257 (fontified t face font-lock-keyword-face) 257 258 (fontified t) 258 299 (fontified t) 299 300 (fontified t face font-lock-keyword-face) 300 310 (fontified t face font-lock-string-face) 310 311 (fontified t face font-lock-keyword-face) 311 326 (fontified t) 326 339 (fontified t) 339 340 (fontified t) 340 345 (fontified t face font-lock-keyword-face) 345 346 (fontified t) 346 358 (fontified t) 358 359 (fontified t face font-lock-keyword-face) 359 368 (fontified t face font-lock-string-face) 368 369 (fontified t face font-lock-keyword-face) 369 409 (fontified t) 409 491 (fontified t) 491 492 (fontified t) 492 497 (fontified t face font-lock-keyword-face) 497 498 (fontified t) 498 540 (fontified t) 540 542 (fontified t face font-lock-keyword-face) 542 565 (fontified t) 565 651 (fontified t) 651 652 (fontified t) 652 657 (fontified t face font-lock-keyword-face) 657 658 (fontified t) 658 721 (fontified t) 721 758 (fontified t) 758 759 (fontified t face font-lock-keyword-face) 759 769 (fontified t face font-lock-string-face) 769 770 (fontified t face font-lock-keyword-face) 770 868 (fontified t) 868 869 (fontified t) 869 874 (fontified t face font-lock-keyword-face) 874 875 (fontified t) 875 945 (fontified t) 945 1006 (fontified t) 1006 1007 (fontified t) 1007 1012 (fontified t face font-lock-keyword-face) 1012 1013 (fontified t) 1013 1060 (fontified t) 1060 1061 (fontified t face font-lock-keyword-face) 1061 1072 (fontified t face font-lock-string-face) 1072 1073 (fontified t face font-lock-keyword-face) 1073 1081 (fontified t) 1081 1101 (fontified t) 1101 1102 (fontified t) 1102 1107 (fontified t face font-lock-keyword-face) 1107 1108 (fontified t) 1108 1174 (fontified t) 1174 1215 (fontified t) 1215 1216 (fontified t) 1216 1221 (fontified t face font-lock-keyword-face) 1221 1222 (fontified t) 1222 1279 (fontified t) 1279 1280 (fontified t face font-lock-keyword-face) 1280 1285 (fontified t face font-lock-string-face) 1285 1292 (fontified t face font-lock-string-face) 1292 1293 (fontified t face font-lock-keyword-face) 1293 1321 (fontified t) 1321 1322 (fontified t) 1322 1327 (fontified t face font-lock-keyword-face) 1327 1328 (fontified t) 1328 1388 (fontified t) 1388 1458 (fontified t) 1458 1476 (fontified t) 1476 1480 (fontified t face font-lock-keyword-face) 1480 1481 (latex-env-pair t fontified t) 1481 1490 (latex-env-pair t fontified t face font-lock-function-name-face) 1490 1491 (latex-env-pair t fontified t) 1491 1492 (fontified t)) . 45713) (undo-tree-id485 . 1474) (undo-tree-id486 . -18) (undo-tree-id487 . -18) (undo-tree-id488 . -658) (undo-tree-id489 . -18) (undo-tree-id490 . -18) (undo-tree-id491 . -18) (undo-tree-id492 . -18) (undo-tree-id493 . -18)) (25753 45735 33719 938000) 0 nil])
nil
([nil nil ((45959 . 45973) (45958 . 45959) 45949) ((#("
" 0 1 (fontified t)) . 45958) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#("\\end{enumerate" 0 4 (fontified t face font-lock-keyword-face) 4 5 (latex-env-pair t fontified t) 5 14 (latex-env-pair t fontified t face font-lock-function-name-face)) . 45959) (undo-tree-id359 . -13) (undo-tree-id360 . -13) (undo-tree-id361 . -14) (undo-tree-id362 . -13) (undo-tree-id363 . -13) (undo-tree-id364 . -13) (undo-tree-id365 . -13) (undo-tree-id366 . -13) (undo-tree-id367 . -13)) (25753 45381 880462 256000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-warning-face)) . 47220) (undo-tree-id256 . -1)) ((47220 . 47221)) (25753 45341 781777 483000) 0 nil])
nil
([nil nil ((#("1. " 0 1 (fontified t) 1 3 (fontified t)) . 45719) (undo-tree-id173 . -2)) ((45719 . 45722)) (25753 44686 128404 169000) 0 nil] [nil nil ((#("1. Ву Т.З. Анализ систем автоматизированного управления умным домом //
" 0 1 (fontified t) 1 3 (fontified t) 3 71 (fontified t)) . 45719) (undo-tree-id166 . -70) (undo-tree-id167 . -71)) ((45719 . 45790)) (25753 44673 223787 908000) 0 nil])
([nil nil ((#("1. " 0 1 (fontified t) 1 3 (fontified t)) . 45719) (undo-tree-id163 . -2) (undo-tree-id164 . -3)) ((45719 . 45722)) (25753 44619 821574 472000) 0 nil])
([nil nil ((#("1. " 0 1 (fontified t) 1 3 (fontified t)) . 45719) (undo-tree-id32 . -2) (undo-tree-id33 . -3)) ((45719 . 45722)) (25753 44379 132243 829000) 0 nil])
([nil nil ((#("1. " 0 1 (fontified t) 1 3 (fontified t)) . 45719) (undo-tree-id17 . -2) (undo-tree-id18 . -3)) ((45719 . 45722)) (25753 44347 713913 361000) 0 nil])
([nil nil ((#("1. " 0 1 (fontified t) 1 3 (fontified t)) . 45719) (undo-tree-id7 . -2)) ((45719 . 45722)) (25753 44296 643651 496000) 0 nil] [nil nil ((#("1" 0 1 (fontified t)) . 45719) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) ((45719 . 45720)) (25753 44286 557864 585000) 0 nil])
([nil nil ((47252 . 48791) (#("1. Wu T.Z. Analysis of automated control systems for smart house //
Young Scientist, 2011. -- No. 4. -- VOL. 1. -- Pр. 28-29. (in Eng)

2. A.F. Kotyuk. Sensors in Modern Measurements. -- M.: Radio and
Communications, 2006. -- 96 p. (in Russ)

3. J. Fryden. Modern Sensors. -- M.: Technosphere, 2005. -- 592 p. (in
Russ)

4. E.A. Tesla. \"Smart House with my own hands. Building an intelligent
digital system in your apartment / Teslya E.A. -- SPb., 2008. -- 224 p.
(in Russ)

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng)

6. G.Z. Ziyatbekova, A.T. Mazakova, A.D. Burgegulov, E.B. Muratov.
Development of energy-saving system \"Smart Office\" and its operating
principles // Bulletin of KazUTB. -- Nur-Sultan, 2022. -- No. 1(14). --
Pp. 13-18. (in Russ)

7. Ch. Platt. Electronics: Logic Circuits, Amplifiers and Sensors for
Beginners. -- SPb: BHV-Peterburg, 2015. -- 448 p. (in Eng)

8. Т. Rashid. Creating a neural network. -- St. Petersburg: OOO
\"Alpha-book\", 2018. -- 272 p. (in Russ)

9. K.E. Klimentiev. Real-time systems. -- Samara: Samara State Aerospace
University, 2008. -- 45 p. (in Russ)

10. Р. Callan. Neural networks. A Quick Reference Guide. -- M.: I.D.
Williams LLC, 2017. -- 288 p. (in Russ)

11. S.V. Aksenov, V.B. Novoseltsev. Organization and use of neural
networks (methods and technologies). -- Tomsk: NTL Publisher, 2006. --
128 p. (in Russ)
" 0 3 (fontified t) 3 13 (fontified t) 13 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 34 (fontified t) 34 37 (fontified t) 37 68 (fontified t) 68 100 (fontified t) 100 135 (fontified t) 135 136 (fontified t) 136 139 (fontified t) 139 141 (fontified t) 141 142 (fontified t) 142 151 (fontified t) 151 156 (fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 201 (fontified t) 201 205 (fontified t) 205 228 (fontified t) 228 230 (fontified t) 230 231 (fontified t) 231 242 (fontified t) 242 243 (fontified t) 243 246 (fontified t) 246 251 (fontified t) 251 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 282 (fontified t) 282 296 (fontified t) 296 314 (fontified t) 314 320 (fontified t) 320 321 (fontified t) 321 324 (fontified t) 324 329 (fontified t) 329 341 (fontified t) 341 342 (fontified t) 342 392 (fontified t) 392 451 (fontified t) 451 464 (fontified t) 464 474 (fontified t) 474 475 (fontified t) 475 478 (fontified t) 478 491 (fontified t) 491 520 (fontified t) 520 522 (fontified t face font-lock-keyword-face) 522 545 (fontified t) 545 614 (fontified t) 614 615 (fontified t) 615 631 (fontified t) 631 632 (fontified t) 632 635 (fontified t) 635 649 (fontified t) 649 678 (fontified t) 678 699 (fontified t) 699 834 (fontified t) 834 840 (fontified t) 840 861 (fontified t) 861 862 (fontified t) 862 864 (fontified t) 864 865 (fontified t) 865 918 (fontified t) 918 932 (fontified t) 932 975 (fontified t) 975 991 (fontified t) 991 992 (fontified t) 992 995 (fontified t) 995 1000 (fontified t) 1000 1056 (fontified t) 1056 1073 (fontified t) 1073 1096 (fontified t) 1096 1097 (fontified t) 1097 1100 (fontified t) 1100 1170 (fontified t) 1170 1191 (fontified t) 1191 1201 (fontified t) 1201 1207 (fontified t) 1207 1208 (fontified t) 1208 1212 (fontified t) 1212 1277 (fontified t) 1277 1297 (fontified t) 1297 1301 (fontified t) 1301 1306 (fontified t) 1306 1317 (fontified t) 1317 1318 (fontified t) 1318 1322 (fontified t) 1322 1361 (fontified t) 1361 1385 (fontified t) 1385 1447 (fontified t) 1447 1449 (fontified t) 1449 1450 (fontified t) 1450 1456 (fontified t) 1456 1459 (fontified t) 1459 1465 (fontified t) 1465 1466 (fontified t) 1466 1473 (fontified t)) . -47252) (undo-tree-id928 . -1456) (undo-tree-id929 . -136) (undo-tree-id930 . -243) (undo-tree-id931 . -321) (undo-tree-id932 . -475) (undo-tree-id933 . -632) (undo-tree-id934 . -862) (undo-tree-id935 . -992) (undo-tree-id936 . -1097) (undo-tree-id937 . -1208) (undo-tree-id938 . -1318) (undo-tree-id939 . -135) (undo-tree-id940 . -242) (undo-tree-id941 . -320) (undo-tree-id942 . -474) (undo-tree-id943 . -631) (undo-tree-id944 . -861) (undo-tree-id945 . -991) (undo-tree-id946 . -1096) (undo-tree-id947 . -1207) (undo-tree-id948 . -1317) (undo-tree-id949 . -1456) (undo-tree-id950 . -464) (undo-tree-id951 . -135) (undo-tree-id952 . -135) (undo-tree-id953 . -135) (undo-tree-id954 . -242) (undo-tree-id955 . -242) (undo-tree-id956 . -320) (undo-tree-id957 . -1473) (undo-tree-id958 . -1456) (undo-tree-id959 . -135) (undo-tree-id960 . -242) (undo-tree-id961 . -320) (undo-tree-id962 . -474) (undo-tree-id963 . -631) (undo-tree-id964 . -861) (undo-tree-id965 . -991) (undo-tree-id966 . -1096) (undo-tree-id967 . -1207) (undo-tree-id968 . -1456) (undo-tree-id969 . -1473) 48725) nil (25753 47059 848408 379000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 45713) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id697 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id725 . -1) (undo-tree-id727 . -1) (undo-tree-id729 . -1) (undo-tree-id731 . -1) (undo-tree-id733 . -1) (undo-tree-id735 . -1) (undo-tree-id737 . -1) (undo-tree-id739 . -1) (undo-tree-id741 . -1) (undo-tree-id743 . -1)) ((45713 . 45714)) (25753 46699 643773 491000) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (fontified t)) . 45731) (undo-tree-id422 . 1) (undo-tree-id423 . -1)) ((45731 . 45732)) (25753 45733 615582 87000) 0 nil])
([nil nil ((45973 . 45974)) ((#("}" 0 1 (latex-env-pair t fontified t)) . 45973)) (25753 45380 601164 550000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 47219) (undo-tree-id254 . -1)) ((47219 . 47220)) (25753 45340 988326 909000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -45850) (45845 . 45851) (#("i" 0 1 (fontified nil)) . -45845) (45844 . 45846)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 45844) (45845 . 45846) (#("ittemi" 0 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil)) . 45845) (45850 . 45851)) (25753 44684 248958 619000) 0 nil])
nil
([nil nil ((50528 . 50533) (#("i" 0 1 (fontified nil)) . -50528) (50527 . 50529) (#("Joldassova " 0 11 (fontified t)) . 50408) (undo-tree-id79 . -10) (undo-tree-id80 . -11) (50402 . 50407) (#("i" 0 1 (fontified nil)) . -50402) (50401 . 50403) (#("Sametova " 0 9 (fontified t)) . 50238) (undo-tree-id81 . -8) (undo-tree-id82 . -9) (50232 . 50237) (#("i" 0 1 (fontified nil)) . -50232) (50231 . 50233) (#("
" 0 1 (fontified t)) . 49944) (undo-tree-id83 . -1) (49938 . 49943) (#("i" 0 1 (fontified nil)) . -49938) (49937 . 49939) (#("\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}" 0 5 (fontified t face font-lock-keyword-face) 5 31 (fontified t) 31 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 54 (fontified t face tex-verbatim) 54 58 (face tex-verbatim fontified t) 58 60 (fontified t)) . 49937) (undo-tree-id84 . -59) (undo-tree-id85 . -60) (undo-tree-id86 . -60) (undo-tree-id87 . -60) (undo-tree-id88 . -60) (#("Mazakov " 0 8 (fontified t)) . 49637) (undo-tree-id89 . -7) (undo-tree-id90 . -8) (49631 . 49636) (#("i" 0 1 (fontified nil)) . -49631) (49630 . 49632) (#("Burgegulov " 0 11 (fontified t)) . 49527) (undo-tree-id91 . -10) (undo-tree-id92 . -11) (49521 . 49526) (#("i" 0 1 (fontified nil)) . -49521) (49520 . 49522) (#("\\emph{{\\bfseries " 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face (italic)) 7 16 (fontified t face (font-lock-keyword-face italic)) 16 17 (fontified t face (italic bold))) . 49492) (undo-tree-id93 . -16) (undo-tree-id94 . -17) (49486 . 49491) (#("i" 0 1 (fontified nil)) . -49486) (49485 . 49487) (#("Джолдасова " 0 6 (fontified t) 6 11 (fontified t)) . 49402) (undo-tree-id95 . -10) (undo-tree-id96 . -11) (49396 . 49401) (#("i" 0 1 (fontified nil)) . -49396) (49395 . 49397) (#("
" 0 1 (fontified t)) . 49261) (undo-tree-id97 . -1) (49255 . 49260) (#("i" 0 1 (fontified nil)) . -49255) (49254 . 49256) (#("\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}" 0 5 (fontified t face font-lock-keyword-face) 5 34 (fontified t) 34 44 (fontified t face font-lock-keyword-face) 44 45 (fontified t) 45 64 (fontified t face tex-verbatim) 64 66 (fontified t)) . 49254) (undo-tree-id98 . -65) (undo-tree-id99 . -66) (undo-tree-id100 . -66) (undo-tree-id101 . -66) (undo-tree-id102 . -66) (#("
" 0 1 (fontified t)) . 49047) (undo-tree-id103 . -1) (49041 . 49046) (#("i" 0 1 (fontified nil)) . -49041) (49040 . 49042) (#("\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}" 0 5 (fontified t face font-lock-keyword-face) 5 31 (fontified t) 31 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 58 (fontified t face tex-verbatim) 58 60 (fontified t)) . 49040) (undo-tree-id104 . -59) (undo-tree-id105 . -60) (undo-tree-id106 . -60) (undo-tree-id107 . -60) (undo-tree-id108 . -60) (#("
" 0 1 (fontified t)) . 48809) (undo-tree-id109 . -1) (48803 . 48808) (#("i" 0 1 (fontified nil)) . -48803) (48802 . 48804) (#("\\href{mailto:dizel_kz@bk.ru}{\\nolinkurl{dizel\\_kz@bk.ru}}" 0 5 (fontified t face font-lock-keyword-face) 5 19 (fontified t) 19 20 (display (raise -0.2) fontified t face (subscript)) 20 29 (fontified t) 29 39 (fontified t face font-lock-keyword-face) 39 40 (fontified t) 40 42 (fontified t face tex-verbatim) 42 55 (face tex-verbatim fontified t) 55 57 (fontified t)) . 48802) (undo-tree-id110 . -56) (undo-tree-id111 . -57) (undo-tree-id112 . -57) (undo-tree-id113 . -57) (undo-tree-id114 . -57) (#("Бургегулов " 0 11 (fontified t)) . 48740) (undo-tree-id115 . -10) (undo-tree-id116 . -11) (48734 . 48739) (#("i" 0 1 (fontified nil)) . -48734) (48733 . 48735) (#("\\emph{{\\bfseries " 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face (italic)) 7 13 (fontified t face (font-lock-keyword-face italic)) 13 16 (face (font-lock-keyword-face italic) fontified t) 16 17 (face (italic bold) fontified t)) . 48711) (undo-tree-id117 . -16) (undo-tree-id118 . -17) (48705 . 48710) (#("i" 0 1 (fontified nil)) . -48705) (48704 . 48706) (#("11. " 0 4 (fontified t)) . 48553) (undo-tree-id119 . -3) (undo-tree-id120 . -4) (48547 . 48552) (#("i" 0 1 (fontified nil)) . -48547) (48546 . 48548) (#("10. " 0 4 (fontified t)) . 48441) (undo-tree-id121 . -3) (undo-tree-id122 . -4) (48435 . 48440) (#("i" 0 1 (fontified nil)) . -48435) (48434 . 48436) (#("9. " 0 3 (fontified t)) . 48327) (undo-tree-id123 . -2) (undo-tree-id124 . -3) (48321 . 48326) (#("i" 0 1 (fontified nil)) . -48321) (48320 . 48322) (#("8. " 0 3 (fontified t)) . 48219) (undo-tree-id125 . -2) (undo-tree-id126 . -3) (48213 . 48218) (#("i" 0 1 (fontified nil)) . -48213) (48212 . 48214) (#("7. " 0 2 (fontified t) 2 3 (fontified t)) . 48086) (undo-tree-id127 . -2) (undo-tree-id128 . -3) (48080 . 48085) (#("i" 0 1 (fontified nil)) . -48080) (48079 . 48081) (#("6. " 0 3 (fontified t)) . 47853) (undo-tree-id129 . -2) (undo-tree-id130 . -3) (47847 . 47852) (#("i" 0 1 (fontified nil)) . -47847) (47846 . 47848) (#("5. " 0 3 (fontified t)) . 47693) (undo-tree-id131 . -2) (undo-tree-id132 . -3) (47687 . 47692) (#("i" 0 1 (fontified nil)) . -47687) (47686 . 47688) (#("4. " 0 3 (fontified t)) . 47536) (undo-tree-id133 . -2) (undo-tree-id134 . -3) (47530 . 47535) (#("i" 0 1 (fontified nil)) . -47530) (47529 . 47531) (#("3. " 0 3 (fontified t)) . 47455) (undo-tree-id135 . -2) (undo-tree-id136 . -3) (47449 . 47454) (#("i" 0 1 (fontified nil)) . -47449) (47448 . 47450) (#("2. " 0 3 (fontified t)) . 47345) (undo-tree-id137 . -2) (undo-tree-id138 . -3) (47339 . 47344) (#("i" 0 1 (fontified nil)) . -47339) (47338 . 47340) (#("1. " 0 3 (fontified t)) . 47206) (undo-tree-id139 . -2) (undo-tree-id140 . -3) (47200 . 47205) (#("i" 0 1 (fontified nil)) . -47200) (47199 . 47201) (#("{\\bfseries\\centering " 0 1 (fontified t) 1 10 (fontified t face font-lock-keyword-face) 10 20 (fontified t face (font-lock-keyword-face bold)) 20 21 (fontified t face (bold))) . 47187) (undo-tree-id141 . -20) (undo-tree-id142 . -21) (47181 . 47186) (#("i" 0 1 (fontified nil)) . -47181) (47180 . 47182) (#("11. " 0 4 (fontified t)) . 47032) (undo-tree-id143 . -3) (undo-tree-id144 . -4) (47026 . 47031) (#("i" 0 1 (fontified nil)) . -47026) (47025 . 47027) (#("10. " 0 4 (fontified t)) . 46925) (undo-tree-id145 . -3) (undo-tree-id146 . -4) (46919 . 46924) (#("i" 0 1 (fontified nil)) . -46919) (46918 . 46920) (#("9. " 0 3 (fontified t)) . 46810) (undo-tree-id147 . -2) (undo-tree-id148 . -3) (46804 . 46809) (#("i" 0 1 (fontified nil)) . -46804) (46803 . 46805) (#("8. " 0 3 (fontified t)) . 46714) (undo-tree-id149 . -2) (undo-tree-id150 . -3) (46708 . 46713) (#("i" 0 1 (fontified nil)) . -46708) (46707 . 46709) (#("7. " 0 3 (fontified t)) . 46575) (undo-tree-id151 . -2) (undo-tree-id152 . -3) (46569 . 46574) (#("i" 0 1 (fontified nil)) . -46569) (46568 . 46570) (#("6. " 0 3 (fontified t)) . 46357) (undo-tree-id153 . -2) (undo-tree-id154 . -3) (46351 . 46356) (#("i" 0 1 (fontified nil)) . -46351) (46350 . 46352) (#("5. " 0 3 (fontified t)) . 46196) (undo-tree-id155 . -2) (undo-tree-id156 . -3) (46190 . 46195) (#("i" 0 1 (fontified nil)) . -46190) (46189 . 46191) (#("4. " 0 3 (fontified t)) . 46043) (undo-tree-id157 . -2) (undo-tree-id158 . -3) (46037 . 46042) (#("i" 0 1 (fontified nil)) . -46037) (46036 . 46038) (#("3. " 0 1 (fontified t) 1 3 (fontified t)) . 45954) (undo-tree-id159 . -2) (undo-tree-id160 . -3) (45948 . 45953) (#("i" 0 1 (fontified nil)) . -45948) (45947 . 45949) (#("2. " 0 1 (fontified t) 1 3 (fontified t)) . 45851) (undo-tree-id161 . -2) (undo-tree-id162 . -3) (45845 . 45850) (#("i" 0 1 (fontified nil)) . -45845) (45844 . 45846)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 45844) (45845 . 45846) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 45845) (45851 . 45854) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 45947) (45948 . 45949) (#("ittem" 0 5 (face font-lock-keyword-face)) . 45948) (45954 . 45957) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 46036) (46037 . 46038) (#("ittem" 0 5 (face font-lock-keyword-face)) . 46037) (46043 . 46046) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 46189) (46190 . 46191) (#("ittem" 0 5 (face font-lock-keyword-face)) . 46190) (46196 . 46199) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 46350) (46351 . 46352) (#("ittem" 0 5 (face font-lock-keyword-face)) . 46351) (46357 . 46360) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 46568) (46569 . 46570) (#("ittem" 0 5 (face font-lock-keyword-face)) . 46569) (46575 . 46578) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 46707) (46708 . 46709) (#("ittem" 0 5 (face font-lock-keyword-face)) . 46708) (46714 . 46717) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 46803) (46804 . 46805) (#("ittem" 0 5 (face font-lock-keyword-face)) . 46804) (46810 . 46813) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 46918) (46919 . 46920) (#("ittem" 0 5 (face font-lock-keyword-face)) . 46919) (46925 . 46929) (#("\\i" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil)) . 47025) (47026 . 47027) (#("ittem" 0 5 (face font-lock-keyword-face)) . 47026) (47032 . 47036) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 47180) (47181 . 47182) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 47181) (47187 . 47208) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 47199) (47200 . 47201) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 47200) (47206 . 47209) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 47338) (47339 . 47340) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 47339) (47345 . 47348) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 47448) (47449 . 47450) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 47449) (47455 . 47458) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 47529) (47530 . 47531) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 47530) (47536 . 47539) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 47686) (47687 . 47688) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 47687) (47693 . 47696) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 47846) (47847 . 47848) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 47847) (47853 . 47856) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 48079) (48080 . 48081) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 48080) (48086 . 48089) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 48212) (48213 . 48214) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 48213) (48219 . 48222) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 48320) (48321 . 48322) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 48321) (48327 . 48330) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 48434) (48435 . 48436) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 48435) (48441 . 48445) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 48546) (48547 . 48548) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 48547) (48553 . 48557) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 48704) (48705 . 48706) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 48705) (48711 . 48728) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 48733) (48734 . 48735) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 48734) (48740 . 48751) (48802 . 48859) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 48802) (48803 . 48804) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 48803) (48809 . 48810) (49040 . 49100) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 49040) (49041 . 49042) (#("ittem" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face)) . 49041) (49047 . 49048) (49254 . 49320) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 49254) (49255 . 49256) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 49255) (49261 . 49262) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 49395) (49396 . 49397) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 49396) (49402 . 49413) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 49485) (49486 . 49487) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 49486) (49492 . 49509) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 49520) (49521 . 49522) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 49521) (49527 . 49538) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 49630) (49631 . 49632) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 49631) (49637 . 49645) (49937 . 49997) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 49937) (49938 . 49939) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 49938) (49944 . 49945) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 50231) (50232 . 50233) (#("ittem" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face)) . 50232) (50238 . 50247) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 50401) (50402 . 50403) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 50402) (50408 . 50419) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 50527) (50528 . 50529) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 50528)) (25753 44619 819524 980000) 0 nil])
([nil nil ((45845 . 45850) (#("i" 0 1 (fontified nil)) . -45845) (45844 . 45846) (#("|" 0 1 (fontified nil)) . -45844) (undo-tree-id28 . -1) 45845 (45844 . 45845) (#("?" 0 1 (fontified nil)) . -45844) (undo-tree-id29 . -1) 45845 (45844 . 45845) (#("?" 0 1 (fontified nil)) . -45844) (undo-tree-id30 . -1) (#("i" 0 1 (fontified nil)) . -45845) (undo-tree-id31 . -1) 45846 (45845 . 45846) (#("i" 0 1 (fontified nil)) . -45845) (45844 . 45846)) ((#("?i" 0 1 (fontified nil) 1 2 (fontified nil)) . 45844) (45845 . 45846) (#("i" 0 1 (fontified nil)) . 45845) (45844 . 45846) (#("?" 0 1 (fontified nil)) . 45844) (45844 . 45845) (#("|" 0 1 (fontified nil)) . 45844) (45844 . 45845) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 45844) (45845 . 45846) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 45845)) (25753 44378 684812 58000) 0 nil])
([nil nil ((#("2. " 0 1 (fontified t) 1 3 (fontified t)) . 45851) (undo-tree-id15 . -2) (undo-tree-id16 . -3) (45845 . 45850) (#("i" 0 1 (fontified nil)) . -45845) (45844 . 45846)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 45844) (45845 . 45846) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 45845) (45851 . 45854)) (25753 44347 713770 676000) 0 nil])
([nil nil ((45845 . 45850) (#("i" 0 1 (fontified nil)) . -45845) (45844 . 45846)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 45844) (45845 . 45846) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 45845)) (25753 44296 196533 102000) 0 nil])
nil
([nil nil ((48832 . 49822) (#("Бургегулов А. Д. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
\\href{mailto:dizel_kz@bk.ru}{\\nolinkurl{dizel\\_kz@bk.ru}}

Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}

Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com
" 0 11 (fontified t) 11 54 (fontified t) 54 73 (fontified t) 73 78 (fontified t face font-lock-keyword-face) 78 92 (fontified t) 92 93 (display (raise -0.2) fontified t face (subscript)) 93 102 (fontified t) 102 112 (fontified t face font-lock-keyword-face) 112 113 (fontified t) 113 115 (fontified t face tex-verbatim) 115 128 (fontified t face tex-verbatim) 128 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 198 (fontified t) 198 199 (fontified t) 199 222 (fontified t) 222 270 (fontified t) 270 300 (fontified t) 300 332 (fontified t) 332 363 (fontified t) 363 368 (fontified t face font-lock-keyword-face) 368 394 (fontified t) 394 404 (fontified t face font-lock-keyword-face) 404 405 (fontified t) 405 421 (fontified t face tex-verbatim) 421 423 (fontified t) 423 424 (fontified t) 424 425 (fontified t) 425 454 (fontified t) 454 490 (fontified t) 490 491 (fontified t) 491 611 (fontified t) 611 621 (fontified t) 621 632 (fontified t) 632 637 (fontified t face font-lock-keyword-face) 637 666 (fontified t) 666 676 (fontified t face font-lock-keyword-face) 676 677 (fontified t) 677 685 (fontified t face tex-verbatim) 685 696 (fontified t face tex-verbatim) 696 698 (fontified t) 698 699 (fontified t) 699 700 (fontified t) 700 769 (fontified t) 769 770 (fontified t) 770 778 (fontified t) 778 780 (fontified t face font-lock-keyword-face) 780 787 (fontified t) 787 792 (fontified t face font-lock-keyword-face) 792 834 (fontified t) 834 835 (fontified t) 835 841 (fontified t) 841 846 (fontified t) 846 908 (fontified t) 908 929 (fontified t)) . 48832) (undo-tree-id1166 . -929) (undo-tree-id1167 . -908) (undo-tree-id1168 . -131) (undo-tree-id1169 . -424) (undo-tree-id1170 . -699) (undo-tree-id1171 . -835) (undo-tree-id1172 . -929) (undo-tree-id1173 . -73) (undo-tree-id1174 . -73) (undo-tree-id1175 . -363) (undo-tree-id1176 . -363) (undo-tree-id1177 . -632) (undo-tree-id1178 . -632) (undo-tree-id1179 . -834) (undo-tree-id1180 . -834) (undo-tree-id1181 . -73) (undo-tree-id1182 . -363) (undo-tree-id1183 . -632) (undo-tree-id1184 . -834) (undo-tree-id1185 . -929) (undo-tree-id1186 . -929) (undo-tree-id1187 . -929) (undo-tree-id1188 . -929) (undo-tree-id1189 . -929) (undo-tree-id1190 . -908) (undo-tree-id1191 . -908) (undo-tree-id1192 . -908) (undo-tree-id1193 . -908) (undo-tree-id1194 . -834) (undo-tree-id1195 . -699) (undo-tree-id1196 . -424) (undo-tree-id1197 . -131)) nil (25753 47086 284964 548000) 0 nil] [nil nil ((48832 . 49824) (#("Бургегулов А. Д. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
\\href{mailto:dizel_kz@bk.ru}{\\nolinkurl{dizel\\_kz@bk.ru}}

Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}

Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com
" 0 11 (fontified t) 11 54 (fontified t) 54 73 (fontified t) 73 78 (fontified t face font-lock-keyword-face) 78 92 (fontified t) 92 93 (display (raise -0.2) fontified t face (subscript)) 93 102 (fontified t) 102 112 (fontified t face font-lock-keyword-face) 112 113 (fontified t) 113 115 (fontified t face tex-verbatim) 115 128 (fontified t face tex-verbatim) 128 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 198 (fontified t) 198 199 (fontified t) 199 222 (fontified t) 222 270 (fontified t) 270 300 (fontified t) 300 332 (fontified t) 332 363 (fontified t) 363 368 (fontified t face font-lock-keyword-face) 368 394 (fontified t) 394 404 (fontified t face font-lock-keyword-face) 404 405 (fontified t) 405 421 (fontified t face tex-verbatim) 421 423 (fontified t) 423 424 (fontified t) 424 425 (fontified t) 425 454 (fontified t) 454 490 (fontified t) 490 491 (fontified t) 491 611 (fontified t) 611 621 (fontified t) 621 632 (fontified t) 632 637 (fontified t face font-lock-keyword-face) 637 666 (fontified t) 666 676 (fontified t face font-lock-keyword-face) 676 677 (fontified t) 677 685 (fontified t face tex-verbatim) 685 696 (fontified t face tex-verbatim) 696 698 (fontified t) 698 699 (fontified t) 699 700 (fontified t) 700 769 (fontified t) 769 770 (fontified t) 770 778 (fontified t) 778 780 (fontified t face font-lock-keyword-face) 780 787 (fontified t) 787 792 (fontified t face font-lock-keyword-face) 792 834 (fontified t) 834 835 (fontified t) 835 841 (fontified t) 841 846 (fontified t) 846 908 (fontified t) 908 929 (fontified t)) . -48832) (undo-tree-id1114 . -908) (undo-tree-id1115 . -131) (undo-tree-id1116 . -424) (undo-tree-id1117 . -699) (undo-tree-id1118 . -835) (undo-tree-id1119 . -131) (undo-tree-id1120 . -73) (undo-tree-id1121 . -73) (undo-tree-id1122 . -363) (undo-tree-id1123 . -363) (undo-tree-id1124 . -632) (undo-tree-id1125 . -632) (undo-tree-id1126 . -834) (undo-tree-id1127 . -834) (undo-tree-id1128 . -929) (undo-tree-id1129 . -929) (undo-tree-id1130 . -929) (undo-tree-id1131 . -908) (undo-tree-id1132 . -908) (undo-tree-id1133 . -132) (undo-tree-id1134 . -132) (undo-tree-id1135 . -132) (undo-tree-id1136 . -132) (undo-tree-id1137 . -132) (undo-tree-id1138 . -132) (undo-tree-id1139 . -132) (undo-tree-id1140 . -132) (undo-tree-id1141 . -132) (undo-tree-id1142 . -132) (undo-tree-id1143 . -132) (undo-tree-id1144 . -132) (undo-tree-id1145 . -132) (undo-tree-id1146 . -132) (undo-tree-id1147 . -132) (undo-tree-id1148 . -132) (undo-tree-id1149 . -132) (undo-tree-id1150 . -132) (undo-tree-id1151 . -131) (undo-tree-id1152 . -131) (undo-tree-id1153 . -131) (undo-tree-id1154 . -908) (undo-tree-id1155 . -131) (undo-tree-id1156 . -131) (undo-tree-id1157 . -929) (undo-tree-id1158 . -908) (undo-tree-id1159 . -73) (undo-tree-id1160 . -363) (undo-tree-id1161 . -632) (undo-tree-id1162 . -834) (undo-tree-id1163 . -908) (undo-tree-id1164 . -929) 49761) ((48832 . 49761) (#("
\\begin{itemize}
\\\\item

Бургегулов А. Д. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
\\href{mailto:dizel_kz@bk.ru}{\\nolinkurl{dizel\\_kz@bk.ru}}

\\item
Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

\\item
Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}

\\item
Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

\\item
Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com
\\end{itemize}
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t latex-env-pair t) 8 15 (fontified t latex-env-pair t face font-lock-function-name-face) 15 16 (fontified t latex-env-pair t) 16 17 (fontified t) 17 19 (fontified t face font-lock-warning-face) 19 25 (fontified t) 25 36 (fontified t) 36 79 (fontified t) 79 98 (fontified t) 98 103 (fontified t face font-lock-keyword-face) 103 117 (fontified t) 117 118 (fontified t display (raise -0.2) face (subscript)) 118 127 (fontified t) 127 137 (fontified t face font-lock-keyword-face) 137 138 (fontified t) 138 140 (fontified t face tex-verbatim) 140 153 (fontified t face tex-verbatim) 153 155 (fontified t) 155 157 (fontified t) 157 162 (fontified t face font-lock-keyword-face) 162 163 (fontified t) 163 229 (fontified t) 229 230 (fontified t) 230 253 (fontified t) 253 301 (fontified t) 301 331 (fontified t) 331 363 (fontified t) 363 394 (fontified t) 394 399 (fontified t face font-lock-keyword-face) 399 425 (fontified t) 425 435 (fontified t face font-lock-keyword-face) 435 436 (fontified t) 436 452 (fontified t face tex-verbatim) 452 454 (fontified t) 454 456 (fontified t) 456 461 (fontified t face font-lock-keyword-face) 461 462 (fontified t) 462 491 (fontified t) 491 527 (fontified t) 527 528 (fontified t) 528 648 (fontified t) 648 658 (fontified t) 658 669 (fontified t) 669 674 (fontified t face font-lock-keyword-face) 674 703 (fontified t) 703 713 (fontified t face font-lock-keyword-face) 713 714 (fontified t) 714 722 (fontified t face tex-verbatim) 722 733 (fontified t face tex-verbatim) 733 735 (fontified t) 735 737 (fontified t) 737 742 (fontified t face font-lock-keyword-face) 742 743 (fontified t) 743 812 (fontified t) 812 813 (fontified t) 813 821 (fontified t) 821 823 (fontified t face font-lock-keyword-face) 823 830 (fontified t) 830 835 (fontified t face font-lock-keyword-face) 835 876 (fontified t) 876 878 (fontified t) 878 883 (fontified t face font-lock-keyword-face) 883 884 (fontified t) 884 890 (fontified t) 890 895 (fontified t) 895 957 (fontified t) 957 978 (fontified t) 978 982 (fontified t face font-lock-keyword-face) 982 983 (fontified t latex-env-pair t) 983 990 (fontified t latex-env-pair t face font-lock-function-name-face) 990 991 (fontified t latex-env-pair t) 991 992 (fontified t)) . 48832) (undo-tree-id1165 . 991)) (25753 47059 847821 992000) 0 nil] [nil nil ((48964 . 49810) (#("Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}

Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com
" 0 66 (fontified t) 66 67 (fontified t) 67 90 (fontified t) 90 138 (fontified t) 138 168 (fontified t) 168 200 (fontified t) 200 231 (fontified t) 231 236 (fontified t face font-lock-keyword-face) 236 262 (fontified t) 262 272 (fontified t face font-lock-keyword-face) 272 273 (fontified t) 273 289 (fontified t face tex-verbatim) 289 291 (fontified t) 291 292 (fontified t) 292 293 (fontified t) 293 322 (fontified t) 322 358 (fontified t) 358 359 (fontified t) 359 479 (fontified t) 479 489 (fontified t) 489 500 (fontified t) 500 505 (fontified t face font-lock-keyword-face) 505 534 (fontified t) 534 544 (fontified t face font-lock-keyword-face) 544 545 (fontified t) 545 553 (fontified t face tex-verbatim) 553 564 (fontified t face tex-verbatim) 564 566 (fontified t) 566 567 (fontified t) 567 568 (fontified t) 568 637 (fontified t) 637 638 (fontified t) 638 646 (fontified t) 646 648 (fontified t face font-lock-keyword-face) 648 655 (fontified t) 655 660 (fontified t face font-lock-keyword-face) 660 702 (fontified t) 702 703 (fontified t) 703 709 (fontified t) 709 714 (fontified t) 714 776 (fontified t) 776 797 (fontified t)) . 48964) (undo-tree-id1056 . -797) (undo-tree-id1057 . -776) (undo-tree-id1058 . -292) (undo-tree-id1059 . -567) (undo-tree-id1060 . -703) (undo-tree-id1061 . -797) (undo-tree-id1062 . -231) (undo-tree-id1063 . -231) (undo-tree-id1064 . -500) (undo-tree-id1065 . -500) (undo-tree-id1066 . -702) (undo-tree-id1067 . -702) (undo-tree-id1068 . -797) (undo-tree-id1069 . -797) (undo-tree-id1070 . -797) (undo-tree-id1071 . -797) (undo-tree-id1072 . -797) (undo-tree-id1073 . -776) (undo-tree-id1074 . -776) (undo-tree-id1075 . -776)) ((48964 . 49761) (#("
\\begin{itemize}
Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

\\item
Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}

\\item
Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

\\item
Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com
\\end{itemize}
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t latex-env-pair t) 8 15 (fontified t latex-env-pair t face font-lock-function-name-face) 15 16 (fontified t latex-env-pair t) 16 17 (fontified t) 17 83 (fontified t) 83 84 (fontified t) 84 107 (fontified t) 107 155 (fontified t) 155 185 (fontified t) 185 217 (fontified t) 217 248 (fontified t) 248 253 (fontified t face font-lock-keyword-face) 253 279 (fontified t) 279 289 (fontified t face font-lock-keyword-face) 289 290 (fontified t) 290 306 (fontified t face tex-verbatim) 306 308 (fontified t) 308 310 (fontified t) 310 315 (fontified t face font-lock-keyword-face) 315 316 (fontified t) 316 345 (fontified t) 345 381 (fontified t) 381 382 (fontified t) 382 502 (fontified t) 502 512 (fontified t) 512 523 (fontified t) 523 528 (fontified t face font-lock-keyword-face) 528 557 (fontified t) 557 567 (fontified t face font-lock-keyword-face) 567 568 (fontified t) 568 576 (fontified t face tex-verbatim) 576 587 (fontified t face tex-verbatim) 587 589 (fontified t) 589 591 (fontified t) 591 596 (fontified t face font-lock-keyword-face) 596 597 (fontified t) 597 666 (fontified t) 666 667 (fontified t) 667 675 (fontified t) 675 677 (fontified t face font-lock-keyword-face) 677 684 (fontified t) 684 689 (fontified t face font-lock-keyword-face) 689 730 (fontified t) 730 732 (fontified t) 732 737 (fontified t face font-lock-keyword-face) 737 738 (fontified t) 738 744 (fontified t) 744 749 (fontified t) 749 811 (fontified t) 811 832 (fontified t) 832 836 (fontified t face font-lock-keyword-face) 836 837 (latex-env-pair t fontified t) 837 844 (latex-env-pair t fontified t face font-lock-function-name-face) 844 845 (latex-env-pair t fontified t) 845 846 (fontified t)) . 48964) (undo-tree-id1094 . 845) (undo-tree-id1095 . 830) (undo-tree-id1096 . -846) (undo-tree-id1097 . -1) (undo-tree-id1098 . -16) (undo-tree-id1099 . -16) (undo-tree-id1100 . -16) (undo-tree-id1101 . -16) (undo-tree-id1102 . -16) (undo-tree-id1103 . -16) (undo-tree-id1104 . -21) (undo-tree-id1105 . -846) (undo-tree-id1106 . -846) (undo-tree-id1107 . -846) (undo-tree-id1108 . -846) (undo-tree-id1109 . -846) (undo-tree-id1110 . -846) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1)) (25753 47024 226128 526000) 0 nil] [nil nil ((48832 . 49808) (#("Бургегулов А. Д. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
\\href{mailto:dizel_kz@bk.ru}{\\nolinkurl{dizel\\_kz@bk.ru}}

Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}

Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com
" 0 11 (fontified t) 11 54 (fontified t) 54 73 (fontified t) 73 78 (fontified t face font-lock-keyword-face) 78 92 (fontified t) 92 93 (display (raise -0.2) fontified t face (subscript)) 93 102 (fontified t) 102 112 (fontified t face font-lock-keyword-face) 112 113 (fontified t) 113 115 (fontified t face tex-verbatim) 115 128 (fontified t face tex-verbatim) 128 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 198 (fontified t) 198 199 (fontified t) 199 222 (fontified t) 222 270 (fontified t) 270 300 (fontified t) 300 332 (fontified t) 332 363 (fontified t) 363 368 (fontified t face font-lock-keyword-face) 368 394 (fontified t) 394 404 (fontified t face font-lock-keyword-face) 404 405 (fontified t) 405 421 (fontified t face tex-verbatim) 421 423 (fontified t) 423 424 (fontified t) 424 425 (fontified t) 425 454 (fontified t) 454 490 (fontified t) 490 491 (fontified t) 491 611 (fontified t) 611 621 (fontified t) 621 632 (fontified t) 632 637 (fontified t face font-lock-keyword-face) 637 666 (fontified t) 666 676 (fontified t face font-lock-keyword-face) 676 677 (fontified t) 677 685 (fontified t face tex-verbatim) 685 696 (fontified t face tex-verbatim) 696 698 (fontified t) 698 699 (fontified t) 699 700 (fontified t) 700 769 (fontified t) 769 770 (fontified t) 770 778 (fontified t) 778 780 (fontified t face font-lock-keyword-face) 780 787 (fontified t) 787 792 (fontified t face font-lock-keyword-face) 792 834 (fontified t) 834 835 (fontified t) 835 841 (fontified t) 841 846 (fontified t) 846 908 (fontified t) 908 929 (fontified t)) . -48832) (undo-tree-id1031 . -908) (undo-tree-id1032 . -131) (undo-tree-id1033 . -424) (undo-tree-id1034 . -699) (undo-tree-id1035 . -835) (undo-tree-id1036 . -929) (undo-tree-id1037 . -73) (undo-tree-id1038 . -73) (undo-tree-id1039 . -363) (undo-tree-id1040 . -363) (undo-tree-id1041 . -632) (undo-tree-id1042 . -632) (undo-tree-id1043 . -834) (undo-tree-id1044 . -834) (undo-tree-id1045 . -929) (undo-tree-id1046 . -929) (undo-tree-id1047 . -908) (undo-tree-id1048 . -929) (undo-tree-id1049 . -929) (undo-tree-id1050 . -929) (undo-tree-id1051 . -908) (undo-tree-id1052 . -908) (undo-tree-id1053 . -929) 49761 (t 25753 46803 789394 789000)) ((48832 . 49761) (#("
\\begin{itemize}
Бургегулов А. Д. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
\\href{mailto:dizel_kz@bk.ru}{\\nolinkurl{dizel\\_kz@bk.ru}}\\item
Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}\\item
Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}\\item
Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru\\item
Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com
\\end{itemize}
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t latex-env-pair t) 8 15 (fontified t latex-env-pair t face font-lock-function-name-face) 15 16 (fontified t latex-env-pair t) 16 17 (fontified t) 17 28 (fontified t) 28 71 (fontified t) 71 90 (fontified t) 90 95 (fontified t face font-lock-keyword-face) 95 109 (fontified t) 109 110 (fontified t display (raise -0.2) face (subscript)) 110 119 (fontified t) 119 129 (fontified t face font-lock-keyword-face) 129 130 (fontified t) 130 132 (fontified t face tex-verbatim) 132 145 (fontified t face tex-verbatim) 145 147 (fontified t) 147 152 (fontified t face font-lock-keyword-face) 152 153 (fontified t) 153 219 (fontified t) 219 220 (fontified t) 220 243 (fontified t) 243 291 (fontified t) 291 321 (fontified t) 321 353 (fontified t) 353 384 (fontified t) 384 389 (fontified t face font-lock-keyword-face) 389 415 (fontified t) 415 425 (fontified t face font-lock-keyword-face) 425 426 (fontified t) 426 442 (fontified t face tex-verbatim) 442 444 (fontified t) 444 449 (fontified t face font-lock-keyword-face) 449 450 (fontified t) 450 479 (fontified t) 479 515 (fontified t) 515 516 (fontified t) 516 636 (fontified t) 636 646 (fontified t) 646 657 (fontified t) 657 662 (fontified t face font-lock-keyword-face) 662 691 (fontified t) 691 701 (fontified t face font-lock-keyword-face) 701 702 (fontified t) 702 710 (fontified t face tex-verbatim) 710 721 (fontified t face tex-verbatim) 721 723 (fontified t) 723 728 (fontified t face font-lock-keyword-face) 728 729 (fontified t) 729 798 (fontified t) 798 799 (fontified t) 799 807 (fontified t) 807 809 (fontified t face font-lock-keyword-face) 809 816 (fontified t) 816 821 (fontified t face font-lock-keyword-face) 821 862 (fontified t) 862 867 (fontified t face font-lock-keyword-face) 867 868 (fontified t) 868 874 (fontified t) 874 879 (fontified t) 879 941 (fontified t) 941 962 (fontified t) 962 966 (fontified t face font-lock-keyword-face) 966 967 (fontified t latex-env-pair t) 967 974 (fontified t latex-env-pair t face font-lock-function-name-face) 974 975 (fontified t latex-env-pair t) 975 976 (fontified t)) . 48832) (undo-tree-id1054 . 975) (t 25753 46939 451983 681000)) (25753 46939 442416 612000) 0 nil])
([nil nil ((47239 . 48768) (#("
1. Wu T.Z. Analysis of automated control systems for smart house //
Young Scientist, 2011. -- No. 4. -- VOL. 1. -- Pр. 28-29. (in Eng)

2. A.F. Kotyuk. Sensors in Modern Measurements. -- M.: Radio and
Communications, 2006. -- 96 p. (in Russ)

3. J. Fryden. Modern Sensors. -- M.: Technosphere, 2005. -- 592 p. (in
Russ)

4. E.A. Tesla. \"Smart House with my own hands. Building an intelligent
digital system in your apartment / Teslya E.A. -- SPb., 2008. -- 224 p.
(in Russ)

5. Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng)

6. G.Z. Ziyatbekova, A.T. Mazakova, A.D. Burgegulov, E.B. Muratov.
Development of energy-saving system \"Smart Office\" and its operating
principles // Bulletin of KazUTB. -- Nur-Sultan, 2022. -- No. 1(14). --
Pp. 13-18. (in Russ)

7. Ch. Platt. Electronics: Logic Circuits, Amplifiers and Sensors for
Beginners. -- SPb: BHV-Peterburg, 2015. -- 448 p. (in Eng)

8. Т. Rashid. Creating a neural network. -- St. Petersburg: OOO
\"Alpha-book\", 2018. -- 272 p. (in Russ)

9. K.E. Klimentiev. Real-time systems. -- Samara: Samara State Aerospace
University, 2008. -- 45 p. (in Russ)

10. Р. Callan. Neural networks. A Quick Reference Guide. -- M.: I.D.
Williams LLC, 2017. -- 288 p. (in Russ)

11. S.V. Aksenov, V.B. Novoseltsev. Organization and use of neural
networks (methods and technologies). -- Tomsk: NTL Publisher, 2006. --
128 p. (in Russ)
" 0 1 (fontified t) 1 4 (fontified t) 4 14 (fontified t) 14 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 35 (fontified t) 35 38 (fontified t) 38 69 (fontified t) 69 101 (fontified t) 101 136 (fontified t) 136 137 (fontified t) 137 140 (fontified t) 140 142 (fontified t) 142 143 (fontified t) 143 152 (fontified t) 152 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 202 (fontified t) 202 206 (fontified t) 206 229 (fontified t) 229 231 (fontified t) 231 232 (fontified t) 232 243 (fontified t) 243 244 (fontified t) 244 247 (fontified t) 247 252 (fontified t) 252 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t) 259 283 (fontified t) 283 297 (fontified t) 297 315 (fontified t) 315 321 (fontified t) 321 322 (fontified t) 322 325 (fontified t) 325 330 (fontified t) 330 342 (fontified t) 342 343 (fontified t) 343 393 (fontified t) 393 452 (fontified t) 452 465 (fontified t) 465 475 (fontified t) 475 476 (fontified t) 476 479 (fontified t) 479 492 (fontified t) 492 521 (fontified t) 521 523 (fontified t face font-lock-keyword-face) 523 546 (fontified t) 546 615 (fontified t) 615 616 (fontified t) 616 632 (fontified t) 632 633 (fontified t) 633 636 (fontified t) 636 650 (fontified t) 650 679 (fontified t) 679 700 (fontified t) 700 835 (fontified t) 835 841 (fontified t) 841 862 (fontified t) 862 863 (fontified t) 863 865 (fontified t) 865 866 (fontified t) 866 919 (fontified t) 919 933 (fontified t) 933 976 (fontified t) 976 992 (fontified t) 992 993 (fontified t) 993 996 (fontified t) 996 1001 (fontified t) 1001 1057 (fontified t) 1057 1074 (fontified t) 1074 1097 (fontified t) 1097 1098 (fontified t) 1098 1101 (fontified t) 1101 1171 (fontified t) 1171 1192 (fontified t) 1192 1202 (fontified t) 1202 1208 (fontified t) 1208 1209 (fontified t) 1209 1213 (fontified t) 1213 1278 (fontified t) 1278 1298 (fontified t) 1298 1302 (fontified t) 1302 1307 (fontified t) 1307 1318 (fontified t) 1318 1319 (fontified t) 1319 1323 (fontified t) 1323 1362 (fontified t) 1362 1386 (fontified t) 1386 1448 (fontified t) 1448 1450 (fontified t) 1450 1451 (fontified t) 1451 1457 (fontified t) 1457 1460 (fontified t) 1460 1466 (fontified t) 1466 1467 (fontified t) 1467 1474 (fontified t)) . -47239) (undo-tree-id642 . -1457) (undo-tree-id643 . -1) (undo-tree-id644 . -137) (undo-tree-id645 . -244) (undo-tree-id646 . -322) (undo-tree-id647 . -476) (undo-tree-id648 . -633) (undo-tree-id649 . -863) (undo-tree-id650 . -993) (undo-tree-id651 . -1098) (undo-tree-id652 . -1209) (undo-tree-id653 . -1319) (undo-tree-id654 . -1457) (undo-tree-id655 . -700) (undo-tree-id657 . -1457) (undo-tree-id658 . -136) (undo-tree-id659 . -243) (undo-tree-id660 . -321) (undo-tree-id661 . -475) (undo-tree-id663 . -632) (undo-tree-id664 . -862) (undo-tree-id665 . -992) (undo-tree-id666 . -1097) (undo-tree-id667 . -1208) (undo-tree-id668 . -1318) (undo-tree-id670 . -1457) 48713) ((47239 . 48713) (#("
\\begin{enumerate}
\\item
Wu T.Z. Analysis of automated control systems for smart house //
Young Scientist, 2011. -- No. 4. -- VOL. 1. -- Pр. 28-29. (in Eng)
\\item
A.F. Kotyuk. Sensors in Modern Measurements. -- M.: Radio and
Communications, 2006. -- 96 p. (in Russ)
\\item
J. Fryden. Modern Sensors. -- M.: Technosphere, 2005. -- 592 p. (in
Russ)
\\item
E.A. Tesla. \"Smart House with my own hands. Building an intelligent
digital system in your apartment / Teslya E.A. -- SPb., 2008. -- 224 p.
(in Russ)
\\item
Intelligent Buildings: Design, Management \\& Operation / edited by
Derek Clements-Croome. -- London: Thomas Telford Publishing, 2004. --
408 p. (in Eng)
\\item
G.Z. Ziyatbekova, A.T. Mazakova, A.D. Burgegulov, E.B. Muratov.
Development of energy-saving system \"Smart Office\" and its operating
principles // Bulletin of KazUTB. -- Nur-Sultan, 2022. -- No. 1(14). --
Pp. 13-18. (in Russ)
\\item
Ch. Platt. Electronics: Logic Circuits, Amplifiers and Sensors for
Beginners. -- SPb: BHV-Peterburg, 2015. -- 448 p. (in Eng)
\\item
Т. Rashid. Creating a neural network. -- St. Petersburg: OOO
\"Alpha-book\", 2018. -- 272 p. (in Russ)
\\item
K.E. Klimentiev. Real-time systems. -- Samara: Samara State Aerospace
University, 2008. -- 45 p. (in Russ)
\\item
Р. Callan. Neural networks. A Quick Reference Guide. -- M.: I.D.
Williams LLC, 2017. -- 288 p. (in Russ)
\\item
S.V. Aksenov, V.B. Novoseltsev. Organization and use of neural
networks (methods and technologies). -- Tomsk: NTL Publisher, 2006. --
128 p. (in Russ)
\\end{enumerate}
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t latex-env-pair t) 8 17 (fontified t latex-env-pair t face font-lock-function-name-face) 17 18 (fontified t latex-env-pair t) 18 19 (fontified t) 19 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 35 (fontified t) 35 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 56 (fontified t) 56 59 (fontified t) 59 90 (fontified t) 90 122 (fontified t) 122 156 (fontified t) 156 157 (fontified t) 157 162 (fontified t face font-lock-keyword-face) 162 163 (fontified t) 163 165 (fontified t) 165 166 (fontified t) 166 175 (fontified t) 175 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 225 (fontified t) 225 229 (fontified t) 229 252 (fontified t) 252 254 (fontified t) 254 255 (fontified t) 255 265 (fontified t) 265 266 (fontified t) 266 271 (fontified t face font-lock-keyword-face) 271 272 (fontified t) 272 277 (fontified t) 277 281 (fontified t) 281 282 (fontified t) 282 283 (fontified t) 283 284 (fontified t) 284 308 (fontified t) 308 322 (fontified t) 322 340 (fontified t) 340 345 (fontified t) 345 346 (fontified t) 346 351 (fontified t face font-lock-keyword-face) 351 352 (fontified t) 352 357 (fontified t) 357 369 (fontified t) 369 370 (fontified t) 370 420 (fontified t) 420 479 (fontified t) 479 492 (fontified t) 492 501 (fontified t) 501 502 (fontified t) 502 507 (fontified t face font-lock-keyword-face) 507 508 (fontified t) 508 521 (fontified t) 521 550 (fontified t) 550 552 (fontified t face font-lock-keyword-face) 552 575 (fontified t) 575 644 (fontified t) 644 645 (fontified t) 645 660 (fontified t) 660 661 (fontified t) 661 666 (fontified t face font-lock-keyword-face) 666 667 (fontified t) 667 681 (fontified t) 681 710 (fontified t) 710 731 (fontified t) 731 866 (fontified t) 866 872 (fontified t) 872 892 (fontified t) 892 893 (fontified t) 893 898 (fontified t face font-lock-keyword-face) 898 899 (fontified t) 899 952 (fontified t) 952 966 (fontified t) 966 1009 (fontified t) 1009 1024 (fontified t) 1024 1025 (fontified t) 1025 1030 (fontified t face font-lock-keyword-face) 1030 1031 (fontified t) 1031 1036 (fontified t) 1036 1092 (fontified t) 1092 1109 (fontified t) 1109 1131 (fontified t) 1131 1132 (fontified t) 1132 1137 (fontified t face font-lock-keyword-face) 1137 1138 (fontified t) 1138 1208 (fontified t) 1208 1229 (fontified t) 1229 1239 (fontified t) 1239 1244 (fontified t) 1244 1245 (fontified t) 1245 1250 (fontified t face font-lock-keyword-face) 1250 1251 (fontified t) 1251 1316 (fontified t) 1316 1336 (fontified t) 1336 1340 (fontified t) 1340 1345 (fontified t) 1345 1355 (fontified t) 1355 1356 (fontified t) 1356 1361 (fontified t face font-lock-keyword-face) 1361 1362 (fontified t) 1362 1401 (fontified t) 1401 1425 (fontified t) 1425 1487 (fontified t) 1487 1489 (fontified t) 1489 1490 (fontified t) 1490 1496 (fontified t) 1496 1499 (fontified t) 1499 1500 (fontified t) 1500 1505 (fontified t) 1505 1506 (fontified t) 1506 1513 (fontified t) 1513 1517 (fontified t face font-lock-keyword-face) 1517 1518 (fontified t latex-env-pair t) 1518 1527 (fontified t latex-env-pair t face font-lock-function-name-face) 1527 1528 (fontified t latex-env-pair t) 1528 1529 (fontified t)) . 47239) (undo-tree-id816 . -25) (undo-tree-id817 . -25) (undo-tree-id818 . -157) (undo-tree-id819 . -157) (undo-tree-id820 . -163) (undo-tree-id821 . -163) (undo-tree-id822 . -266) (undo-tree-id823 . -266) (undo-tree-id824 . -272) (undo-tree-id825 . -272) (undo-tree-id826 . -346) (undo-tree-id827 . -346) (undo-tree-id828 . -352) (undo-tree-id829 . -352) (undo-tree-id830 . -492) (undo-tree-id831 . -492) (undo-tree-id832 . -502) (undo-tree-id833 . -502) (undo-tree-id834 . -508) (undo-tree-id835 . -508) (undo-tree-id836 . -661) (undo-tree-id837 . -661) (undo-tree-id838 . -667) (undo-tree-id839 . -667) (undo-tree-id840 . -731) (undo-tree-id841 . -731) (undo-tree-id842 . -893) (undo-tree-id843 . -893) (undo-tree-id844 . -899) (undo-tree-id845 . -899) (undo-tree-id846 . -1025) (undo-tree-id847 . -1025) (undo-tree-id848 . -340) (undo-tree-id849 . -1496) (undo-tree-id850 . -661) (undo-tree-id851 . -340) (undo-tree-id852 . -340) (t 25753 45887 374423 567000)) (25753 45883 81705 907000) 0 nil])
([nil nil ((45712 . 45713) 45690) ((#("
" 0 1 (fontified t)) . 45712)) (25753 45733 615207 39000) 0 nil])
([nil nil ((45732 . 45736) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -45732) (undo-tree-id328 . -1) (45731 . 45733) (45730 . 45731) 45727) ((#("
" 0 1 (fontified t)) . 45730) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 45731) (45732 . 45733) (#("item" 0 4 (fontified t face font-lock-keyword-face)) . 45732)) (25753 45380 154173 687000) 0 nil])
([nil nil ((47234 . 47235) 47219) ((#("
" 0 1 (fontified t)) . 47234)) (25753 45340 610347 478000) 0 nil])
([nil nil ((#("2. " 0 1 (fontified t) 1 3 (fontified t)) . 45851) (undo-tree-id177 . -2)) ((45851 . 45854)) (25753 44683 847742 922000) 0 nil] [nil nil ((#("2. А.Ф. Котюк. Датчики в современных измерениях. -- М.: «Радио и связь»,
" 0 1 (fontified t) 1 3 (fontified t) 3 56 (fontified t) 56 57 (fontified t face font-lock-keyword-face) 57 70 (fontified t face font-lock-string-face) 70 71 (fontified t face font-lock-keyword-face) 71 73 (fontified t)) . 45851) (undo-tree-id171 . -72) (undo-tree-id172 . -73)) ((45851 . 45924)) (25753 44680 33876 603000) 0 nil])
nil
([nil nil ((#("2. " 0 1 (fontified t) 1 3 (fontified t)) . 45851) (undo-tree-id26 . -2) (undo-tree-id27 . -3)) ((45851 . 45854)) (25753 44378 260610 126000) 0 nil])
nil
([nil nil ((#("2. " 0 1 (fontified nil) 1 3 (fontified nil)) . 45851) (undo-tree-id11 . -2)) ((45851 . 45854)) (25753 44295 795252 522000) 0 nil] [nil nil ((#("2" 0 1 (fontified t)) . 45851) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) ((45851 . 45852)) (25753 44294 96044 353000) 0 nil])
([nil nil ((49869 . 51006) (#("Burgegulov A. D. -- doctoral student at Al-Farabi Kazakh National
University, Almaty, Kazakhstan, dizel\\_kz@bk.ru

Mazakov T. Zh. -- NAO Al-Farabi Kazakh National University, doctor of
physical and mathematical sciences, professor, Almaty, Kazakhstan, Chief
Researcher at the RSE Institute of Information and Computational
Technologies of the National Academy of Sciences of the Republic of
Kazakhstan, Almaty, Kazakhstan,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

Ziyatbekova G. Z. -- PhD, Acting Associate Professor NAO Al-Farabi
Kazakh National University; Senior Researcher at the RSE Institute of
Information and Computational Technologies of the National Academy of
Sciences of the Republic of Kazakhstan, Almaty, Kazakhstan,
ziyatbekova@mail.ru

Sametova Aigerim Aidarkyzy -- doctoral student at Al-Farabi Kazakh
National University, Almaty, Kazakhstan,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

Joldassova Bagila Ummetovna -- graduate student at Al-Farabi Kazakh
National University, Almaty, Kazakhstan, bagilaurel@gmail.com
" 0 11 (fontified t) 11 66 (fontified t) 66 100 (fontified t) 100 103 (fontified t) 103 105 (fontified t face font-lock-keyword-face) 105 114 (fontified t) 114 115 (fontified t) 115 123 (fontified t) 123 185 (fontified t) 185 211 (fontified t) 211 258 (fontified t) 258 321 (fontified t) 321 323 (fontified t) 323 423 (fontified t) 423 428 (fontified t face font-lock-keyword-face) 428 450 (fontified t) 450 454 (fontified t) 454 464 (fontified t face font-lock-keyword-face) 464 465 (fontified t) 465 467 (fontified t face tex-verbatim) 467 477 (fontified t face tex-verbatim) 477 481 (fontified t face tex-verbatim) 481 483 (fontified t) 483 484 (fontified t) 484 485 (fontified t) 485 501 (fontified t) 501 523 (fontified t) 523 551 (fontified t) 551 552 (fontified t) 552 597 (fontified t) 597 622 (fontified t) 622 624 (fontified t) 624 648 (fontified t) 648 692 (fontified t) 692 722 (fontified t) 722 752 (fontified t) 752 772 (fontified t) 772 773 (fontified t) 773 782 (fontified t) 782 840 (fontified t) 840 889 (fontified t) 889 891 (fontified t face font-lock-keyword-face) 891 898 (fontified t) 898 903 (fontified t face font-lock-keyword-face) 903 945 (fontified t) 945 946 (fontified t) 946 957 (fontified t) 957 1014 (fontified t) 1014 1076 (fontified t)) . 49869) (undo-tree-id1198 . -1076) (undo-tree-id1199 . -1014) (undo-tree-id1200 . -115) (undo-tree-id1201 . -484) (undo-tree-id1202 . -773) (undo-tree-id1203 . -946) (undo-tree-id1204 . -114) (undo-tree-id1205 . -114) (undo-tree-id1206 . -114) (undo-tree-id1207 . -114) (undo-tree-id1208 . -423) (undo-tree-id1209 . -423) (undo-tree-id1210 . -423) (undo-tree-id1211 . -772) (undo-tree-id1212 . -772) (undo-tree-id1213 . -772) (undo-tree-id1214 . -945) (undo-tree-id1215 . -945) (undo-tree-id1216 . -1076) (undo-tree-id1217 . -1076) (undo-tree-id1218 . -1014) (undo-tree-id1219 . -1014) (undo-tree-id1220 . -1014) (undo-tree-id1221 . -1014) (undo-tree-id1222 . -945) (undo-tree-id1223 . -772) (undo-tree-id1224 . -484) (undo-tree-id1225 . -114) (undo-tree-id1226 . -114) (t 25753 47086 297844 539000)) nil (25753 47099 917619 851000) 0 nil])
nil
([nil nil ((48982 . 48986) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -48982) (undo-tree-id1055 . -1) (48981 . 48983) (48980 . 48981) 48965) ((#("
" 0 1 (fontified t)) . 48980) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face)) . 48981) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (48982 . 48983) (#("item" 0 4 (fontified t face font-lock-keyword-face)) . 48982) (undo-tree-id1088 . -3) (undo-tree-id1089 . -3) (undo-tree-id1090 . -3) (undo-tree-id1091 . -3) (undo-tree-id1092 . -3) (undo-tree-id1093 . -3) (t 25753 47009 158267 838000)) (25753 47009 146873 861000) 0 nil])
nil
([nil nil ((48808 . 49773) (#("
Бургегулов А. Д. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
\\href{mailto:dizel_kz@bk.ru}{\\nolinkurl{dizel\\_kz@bk.ru}}

Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}

Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com

" 0 1 (fontified t) 1 12 (fontified t) 12 55 (fontified t) 55 74 (fontified t) 74 79 (fontified t face font-lock-keyword-face) 79 93 (fontified t) 93 94 (display (raise -0.2) fontified t face (subscript)) 94 103 (fontified t) 103 113 (fontified t face font-lock-keyword-face) 113 114 (fontified t) 114 116 (fontified t face tex-verbatim) 116 129 (fontified t face tex-verbatim) 129 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 199 (fontified t) 199 200 (fontified t) 200 223 (fontified t) 223 271 (fontified t) 271 301 (fontified t) 301 333 (fontified t) 333 364 (fontified t) 364 369 (fontified t face font-lock-keyword-face) 369 395 (fontified t) 395 405 (fontified t face font-lock-keyword-face) 405 406 (fontified t) 406 422 (fontified t face tex-verbatim) 422 424 (fontified t) 424 425 (fontified t) 425 426 (fontified t) 426 455 (fontified t) 455 491 (fontified t) 491 492 (fontified t) 492 612 (fontified t) 612 622 (fontified t) 622 633 (fontified t) 633 638 (fontified t face font-lock-keyword-face) 638 667 (fontified t) 667 677 (fontified t face font-lock-keyword-face) 677 678 (fontified t) 678 697 (fontified t face tex-verbatim) 697 699 (fontified t) 699 700 (fontified t) 700 701 (fontified t) 701 770 (fontified t) 770 771 (fontified t) 771 779 (fontified t) 779 781 (fontified t face font-lock-keyword-face) 781 788 (fontified t) 788 793 (fontified t face font-lock-keyword-face) 793 835 (fontified t) 835 836 (fontified t) 836 842 (fontified t) 842 847 (fontified t) 847 909 (fontified t) 909 930 (fontified t) 930 931 (fontified t)) . -48808) (undo-tree-id629 . -930) (undo-tree-id630 . -1) (undo-tree-id631 . -132) (undo-tree-id632 . -425) (undo-tree-id633 . -700) (undo-tree-id634 . -836) (undo-tree-id635 . -931) (undo-tree-id636 . -930) (undo-tree-id637 . -701) (undo-tree-id638 . -931) (undo-tree-id639 . -930) (undo-tree-id640 . -930) (undo-tree-id641 . -931) 49739) ((48808 . 49739) (#("
\\begin{enumerate}
Бургегулов А. Д. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
\\href{mailto:dizel_kz@bk.ru}{\\nolinkurl{dizel\\_kz@bk.ru}}

Мазаков Т.Ж. -- доктор физико-математических наук, главный научный
сотрудник Института Информационных и вычислительных технологий КН МНВО
РК, профессор НАО Казахского национального университета имени
аль-Фараби, Алматы, Казахстан,
\\href{mailto:tmazakov@mail.ru}{\\nolinkurl{tmazakov@mail.ru}}

Зиятбекова Г.З. -- PhD, и.о. доцента НАО Казахского национального
университета имени аль-Фараби; старший научный сотрудник Института
Информационных и вычислительных технологий КН МНВО РК, Алматы,
Казахстан,
\\href{mailto:ziyatbekova@mail.ru}{\\nolinkurl{ziyatbekova@mail.ru}}

Саметова А.А. -- докторант КазНУ имени аль-Фараби, Алматы, Казахстан,
sametova\\_aygerim\\href{mailto:amirkhanov.b@gmail.com}{@mail.}ru

Джолдасова Б.У. -- магистрант КазНУ имени аль-Фараби, Алматы, Казахстан,
bagilaurel@gmail.com

\\end{enumerate}
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t latex-env-pair t) 8 17 (fontified t latex-env-pair t face font-lock-function-name-face) 17 18 (fontified t latex-env-pair t) 18 19 (fontified t) 19 30 (fontified t) 30 73 (fontified t) 73 92 (fontified t) 92 97 (fontified t face font-lock-keyword-face) 97 111 (fontified t) 111 112 (fontified t display (raise -0.2) face (subscript)) 112 121 (fontified t) 121 131 (fontified t face font-lock-keyword-face) 131 132 (fontified t) 132 134 (fontified t face tex-verbatim) 134 147 (fontified t face tex-verbatim) 147 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 217 (fontified t) 217 218 (fontified t) 218 241 (fontified t) 241 289 (fontified t) 289 319 (fontified t) 319 351 (fontified t) 351 382 (fontified t) 382 387 (fontified t face font-lock-keyword-face) 387 413 (fontified t) 413 423 (fontified t face font-lock-keyword-face) 423 424 (fontified t) 424 440 (fontified t face tex-verbatim) 440 442 (fontified t) 442 443 (fontified t) 443 444 (fontified t) 444 473 (fontified t) 473 509 (fontified t) 509 510 (fontified t) 510 630 (fontified t) 630 640 (fontified t) 640 651 (fontified t) 651 656 (fontified t face font-lock-keyword-face) 656 685 (fontified t) 685 695 (fontified t face font-lock-keyword-face) 695 696 (fontified t) 696 715 (fontified t face tex-verbatim) 715 717 (fontified t) 717 718 (fontified t) 718 719 (fontified t) 719 788 (fontified t) 788 789 (fontified t) 789 797 (fontified t) 797 799 (fontified t face font-lock-keyword-face) 799 806 (fontified t) 806 811 (fontified t face font-lock-keyword-face) 811 853 (fontified t) 853 854 (fontified t) 854 860 (fontified t) 860 865 (fontified t) 865 927 (fontified t) 927 948 (fontified t) 948 949 (fontified t) 949 953 (fontified t face font-lock-keyword-face) 953 954 (fontified t latex-env-pair t) 954 963 (fontified t latex-env-pair t face font-lock-function-name-face) 963 964 (fontified t latex-env-pair t) 964 965 (fontified t)) . 48808) (undo-tree-id815 . 964)) (25753 45883 81252 498000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 45865 . 45866) (#("
" 0 1 (fontified nil)) . -45871) (45865 . 45872)) ((#("
\\item
" 0 1 (fontified nil rear-nonsticky nil) 1 6 (fontified nil face font-lock-keyword-face) 6 7 (fontified nil)) . 45865) (undo-tree-id342 . -6) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -6) (45871 . 45872) (nil rear-nonsticky t 45865 . 45866)) (25753 45379 753898 752000) 0 nil] [nil nil ((nil rear-nonsticky nil 45938 . 45939) (#("
" 0 1 (fontified nil)) . -45944) (45938 . 45945) 45870) ((#("
\\item
" 0 1 (fontified nil rear-nonsticky nil) 1 6 (fontified nil face font-lock-keyword-face) 6 7 (fontified nil)) . 45938) (undo-tree-id330 . -6) (undo-tree-id331 . -1) (undo-tree-id332 . -6) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (45944 . 45945) (nil rear-nonsticky t 45938 . 45939)) (25753 45372 639455 773000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-warning-face)) . 45713) (undo-tree-id252 . -1)) ((45713 . 45714)) (25753 45340 348348 91000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -45953) (45948 . 45954) (#("i" 0 1 (fontified nil)) . -45948) (45947 . 45949)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 45947) (45948 . 45949) (#("ittemi" 0 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil)) . 45948) (45953 . 45954)) (25753 44683 724257 173000) 0 nil])
nil
([nil nil ((45948 . 45953) (#("i" 0 1 (fontified nil)) . -45948) (45947 . 45949) (#("|" 0 1 (fontified nil)) . -45947) (undo-tree-id22 . -1) 45948 (45947 . 45948) (#("?" 0 1 (fontified nil)) . -45947) (undo-tree-id23 . -1) 45948 (45947 . 45948) (#("?" 0 1 (fontified nil)) . -45947) (undo-tree-id24 . -1) (#("i" 0 1 (fontified nil)) . -45948) (undo-tree-id25 . -1) 45949 (45948 . 45949) (#("i" 0 1 (fontified nil)) . -45948) (45947 . 45949)) ((#("?i" 0 1 (fontified nil) 1 2 (fontified nil)) . 45947) (45948 . 45949) (#("i" 0 1 (fontified nil)) . 45948) (45947 . 45949) (#("?" 0 1 (fontified nil)) . 45947) (45947 . 45948) (#("|" 0 1 (fontified nil)) . 45947) (45947 . 45948) (#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 45947) (45948 . 45949) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 45948)) (25753 44378 161338 840000) 0 nil])
([nil nil ((45948 . 45953) (#("i" 0 1 (fontified nil)) . -45948) (45947 . 45949)) ((#("\\i" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil)) . 45947) (45948 . 45949) (#("ittem" 0 5 (fontified t face font-lock-keyword-face)) . 45948)) (25753 44295 646470 50000) 0 nil])
nil
([nil current ((#("
" 0 1 (fontified t)) . 49869) (undo-tree-id1227 . -1) (t 25753 47099 924436 430000)) nil (25753 47144 117833 580000) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 45865) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1)) ((45865 . 45866) (t 25753 45374 400571 817000)) (25753 45374 391602 380000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 45731) (undo-tree-id249 . 1)) ((45731 . 45732)) (25753 45340 178423 56000) 0 nil])
([nil nil ((#("3. " 0 1 (fontified t) 1 3 (fontified t)) . 45954) (undo-tree-id179 . -2) (undo-tree-id180 . -3)) ((45954 . 45957)) (25753 44683 724169 313000) 0 nil] [nil nil ((#("3. Дж. Фрайден. Современные датчики. -- М.: «Техносфера», 2005. -- 592
" 0 1 (fontified t) 1 3 (fontified t) 3 44 (fontified t) 44 45 (fontified t face font-lock-keyword-face) 45 55 (fontified t face font-lock-string-face) 55 56 (fontified t face font-lock-keyword-face) 56 71 (fontified t)) . 45954) (undo-tree-id175 . -70) (undo-tree-id176 . -71)) ((45954 . 46025)) (25753 44682 780741 632000) 0 nil])
([nil nil ((#("3. " 0 1 (fontified t) 1 3 (fontified t)) . 45954) (undo-tree-id20 . -2) (undo-tree-id21 . -3)) ((45954 . 45957)) (25753 44378 161212 637000) 0 nil])
([nil nil ((#("3. " 0 1 (fontified nil) 1 3 (fontified nil)) . 45954) (undo-tree-id13 . -2) (undo-tree-id14 . -3)) ((45954 . 45957)) (25753 44295 646387 9000) 0 nil] [nil nil ((#("3" 0 1 (fontified t)) . 45954) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) ((45954 . 45955)) (25753 44294 981841 379000) 0 nil])
nil
nil
([nil nil ((#("1. " 0 1 (fontified t) 1 3 (fontified t)) . 45731) (undo-tree-id246 . 3) (undo-tree-id247 . -2)) ((45731 . 45734)) (25753 45340 8337 805000) 0 nil])
nil
nil
nil
nil
nil
([nil nil ((#("2. " 0 1 (fontified t) 1 3 (fontified t)) . 45862) (undo-tree-id244 . -2)) ((45862 . 45865)) (25753 45339 628400 442000) 0 nil])
([nil nil ((#("3. " 0 1 (fontified t) 1 3 (fontified t)) . 45964) (undo-tree-id242 . -2)) ((45964 . 45967)) (25753 45339 458377 629000) 0 nil])
([nil nil ((#("4. " 0 3 (fontified t)) . 46052) (undo-tree-id240 . -2)) ((46052 . 46055)) (25753 45339 312349 558000) 0 nil])
([nil nil ((#("5. " 0 3 (fontified t)) . 46204) (undo-tree-id238 . -2)) ((46204 . 46207)) (25753 45339 165513 4000) 0 nil])
([nil nil ((#("6. " 0 3 (fontified t)) . 46364) (undo-tree-id236 . -2)) ((46364 . 46367)) (25753 45338 972367 417000) 0 nil])
([nil nil ((#("7. " 0 3 (fontified t)) . 46581) (undo-tree-id234 . -2)) ((46581 . 46584)) (25753 45338 671785 120000) 0 nil])
([nil nil ((#("8. " 0 3 (fontified t)) . 46719) (undo-tree-id232 . -2)) ((46719 . 46722)) (25753 45338 641181 228000) 0 nil])
([nil nil ((#("9. " 0 3 (fontified t)) . 46814) (undo-tree-id230 . -2)) ((46814 . 46817)) (25753 45338 610503 24000) 0 nil])
([nil nil ((#("10. " 0 4 (fontified t)) . 46928) (undo-tree-id228 . -3)) ((46928 . 46932)) (25753 45338 410498 115000) 0 nil])
([nil nil ((#("11. " 0 4 (fontified t)) . 47034) (undo-tree-id297 . -3)) ((47034 . 47038) (t 25753 45277 594436 368000)) (25753 45277 585717 522000) 0 nil] [nil nil ((#("11. " 0 4 (fontified t)) . 47034) (undo-tree-id226 . -3) (undo-tree-id227 . -4)) ((47034 . 47038)) (25753 45273 487398 192000) 0 nil])
nil
nil
