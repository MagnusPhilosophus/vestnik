(undo-tree-save-format-version . 1)
"909fa373275c3a9e4938e280b8b4fe6a4422af7a"
[nil nil nil nil (25752 31422 511304 532000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -23869) (1 . 23870) (t 25752 31413 83475 752000)) nil (25752 31422 511302 87000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1)) nil (25752 31422 511298 246000) 0 nil])
([nil nil ((23868 . 23869) 23820) nil (25752 31422 511268 703000) 0 nil])
([nil nil ((40 . 43) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -40) (undo-tree-id21 . -1) (36 . 41) (#("textbf" 0 6 (face font-lock-keyword-face fontified t)) . 36) (undo-tree-id22 . -1) (undo-tree-id23 . -5) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (t 25752 31422 516757 320000)) nil (25752 43330 227190 584000) 0 nil])
([nil nil ((114 . 124) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -114) (undo-tree-id20 . -1) (110 . 115)) nil (25752 43330 227182 343000) 0 nil])
([nil nil ((nil rear-nonsticky nil 555 . 556) (#("
" 0 1 (fontified nil)) . -570) (555 . 571) 497) nil (25752 43330 227179 479000) 0 nil])
([nil nil ((557 . 560) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 557) (undo-tree-id13 . -4) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5)) nil (25752 43330 227176 616000) 0 nil])
([nil nil ((109 . 110) 99) nil (25752 43330 227169 562000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2029 . 2030) (#("
" 0 1 (fontified nil)) . -2044) (2029 . 2045)) nil (25752 43330 227167 187000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2470 . 2471) (#("
" 0 1 (fontified nil)) . -2485) (2470 . 2486) 2398) nil (25752 43330 227164 324000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3803 . 3804) (#("
" 0 1 (fontified nil)) . -3818) (3803 . 3819)) nil (25752 43330 227161 530000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4251 . 4252) (#("
" 0 1 (fontified nil)) . -4266) (4251 . 4267) 4186) nil (25752 43330 227158 597000) 0 nil])
([nil nil ((4253 . 4256) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 4253) (undo-tree-id10 . -4) (undo-tree-id11 . -5) (undo-tree-id12 . -5)) nil (25752 43330 227155 244000) 0 nil])
([nil nil ((2472 . 2475) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 2472) (undo-tree-id5 . -4) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -5) (undo-tree-id9 . -5)) nil (25752 43330 227148 51000) 0 nil])
([nil nil ((nil face (italic) 23253 . 23254) (nil face (font-lock-keyword-face italic) 23246 . 23253) (#("\\textbf{" 0 7 (face (font-lock-keyword-face italic)) 7 8 (face (italic))) . 23243) (23251 . 23262) (nil face (italic) 22420 . 22421) (nil face (font-lock-keyword-face italic) 22413 . 22420) (#("\\textbf{" 0 7 (face (font-lock-keyword-face italic)) 7 8 (face (italic))) . 22410) (22418 . 22429) ("\\textbf{" . 20164) (20172 . 20183) ("\\textbf{" . 19668) (19676 . 19687) ("\\textbf{" . 19044) (19052 . 19063) ("\\textbf{" . 15364) (15372 . 15383) ("\\textbf{" . 12928) (12936 . 12947) ("\\textbf{" . 8579) (8587 . 8598) (nil face font-lock-keyword-face 5606 . 5613) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5603) (5611 . 5622) (nil face font-lock-keyword-face 5505 . 5512) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5502) (5510 . 5521) (nil fontified t 3848 . 3849) (nil fontified t 3841 . 3848) (nil face font-lock-keyword-face 3841 . 3848) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 3838) (3846 . 3857) (nil fontified t 3754 . 3755) (nil fontified t 3747 . 3754) (nil face font-lock-keyword-face 3747 . 3754) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 3744) (3752 . 3763) (nil fontified t 3652 . 3653) (nil fontified t 3647 . 3652) (nil face font-lock-keyword-face 3647 . 3652) (nil fontified t 3645 . 3647) (nil face font-lock-keyword-face 3645 . 3647) (#("\\textbf{" 0 2 (face font-lock-keyword-face fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 3642) (3650 . 3661) (nil fontified t 2067 . 2068) (nil fontified t 2060 . 2067) (nil face font-lock-keyword-face 2060 . 2067) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2057) (2065 . 2076) (nil fontified t 1961 . 1962) (nil fontified t 1954 . 1961) (nil face font-lock-keyword-face 1954 . 1961) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 1951) (1959 . 1970) (nil fontified t 1869 . 1870) (nil fontified t 1862 . 1869) (nil face font-lock-keyword-face 1862 . 1869) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 1859) (1867 . 1878) (nil face font-lock-keyword-face 132 . 139) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 129) (137 . 148) (nil fontified t 11 . 12) (t 25752 43330 231414 376000) (nil fontified t 4 . 11) (t 25752 43330 231414 376000) (nil face font-lock-keyword-face 4 . 11) (t 25752 43330 231414 376000) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 1) (t 25752 43330 231414 376000) (9 . 20) (t 25752 43330 231414 376000)) nil (25752 43473 638022 66000) 0 nil])
([nil nil ((1952 . 1958)) nil (25752 43473 638010 682000) 0 nil])
([nil nil ((3649 . 3655)) nil (25752 43473 638005 793000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 3835) (undo-tree-id39 . -14) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . 9) (undo-tree-id44 . -7) (undo-tree-id45 . 2) (undo-tree-id46 . -14) (undo-tree-id47 . -6) (undo-tree-id48 . -6) (undo-tree-id49 . -6) (undo-tree-id50 . -15) 3841 (t 25752 43473 640627 425000)) nil (25752 43486 304203 879000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3755 . 3756) (#("
" 0 1 (fontified nil)) . -3770) (3755 . 3771)) nil (25752 43486 304194 451000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 2048) (undo-tree-id33 . -14) (undo-tree-id34 . -15) (undo-tree-id35 . -15) (undo-tree-id36 . -15) (undo-tree-id37 . -15) (undo-tree-id38 . -15)) nil (25752 43486 304191 98000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1950 . 1951) (#("
" 0 1 (fontified nil)) . -1965) (1950 . 1966)) nil (25752 43486 304172 451000) 0 nil])
([nil nil ((18307 . 18308) (t 25752 43486 307224 585000)) nil (25752 46055 753823 510000) 0 nil])
([nil nil ((18373 . 18376) (18369 . 18373) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -18369) (undo-tree-id67 . -1) (18366 . 18370) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -18366) (undo-tree-id68 . -1) (18359 . 18367) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -18359) (undo-tree-id69 . -1) (18356 . 18360) (#("l" 0 1 (face font-lock-keyword-face fontified t)) . -18356) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -18357) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -18358) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified t)) . -18359) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -18360) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -18361) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -18362) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -18363) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -18364) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -18365) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (#("{" 0 1 (fontified t)) . -18366) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) 18367 (18363 . 18367) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -18363) (undo-tree-id441 . -1) (18360 . 18364) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -18360) (undo-tree-id442 . -1) (18358 . 18361) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -18358) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified t)) . -18359) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -18360) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) 18361 (18360 . 18361) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -18360) (undo-tree-id475 . -1) (18355 . 18361) (18354 . 18355) 18307) nil (25752 46055 753802 977000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18373 . 18374) (#("
" 0 1 (fontified nil latex-env-pair t)) . -18392) (18373 . 18393) 18356) nil (25752 46055 753286 361000) 0 nil])
([nil nil ((18375 . 18378) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 18375) (undo-tree-id64 . -4) (undo-tree-id65 . -5) (undo-tree-id66 . -5)) nil (25752 46055 753283 497000) 0 nil])
([nil nil ((18373 . 18376) 18358) nil (25752 46055 753279 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18866 . 18867) (nil fontified nil 18376 . 18867) (18376 . 18867) 18375) nil (25752 46055 753275 745000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -18374) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -2) 18394) nil (25752 46055 753270 18000) 0 nil])
([nil nil ((18373 . 18390) (t 25752 46055 756458 203000)) nil (25752 46201 672510 12000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18902 . 18903) (#("
" 0 1 (fontified nil)) . -18938) (18902 . 18939) 18901 (t 25752 46201 678990 794000)) nil (25752 46239 35531 110000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18938 . 18939) (#("
" 0 1 (fontified nil)) . -18955) (18938 . 18956) 18903) nil (25752 46239 35528 666000) 0 nil])
([nil nil ((#("[language=Python]" 0 17 (latex-env-pair t fontified t)) . 18921) (undo-tree-id0 . -16) (undo-tree-id1 . 17) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . -17) (undo-tree-id5 . -17) (undo-tree-id6 . -17)) nil (25752 46239 35525 244000) 0 nil])
([nil nil ((18921 . 18922) 18920) nil (25752 46239 35504 361000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19244 . 19245) (nil fontified nil 18922 . 19245) (18922 . 19245)) nil (25752 46239 35498 145000) 0 nil])
([nil nil ((19281 . 19286) (#("i" 0 1 (fontified t)) . -19281) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (19279 . 19282) (#("n" 0 1 (fontified t)) . -19279) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("g" 0 1 (fontified t)) . -19280) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 19281 (19278 . 19281) (#("i" 0 1 (fontified t)) . -19278) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (19268 . 19279) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -19268) (undo-tree-id40 . -1) (19263 . 19269) (t 25752 46239 42119 99000)) nil (25752 46319 391906 8000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -19286) (undo-tree-id13 . 1) (undo-tree-id14 . -1) 19285) nil (25752 46319 391887 779000) 0 nil])
([nil nil ((#("Fig.4 " 0 6 (fontified t)) . 19286) (undo-tree-id10 . 6) (undo-tree-id11 . -5) (undo-tree-id12 . -6)) nil (25752 46319 391884 496000) 0 nil])
([nil nil ((#("- " 0 2 (fontified t)) . 19286) (undo-tree-id7 . 2) (undo-tree-id8 . -1) (undo-tree-id9 . -2)) nil (25752 46319 391878 350000) 0 nil])
([nil nil ((19320 . 19321)) nil (25752 46319 391863 963000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -19321) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("b" 0 1 (fontified t)) . -19322) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("b" 0 1 (fontified t)) . -19323) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("b" 0 1 (fontified t)) . -19324) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("b" 0 1 (fontified t)) . -19325) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("b" 0 1 (fontified t)) . -19326) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("b" 0 1 (fontified t)) . -19327) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("b" 0 1 (fontified t)) . -19328) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("b" 0 1 (fontified t)) . -19329) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("b" 0 1 (fontified t)) . -19330) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("b" 0 1 (fontified t)) . -19331) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("b" 0 1 (fontified t)) . -19332) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("b" 0 1 (fontified t)) . -19333) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 19334 (19321 . 19334) (t 25752 46319 395011 500000)) nil (25752 46340 700343 426000) 0 nil])
([nil nil ((19275 . 19280) (#("i" 0 1 (fontified t)) . -19275) (undo-tree-id41 . -1) (19274 . 19276) (#("lstlisting" 0 10 (fontified t)) . 19274) (undo-tree-id42 . -9) (undo-tree-id43 . -4) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -7) (undo-tree-id54 . -10) (undo-tree-id55 . -10)) nil (25752 46340 700151 642000) 0 nil])
([nil nil ((19273 . 19274) (t 25752 46340 701561 248000)) nil (25752 46358 713577 982000) 0 nil])
([nil nil ((19284 . 19292) (#("i" 0 1 (fontified t)) . -19284) (undo-tree-id190 . -1) (19283 . 19285) (t 25752 46358 714795 735000)) nil (25752 46381 142955 814000) 0 nil])
([nil nil ((19533 . 19534) (19532 . 19533) (#("}" 0 1 (fontified t latex-env-pair t)) . -19532) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . 1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 19533 (19515 . 19533) (19509 . 19515) (19502 . 19509) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -19502) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (19498 . 19503) (19497 . 19498) (t 25752 46381 148005 967000) 19479) nil (25752 46447 844132 807000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20166 . 20167) (nil fontified nil 19534 . 20167) (19534 . 20167)) nil (25752 46447 844115 696000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20167 . 20168) (#("
" 0 1 (fontified nil)) . -20184) (20167 . 20185) 20147) nil (25752 46447 844108 572000) 0 nil])
([nil nil ((19279 . 19282) (#("i" 0 1 (fontified t)) . -19279) (undo-tree-id202 . -1) (19276 . 19280) (#("i" 0 1 (fontified t)) . -19276) (undo-tree-id203 . -1) (19275 . 19277) (#("figure" 0 6 (fontified t)) . 19275) (undo-tree-id204 . -5) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (t 25752 46447 847639 957000)) nil (25752 46468 895895 49000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20207 . 20208) (nil fontified nil 20187 . 20208) (20187 . 20208)) nil (25752 46468 895885 621000) 0 nil])
([nil nil ((20270 . 20271)) nil (25752 46468 895883 246000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20186) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1)) nil (25752 46468 895877 519000) 0 nil])
([nil nil ((19452 . 19453) (#("~" 0 1 (fontified t)) . -19452) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 19453 (19452 . 19453) (t 25752 46468 900857 762000)) nil (25752 46475 687382 984000) 0 nil])
([nil nil ((#("%\\includegraphics[width=0.8\\textwidth]{image11}
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 48 (fontified t face font-lock-comment-face)) . 18307) (undo-tree-id300 . -47) (undo-tree-id301 . -48) (t 25752 46475 694153 817000)) nil (25752 46797 231835 63000) 0 nil])
([nil nil ((#("%\\includegraphics[width=0.8\\textwidth]{image12}
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 17 (fontified t face font-lock-comment-face) 17 27 (fontified t face font-lock-comment-face) 27 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-face) 39 46 (fontified t face font-lock-comment-face) 46 47 (fontified t face font-lock-comment-face) 47 48 (fontified t face font-lock-comment-face)) . 19404) (undo-tree-id297 . 47) (undo-tree-id298 . -47) (undo-tree-id299 . -48)) nil (25752 46797 231832 270000) 0 nil])
([nil nil ((12979 . 12982) (#("i" 0 1 (fontified t latex-env-pair t face font-lock-keyword-face)) . -12979) (undo-tree-id294 . -1) (12970 . 12980) (12969 . 12970) (12963 . 12969) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -12963) (undo-tree-id295 . -1) (12959 . 12964) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -12959) (undo-tree-id296 . -1) (12955 . 12960) (12955 . 12956)) nil (25752 46797 231828 498000) 0 nil])
([nil nil ((12983 . 12985)) nil (25752 46797 231824 308000) 0 nil])
([nil nil ((13051 . 13057) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -13051) (undo-tree-id273 . -1) (13045 . 13052) (#(" " 0 1 (fontified t)) . -13045) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t)) . -13046) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) 13047 (13044 . 13047) (13038 . 13044) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -13038) (undo-tree-id293 . -1) (13033 . 13039) (13030 . 13033) 12984) nil (25752 46797 231820 536000) 0 nil])
([nil nil ((#("Fig. 1- Program interface \"\"Comprehensive quality assessment and
classification of multidimensional objects\"
" 0 65 (fontified t) 65 109 (fontified t)) . 13059) (undo-tree-id252 . -108) (undo-tree-id253 . -108) (undo-tree-id254 . -108) (undo-tree-id255 . -108) (undo-tree-id256 . -65) (undo-tree-id257 . -65) (undo-tree-id258 . -65) (undo-tree-id259 . -65) (undo-tree-id260 . -65) (undo-tree-id261 . -65) (undo-tree-id262 . -65) (undo-tree-id263 . -65) (undo-tree-id264 . -65) (undo-tree-id265 . -65) (undo-tree-id266 . -65) (undo-tree-id267 . -65) (undo-tree-id268 . -109) (undo-tree-id269 . -108) (undo-tree-id270 . -65) (undo-tree-id271 . -108) (undo-tree-id272 . -109) 13167) nil (25752 46797 231806 79000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13151 . 13152) (nil fontified nil 13043 . 13152) (13043 . 13152) 13042) nil (25752 46797 231794 206000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -13151) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 13108) nil (25752 46797 231790 435000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13166) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1)) nil (25752 46797 232212 695000) 0 nil])
([nil nil ((13267 . 13274) (#("i" 0 1 (fontified nil)) . -13267) (13261 . 13268) (#(" " 0 1 (fontified nil)) . -13261) (undo-tree-id308 . -1) (#(" " 0 1 (fontified nil)) . -13262) (undo-tree-id309 . -1) 13263 (13260 . 13263) (13253 . 13260) (#("i" 0 1 (fontified nil)) . -13253) (13248 . 13254) (13245 . 13248) 13199 (13198 . 13200) (13193 . 13197) (#("i" 0 1 (fontified nil)) . -13193) (13184 . 13194) (13183 . 13184) (13176 . 13183) (#("i" 0 1 (fontified nil)) . -13176) (13171 . 13177) (#("i" 0 1 (fontified nil)) . -13171) (13167 . 13172) (13167 . 13168)) nil (25752 46807 941772 522000) 0 nil] [nil nil ((13217 . 13224) (#("i" 0 1 (fontified nil)) . -13217) (13211 . 13218) (#("}" 0 1 (fontified nil)) . -13211) (undo-tree-id220 . -1) (#("
" 0 1 (fontified nil)) . -13212) (undo-tree-id221 . 1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) 13213 (13212 . 13213) (13205 . 13212) (#("i" 0 1 (fontified nil)) . -13205) (13200 . 13206) (13199 . 13200) 13198 (13197 . 13199) (13192 . 13196) (#("i" 0 1 (fontified nil)) . -13192) (13183 . 13193) (13182 . 13183) (13175 . 13182) (#("i" 0 1 (fontified nil)) . -13175) (13170 . 13176) (#("i" 0 1 (fontified nil)) . -13170) (13166 . 13171) (13166 . 13167)) ((#("
" 0 1 (fontified nil)) . 13166) (#("\\begi" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil)) . 13166) (13170 . 13171) (#("inn{fi" 0 3 (fontified nil face font-lock-keyword-face) 3 5 (fontified nil) 5 6 (fontified nil)) . 13170) (13175 . 13176) (#("iggure}" 0 7 (fontified nil)) . 13175) (#("
" 0 1 (fontified t)) . 13182) (#("  \\centeri" 0 2 (fontified nil) 2 9 (fontified nil face font-lock-keyword-face) 9 10 (fontified nil)) . 13183) (13192 . 13193) (#("inng" 0 4 (fontified t face font-lock-keyword-face)) . 13192) (#("  " 0 2 (fontified nil)) . 13197) (#("
" 0 1 (fontified t)) . 13199) (#("\\capti" 0 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil)) . 13200) (13205 . 13206) (#("ioon*{}" 0 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil) 6 7 (fontified nil)) . 13205) (#("
" 0 1 (fontified nil)) . 13212) (undo-tree-id302 . 1) (13211 . 13213) (#("\\end{fi" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil latex-env-pair t) 5 6 (fontified nil latex-env-pair t face font-lock-function-name-face) 6 7 (fontified nil)) . 13211) (13217 . 13218) (#("iggure}" 0 6 (fontified t latex-env-pair t face font-lock-function-name-face) 6 7 (fontified t latex-env-pair t)) . 13217)) (25752 46797 231767 457000) 0 nil])
([nil nil ((#("Fig. 2 - Shows the input of metrics for compounding concrete mixtures" 0 69 (fontified t)) . 13276) (undo-tree-id305 . -68) (undo-tree-id306 . -69) (undo-tree-id307 . -69)) nil (25752 46807 941765 747000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 13327 . 13328) (nil fontified nil 13259 . 13328) (13259 . 13328) 13258) nil (25752 46807 941760 998000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-keyword-face)) . 13255) (undo-tree-id303 . -1) (undo-tree-id304 . -1)) nil (25752 46807 941755 690000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13344) (undo-tree-id344 . -1) (t 25752 46807 948997 253000)) nil (25752 46851 466210 980000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13344) (undo-tree-id343 . -1)) nil (25752 46851 466208 187000) 0 nil])
([nil nil ((13635 . 13642) (#("i" 0 1 (fontified nil)) . -13635) (13629 . 13636) (#(" " 0 1 (fontified nil)) . -13629) (undo-tree-id341 . -1) (#(" " 0 1 (fontified nil)) . -13630) (undo-tree-id342 . -1) 13631 (13628 . 13631) (13621 . 13628) (#("i" 0 1 (fontified nil)) . -13621) (13616 . 13622) (13613 . 13616) 13566 (13565 . 13567) (13560 . 13564) (#("i" 0 1 (fontified nil)) . -13560) (13551 . 13561) (13550 . 13551) (13543 . 13550) (#("i" 0 1 (fontified nil)) . -13543) (13538 . 13544) (#("i" 0 1 (fontified nil)) . -13538) (13534 . 13539) (13534 . 13535)) nil (25752 46851 466203 996000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-keyword-face)) . 13622) (undo-tree-id339 . -1) (undo-tree-id340 . -1)) nil (25752 46851 466197 850000) 0 nil])
([nil nil ((#("Fig. 3- Clustering of concrete mix formulations" 0 47 (fontified t)) . 13643) (undo-tree-id336 . -46) (undo-tree-id337 . -47) (undo-tree-id338 . -47)) nil (25752 46851 466194 428000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13672 . 13673) (nil fontified nil 13626 . 13673) (13626 . 13673) 13625) nil (25752 46851 466191 75000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13689) (undo-tree-id335 . -1)) nil (25752 46851 466188 212000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13689) (undo-tree-id333 . -1) (undo-tree-id334 . -1)) nil (25752 46851 466184 929000) 0 nil])
([nil nil ((14713 . 14718) (#("i" 0 1 (fontified t face font-lock-keyword-face)) . -14713) (undo-tree-id313 . -1) (14708 . 14714) (#(" " 0 1 (fontified t)) . -14708) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (#(" " 0 1 (fontified t)) . -14709) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) 14710 (14707 . 14710) 14623) nil (25752 46851 466180 669000) 0 nil])
([nil nil ((#("Table 2. Recipe of cluster 5-6" 0 30 (fontified t)) . 14162) (undo-tree-id310 . -29) (undo-tree-id311 . -30) (undo-tree-id312 . -30)) nil (25752 46851 466165 653000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14717 . 14718) (nil fontified nil 14688 . 14718) (14688 . 14718) 14687) nil (25752 46851 466154 548000) 0 nil])
([nil nil ((14718 . 14719)) nil (25752 46851 466151 685000) 0 nil])
([nil nil ((14719 . 14722)) nil (25752 46851 466146 377000) 0 nil])
([nil nil ((nil latex-env-pair t 13677 . 13683) (nil fontified t 13677 . 13683) (nil face font-lock-function-name-face 13677 . 13683) (#("figgure" 0 7 (latex-env-pair t fontified t face font-lock-function-name-face)) . 13677) (13684 . 13690) (#("figgure" 0 7 (fontified t)) . 13540) (13547 . 13553) (nil latex-env-pair t 13333 . 13339) (nil fontified t 13333 . 13339) (nil face font-lock-function-name-face 13333 . 13339) (#("figgure" 0 7 (latex-env-pair t fontified t face font-lock-function-name-face)) . 13333) (13340 . 13346) (#("figgure" 0 7 (fontified t)) . 13175) (t 25752 46851 468758 441000) (13182 . 13188) (t 25752 46851 468758 441000)) nil (25752 46870 719841 297000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-keyword-face)) . 13173) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (t 25752 46870 725319 438000)) nil (25752 46882 900504 232000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-keyword-face)) . 13537) (undo-tree-id345 . -1) (undo-tree-id346 . -1)) nil (25752 46882 900495 153000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-keyword-face)) . 13192) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (t 25752 46882 905252 602000)) nil (25752 46892 702554 634000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-keyword-face)) . 13555) (undo-tree-id353 . -1) (undo-tree-id354 . -1)) nil (25752 46933 541769 143000) 0 nil])
([nil nil ((20590 . 20597) (#("i" 0 1 (fontified nil)) . -20590) (20584 . 20591) (#(" " 0 1 (fontified nil)) . -20584) (undo-tree-id422 . -1) (#(" " 0 1 (fontified nil)) . -20585) (undo-tree-id423 . -1) 20586 (20583 . 20586) (20576 . 20583) (#("i" 0 1 (fontified nil)) . -20576) (20571 . 20577) (20568 . 20571) 20521 (20520 . 20522) (20515 . 20519) (#("i" 0 1 (fontified nil)) . -20515) (20506 . 20516) (20505 . 20506) (20498 . 20505) (#("i" 0 1 (fontified nil)) . -20498) (20493 . 20499) (#("i" 0 1 (fontified nil)) . -20493) (20489 . 20494) (20489 . 20490) (t 25752 46892 708532 140000)) nil (25752 47022 836865 78000) 0 nil] [nil nil ((20547 . 20560) (#("}" 0 1 (fontified nil)) . -20547) (undo-tree-id359 . -1) (#("
" 0 1 (fontified nil)) . -20548) (undo-tree-id360 . 1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) 20549 (20548 . 20549) (20536 . 20548) (20535 . 20536) (t 25752 46892 708532 140000) 20489) ((#("
" 0 1 (fontified t)) . 20535) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("\\captioon*{}" 0 10 (fontified nil face font-lock-keyword-face) 10 11 (fontified nil) 11 12 (fontified nil)) . 20536) (undo-tree-id369 . -11) (undo-tree-id370 . -11) (undo-tree-id371 . 1) (undo-tree-id372 . -11) (undo-tree-id373 . 1) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (#("
" 0 1 (fontified nil)) . 20548) (undo-tree-id376 . 1) (20547 . 20549) (#("\\end{figgure}" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t latex-env-pair t) 5 12 (fontified t latex-env-pair t face font-lock-function-name-face) 12 13 (fontified t latex-env-pair t)) . 20547) (undo-tree-id377 . -12) (undo-tree-id378 . -12) (undo-tree-id379 . 1) (undo-tree-id380 . -13) (undo-tree-id381 . 9) (undo-tree-id382 . -5) (undo-tree-id383 . -12)) (25752 46933 541431 810000) 0 nil] [nil nil ((20590 . 20597) (#("i" 0 1 (fontified nil)) . -20590) (20584 . 20591) (#(" " 0 1 (fontified nil)) . -20584) (undo-tree-id357 . -1) (#(" " 0 1 (fontified nil)) . -20585) (undo-tree-id358 . -1) 20586 (20583 . 20586) (20576 . 20583) (#("i" 0 1 (fontified nil)) . -20576) (20571 . 20577) (20568 . 20571) 20521 (20520 . 20522) (20515 . 20519) (#("i" 0 1 (fontified nil)) . -20515) (20506 . 20516) (20505 . 20506) (20498 . 20505) (#("i" 0 1 (fontified nil)) . -20498) (20493 . 20499) (#("i" 0 1 (fontified nil)) . -20493) (20489 . 20494) (20489 . 20490) (t 25752 46892 708532 140000)) ((#("
" 0 1 (fontified nil)) . 20489) (#("\\begi" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil)) . 20489) (20493 . 20494) (#("inn{fi" 0 3 (fontified nil face font-lock-keyword-face) 3 5 (fontified nil) 5 6 (fontified nil)) . 20493) (20498 . 20499) (#("iggure}" 0 7 (fontified nil)) . 20498) (#("
" 0 1 (fontified t)) . 20505) (#("  \\centeri" 0 2 (fontified nil) 2 9 (fontified nil face font-lock-keyword-face) 9 10 (fontified nil)) . 20506) (20515 . 20516) (#("inng" 0 4 (fontified t face font-lock-keyword-face)) . 20515) (#("  " 0 2 (fontified nil)) . 20520) (#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 20568) (#("\\capti" 0 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil)) . 20571) (20576 . 20577) (#("ioon*{}" 0 5 (fontified nil face font-lock-keyword-face) 5 7 (fontified nil)) . 20576) (#("
  " 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil)) . 20583) (20584 . 20586) (#("\\end{fi" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil latex-env-pair t) 5 6 (fontified nil latex-env-pair t face font-lock-function-name-face) 6 7 (fontified nil)) . 20584) (20590 . 20591) (#("iggure}" 0 6 (fontified t latex-env-pair t face font-lock-function-name-face) 6 7 (fontified t latex-env-pair t)) . 20590)) (25752 46928 900224 992000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-keyword-face)) . 20494) (undo-tree-id420 . -1) (undo-tree-id421 . -1)) nil (25752 47022 836858 792000) 0 nil])
nil
nil
([nil nil ((#("g" 0 1 (fontified t latex-env-pair t face font-lock-function-name-face)) . 20498) (undo-tree-id418 . -1) (undo-tree-id419 . -1)) nil (25752 47022 836855 859000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-keyword-face)) . 20514) (undo-tree-id416 . -1) (undo-tree-id417 . -1)) nil (25752 47022 836852 996000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t latex-env-pair t face font-lock-function-name-face)) . 20589) (undo-tree-id414 . -1) (undo-tree-id415 . -1)) nil (25752 47022 836849 713000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20725 . 20726) (#("
" 0 1 (fontified nil)) . -20830) (20725 . 20831)) nil (25752 47022 836846 361000) 0 nil])
([nil nil ((#("\\includegraphics[width=0.8\\textwidth]{image14}
" 0 16 (fontified t face font-lock-keyword-face) 16 26 (fontified t) 26 36 (fontified t face font-lock-keyword-face) 36 38 (fontified t) 38 45 (fontified t face font-lock-builtin-face) 45 47 (fontified t)) . 20831) (undo-tree-id412 . -46) (undo-tree-id413 . -47)) nil (25752 47022 836843 986000) 0 nil])
([nil nil ((#("13" 0 2 (fontified t face font-lock-builtin-face)) . -20799) (20801 . 20803) 20800) nil (25752 47022 836841 192000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-keyword-face)) . 20812) (undo-tree-id410 . -1) (undo-tree-id411 . -1)) nil (25752 47022 836838 888000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-keyword-face)) . 20575) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1)) nil (25752 47022 836835 46000) 0 nil])
([nil nil ((#("Fig. 6 - Results of the distribution of concrete mix recipe by class" 0 68 (fontified t)) . 20594) (undo-tree-id398 . -67) (undo-tree-id399 . -9) (undo-tree-id400 . -68) (undo-tree-id401 . -68)) nil (25752 47022 836829 249000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20645 . 20646) (nil fontified nil 20578 . 20646) (20578 . 20646) 20577) nil (25752 47022 836824 919000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20661) (undo-tree-id395 . 1) (undo-tree-id396 . -1) (undo-tree-id397 . -1)) nil (25752 47022 836821 986000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20661) (undo-tree-id389 . 1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1)) nil (25752 47022 836817 796000) 0 nil])
([nil nil ((#("Fig. 7 - Distribution of concrete mix formulations by clusters" 0 62 (fontified t)) . 20828) (undo-tree-id386 . -61) (undo-tree-id387 . -62) (undo-tree-id388 . -62)) nil (25752 47022 836812 69000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20873 . 20874) (nil fontified nil 20812 . 20874) (20812 . 20874) 20811) nil (25752 47022 836807 389000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20889) (undo-tree-id385 . -1)) nil (25752 47022 836804 107000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20889) (undo-tree-id384 . -1)) nil (25752 47022 836798 449000) 0 nil])
([nil nil ((#("\\large" 0 6 (fontified t face font-lock-keyword-face)) . 3649) (undo-tree-id424 . -5) (undo-tree-id425 . -5) (undo-tree-id426 . -5) (undo-tree-id427 . -5) (undo-tree-id428 . -6) (undo-tree-id429 . -5) (undo-tree-id430 . -5) (undo-tree-id431 . -6) 3654 (t 25752 47022 841151 377000)) nil (25752 47288 685395 423000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3771 . 3772) (nil fontified nil 3766 . 3772) (3766 . 3772) 3765) nil (25752 47288 685376 147000) 0 nil])
([nil nil ((25123 . 25909) (#("Акишев Каршыга Максутович, к.т.н., асс. профессор, кафедра
«Информационные технологии», Казахский университет технологии и бизнеса,
г. Астана, Республика Казахстан: email:akmail04cx@mail.ru

Карпов Валерий Иванович, доктор технических наук, профессор, кафедра
«Информационные технологии» Московский Государственный универститет
технологии и управления имени К.Г. Разумовского,г. Москва,
Россия:email:Vikarp@mail.ru

Акишева Ленара Каршыгаевна, ученица 7 классса Назарбаев Интеллектуальная
школа, г. Астана, Республика Казахстан LK@mail.ru

Тулегулов Амандос Дабысович, к.ф.м.н., асс. профессор, зав. кафедрой
«Информационные технологии», Казахский университет технологии и бизнеса,
г. Астана, Республика Казахстан: tud62@yandex.ru
" 0 59 (fontified t) 59 60 (fontified t face font-lock-keyword-face) 60 85 (fontified t face font-lock-string-face) 85 86 (fontified t face font-lock-keyword-face) 86 260 (fontified t) 260 261 (fontified t face font-lock-keyword-face) 261 286 (fontified t face font-lock-string-face) 286 287 (fontified t face font-lock-keyword-face) 287 609 (fontified t) 609 610 (fontified t face font-lock-keyword-face) 610 635 (fontified t face font-lock-string-face) 635 636 (fontified t face font-lock-keyword-face) 636 731 (fontified t)) . 25123) (undo-tree-id497 . -731) (undo-tree-id498 . -682) (undo-tree-id499 . -731) (undo-tree-id500 . -731) (undo-tree-id501 . -731) (undo-tree-id502 . -731) (undo-tree-id503 . -731) (undo-tree-id504 . -731) (undo-tree-id505 . -731) (undo-tree-id506 . -682) (undo-tree-id507 . -682) (undo-tree-id508 . -682) (undo-tree-id509 . -682) (undo-tree-id510 . -539) (undo-tree-id511 . -415) (undo-tree-id512 . -190) (t 25752 47288 689692 548000)) nil (25753 47210 966859 825000) 0 nil])
([nil nil ((24300 . 25137) (#("Akishev Karshyga Maksutovich, Candidate of Technical Sciences, Ass.
Professor, Department of \"Information Technology\", Kazakh University of
Technology and Business, Astana, Republic of
Kazakhstan:email:akmail04cx@mail.ru

Karpov Valery Ivanovich, Doctor of Technical Sciences, Professor,
Department of Information Technology, Moscow State University of
Technology and Management named after K.G. Razumovsky, Moscow, Russia
:email:Vikarp@mail.ru

Akisheva Lenara Karshygaevna, 7th grade student of Nazarbayev
Intellectual School, Astana, Republic of Kazakhstan email:LK@mail.ru

Tulegulov Amandos Dabysovich, Ph.D., Ass. Professor, Head of the
Department of \"Information Technology\", Kazakh University of Technology
and Business, Astana, Republic of Kazakhstan email:tud62@yandex.ru
" 0 578 (fontified t) 578 643 (fontified t) 643 715 (fontified t) 715 782 (fontified t)) . 24300) (undo-tree-id489 . -782) (undo-tree-id490 . -715) (undo-tree-id491 . -715) (undo-tree-id492 . -782) (undo-tree-id493 . -715) (undo-tree-id494 . -715) (undo-tree-id495 . -715) (undo-tree-id496 . -643)) nil (25753 47210 966848 441000) 0 nil])
([nil nil ((24043 . 24044)) nil (25753 47210 966695 629000) 0 nil])
([nil nil ((22034 . 24316) (#("1. Akishev K and other. Mathematical formulation and the problem
solution of clustering recipes of concrete mixtures using technogenic
waste waste and slags of metallurgical enterprises.-- Метаllurjia. -
2022. - 61(1)213-216. Zagreb, p.321.

2. Electronicresource
:URL:\\href{https://www.google.com/url?sa=t\\&source=web\\&rct=\\%20j\\&url=https://trends.rbc.ru}{https://www.google.com/url?sa=t\\&source=web\\&rct=
j\\&url=https://trends.rbc.ru}/trends/amp/news/61b359739a7947c7376ef7ce\\&ved
=2ahUKEwi8t6 uloOj-AhWPxosKHaboDG4QFnoECCAQAQ\\&usg=
AOvVaw2QeUcHkOYOZ3RdPy3Sttjx -Date of application 12.05.2023.

3. Electronic
resource:URL:\\url{https://cyberleninka.ru/article/n/analiz-i-klassifikatsiya-algoritmov-klasterizatsii}
- Date of application 12.05.2023.

4. Electronic
resource:URL:\\url{https://etu.ru/assets/files/nauka/}dissertacii /2009
/SIElizarov.doc. -date of application 12.05.2023.

5. Electronicresource:
URL:\\url{https://elibrary.ru/item.asp?id=45420956} - Date of application
12.05.2023.

6. Electronicresource :URL:\\url{https://habr.com/ru/articles/322034/}
-Date of application 12.05.2023.

7. Electronic resource:URL:
\\url{http://pzs.dstu.dp.ua/DataMining/cluster/bibl/\\%25}D0\\% 9A
\\%D0\\%9B\\%D0\\%90\\%D0\\%A1\\%D0\\%A2\\%D0\\%95\\%D0\\%A0\\%D0\\%98\\%D0\\%97\\%D0\\%90\\%D0\\%A6\\%D0\\%98\\%D0\\%AF\\%20\\%D0\\%9E\\%D0\\%91\\%D0\\%AA\\%D0\\%95\\%D0\\%9A\\%D0\\%A2\\%D0\\%9E\\%D0\\%92\\%20\\%D0\\%A1\\%20\\%D0\\%9F\\%D0\\%9E\\%D0\\%9C\\%D0\\%9E\\%D0\\%A9\\%D0\\%AC\\%D0\\%AE\\%20\\%D0\\%90\\%D0\\%9B\\%D0\\%93\\%D0\\%9E\\%D0\\%A0\\%D0\\%98\\%D0\\%A2\\%D0\\%9C\\%D0\\%90\\%20DBSCAN.pdf
- Date of application 12.05.2023{]}

8. Electronicresource: URL:
\\url{https://www.math.spbu.ru/SD_AIS/documents/2014-05-341/2014-05-tw11.pdf}
-Date of application 12.05.2023.

9. Electronicresource:URL:
\\url{https://core.ac.uk/download/pdf/196226625.pdf} - date of
application 12.05.2023.

10. Electronic resource :URL: Ortiz-Arroyo D. Discovering Sets of Key
Players in Social Networks // Computational Social Networks Analysis. --
2010 -- C. 27-47 {[}Date of application 12.05.2023.

11. Electronic resource:URL:
\\href{https://kpfu.ru/portal/docs/F_1980845423/161_3\\%20_phys\\%20_mat_8.pdf}{https://kpfu.ru/portal/docs/F\\_1980845423/161\\_3
\\_phys \\_mat\\_8.pdf} - Date of application 12.05.2023.
" 0 35 (fontified t) 35 42 (fontified t) 42 65 (fontified t) 65 110 (fontified t) 110 112 (fontified t) 112 124 (fontified t) 124 126 (fontified t) 126 135 (fontified t) 135 138 (fontified t) 138 204 (fontified t) 204 241 (fontified t) 241 244 (fontified t) 244 263 (fontified t) 263 264 (fontified t) 264 269 (fontified t) 269 274 (fontified t face font-lock-keyword-face) 274 291 (fontified t) 291 306 (fontified t) 306 308 (fontified t face font-lock-keyword-face) 308 318 (fontified t) 318 320 (fontified t face font-lock-keyword-face) 320 324 (fontified t) 324 326 (fontified t face font-lock-keyword-face) 326 329 (fontified t) 329 331 (fontified t face font-lock-keyword-face) 331 342 (fontified t) 342 354 (fontified t) 354 389 (fontified t) 389 391 (fontified t face font-lock-keyword-face) 391 401 (fontified t) 401 403 (fontified t face font-lock-keyword-face) 403 408 (fontified t) 408 409 (fontified t) 409 411 (fontified t face font-lock-keyword-face) 411 430 (fontified t) 430 478 (fontified t) 478 480 (fontified t face font-lock-keyword-face) 480 484 (fontified t) 484 529 (fontified t) 529 531 (fontified t face font-lock-keyword-face) 531 626 (fontified t) 626 630 (fontified t face font-lock-keyword-face) 630 631 (fontified t) 631 715 (fontified t face tex-verbatim) 715 737 (fontified t) 737 751 (fontified t) 751 779 (fontified t) 779 783 (fontified t face font-lock-keyword-face) 783 784 (fontified t) 784 818 (fontified t face tex-verbatim) 818 915 (fontified t) 915 919 (fontified t face font-lock-keyword-face) 919 920 (fontified t) 920 960 (fontified t face tex-verbatim) 960 1024 (fontified t) 1024 1028 (fontified t face font-lock-keyword-face) 1028 1029 (fontified t) 1029 1065 (fontified t face tex-verbatim) 1065 1067 (fontified t) 1067 1129 (fontified t) 1129 1133 (fontified t face font-lock-keyword-face) 1133 1134 (fontified t) 1134 1184 (fontified t face tex-verbatim) 1184 1187 (fontified t) 1187 1189 (fontified t face font-lock-keyword-face) 1189 1193 (fontified t) 1193 1195 (fontified t face font-lock-keyword-face) 1195 1197 (fontified t) 1197 1199 (fontified t face font-lock-keyword-face) 1199 1201 (fontified t) 1201 1203 (fontified t face font-lock-keyword-face) 1203 1205 (fontified t) 1205 1207 (fontified t face font-lock-keyword-face) 1207 1209 (fontified t) 1209 1211 (fontified t face font-lock-keyword-face) 1211 1213 (fontified t) 1213 1215 (fontified t face font-lock-keyword-face) 1215 1217 (fontified t) 1217 1219 (fontified t face font-lock-keyword-face) 1219 1221 (fontified t) 1221 1223 (fontified t face font-lock-keyword-face) 1223 1225 (fontified t) 1225 1227 (fontified t face font-lock-keyword-face) 1227 1229 (fontified t) 1229 1231 (fontified t face font-lock-keyword-face) 1231 1233 (fontified t) 1233 1235 (fontified t face font-lock-keyword-face) 1235 1237 (fontified t) 1237 1239 (fontified t face font-lock-keyword-face) 1239 1241 (fontified t) 1241 1243 (fontified t face font-lock-keyword-face) 1243 1245 (fontified t) 1245 1247 (fontified t face font-lock-keyword-face) 1247 1249 (fontified t) 1249 1251 (fontified t face font-lock-keyword-face) 1251 1253 (fontified t) 1253 1255 (fontified t face font-lock-keyword-face) 1255 1257 (fontified t) 1257 1259 (fontified t face font-lock-keyword-face) 1259 1261 (fontified t) 1261 1263 (fontified t face font-lock-keyword-face) 1263 1265 (fontified t) 1265 1267 (fontified t face font-lock-keyword-face) 1267 1269 (fontified t) 1269 1271 (fontified t face font-lock-keyword-face) 1271 1273 (fontified t) 1273 1275 (fontified t face font-lock-keyword-face) 1275 1277 (fontified t) 1277 1279 (fontified t face font-lock-keyword-face) 1279 1281 (fontified t) 1281 1283 (fontified t face font-lock-keyword-face) 1283 1285 (fontified t) 1285 1287 (fontified t face font-lock-keyword-face) 1287 1289 (fontified t) 1289 1291 (fontified t face font-lock-keyword-face) 1291 1293 (fontified t) 1293 1295 (fontified t face font-lock-keyword-face) 1295 1297 (fontified t) 1297 1299 (fontified t face font-lock-keyword-face) 1299 1301 (fontified t) 1301 1303 (fontified t face font-lock-keyword-face) 1303 1305 (fontified t) 1305 1307 (fontified t face font-lock-keyword-face) 1307 1309 (fontified t) 1309 1311 (fontified t face font-lock-keyword-face) 1311 1313 (fontified t) 1313 1315 (fontified t face font-lock-keyword-face) 1315 1317 (fontified t) 1317 1319 (fontified t face font-lock-keyword-face) 1319 1321 (fontified t) 1321 1323 (fontified t face font-lock-keyword-face) 1323 1325 (fontified t) 1325 1327 (fontified t face font-lock-keyword-face) 1327 1329 (fontified t) 1329 1331 (fontified t face font-lock-keyword-face) 1331 1333 (fontified t) 1333 1335 (fontified t face font-lock-keyword-face) 1335 1337 (fontified t) 1337 1339 (fontified t face font-lock-keyword-face) 1339 1341 (fontified t) 1341 1343 (fontified t face font-lock-keyword-face) 1343 1345 (fontified t) 1345 1347 (fontified t face font-lock-keyword-face) 1347 1349 (fontified t) 1349 1351 (fontified t face font-lock-keyword-face) 1351 1353 (fontified t) 1353 1355 (fontified t face font-lock-keyword-face) 1355 1357 (fontified t) 1357 1359 (fontified t face font-lock-keyword-face) 1359 1361 (fontified t) 1361 1363 (fontified t face font-lock-keyword-face) 1363 1365 (fontified t) 1365 1367 (fontified t face font-lock-keyword-face) 1367 1369 (fontified t) 1369 1371 (fontified t face font-lock-keyword-face) 1371 1373 (fontified t) 1373 1375 (fontified t face font-lock-keyword-face) 1375 1377 (fontified t) 1377 1379 (fontified t face font-lock-keyword-face) 1379 1381 (fontified t) 1381 1383 (fontified t face font-lock-keyword-face) 1383 1385 (fontified t) 1385 1387 (fontified t face font-lock-keyword-face) 1387 1389 (fontified t) 1389 1391 (fontified t face font-lock-keyword-face) 1391 1393 (fontified t) 1393 1395 (fontified t face font-lock-keyword-face) 1395 1397 (fontified t) 1397 1399 (fontified t face font-lock-keyword-face) 1399 1401 (fontified t) 1401 1403 (fontified t face font-lock-keyword-face) 1403 1405 (fontified t) 1405 1407 (fontified t face font-lock-keyword-face) 1407 1409 (fontified t) 1409 1411 (fontified t face font-lock-keyword-face) 1411 1413 (fontified t) 1413 1415 (fontified t face font-lock-keyword-face) 1415 1417 (fontified t) 1417 1419 (fontified t face font-lock-keyword-face) 1419 1421 (fontified t) 1421 1423 (fontified t face font-lock-keyword-face) 1423 1425 (fontified t) 1425 1427 (fontified t face font-lock-keyword-face) 1427 1429 (fontified t) 1429 1431 (fontified t face font-lock-keyword-face) 1431 1433 (fontified t) 1433 1435 (fontified t face font-lock-keyword-face) 1435 1437 (fontified t) 1437 1439 (fontified t face font-lock-keyword-face) 1439 1441 (fontified t) 1441 1443 (fontified t face font-lock-keyword-face) 1443 1445 (fontified t) 1445 1447 (fontified t face font-lock-keyword-face) 1447 1449 (fontified t) 1449 1451 (fontified t face font-lock-keyword-face) 1451 1453 (fontified t) 1453 1455 (fontified t face font-lock-keyword-face) 1455 1457 (fontified t) 1457 1459 (fontified t face font-lock-keyword-face) 1459 1461 (fontified t) 1461 1463 (fontified t face font-lock-keyword-face) 1463 1465 (fontified t) 1465 1467 (fontified t face font-lock-keyword-face) 1467 1469 (fontified t) 1469 1471 (fontified t face font-lock-keyword-face) 1471 1473 (fontified t) 1473 1475 (fontified t face font-lock-keyword-face) 1475 1477 (fontified t) 1477 1479 (fontified t face font-lock-keyword-face) 1479 1481 (fontified t) 1481 1483 (fontified t face font-lock-keyword-face) 1483 1485 (fontified t) 1485 1487 (fontified t face font-lock-keyword-face) 1487 1489 (fontified t) 1489 1491 (fontified t face font-lock-keyword-face) 1491 1493 (fontified t) 1493 1495 (fontified t face font-lock-keyword-face) 1495 1497 (fontified t) 1497 1499 (fontified t face font-lock-keyword-face) 1499 1501 (fontified t) 1501 1503 (fontified t face font-lock-keyword-face) 1503 1505 (fontified t) 1505 1507 (fontified t face font-lock-keyword-face) 1507 1585 (fontified t) 1585 1589 (fontified t face font-lock-keyword-face) 1589 1590 (fontified t) 1590 1660 (fontified t face tex-verbatim) 1660 1723 (fontified t) 1723 1727 (fontified t face font-lock-keyword-face) 1727 1728 (fontified t) 1728 1773 (fontified t face tex-verbatim) 1773 2005 (fontified t) 2005 2006 (fontified t) 2006 2035 (fontified t) 2035 2040 (fontified t face font-lock-keyword-face) 2040 2071 (fontified t) 2071 2072 (display (raise -0.2) fontified t face (subscript)) 2072 2086 (fontified t) 2086 2087 (display (raise -0.2) fontified t face (subscript)) 2087 2089 (fontified t face font-lock-keyword-face) 2089 2092 (fontified t) 2092 2093 (display (raise -0.2) fontified t face (subscript)) 2093 2096 (fontified t) 2096 2098 (fontified t face font-lock-keyword-face) 2098 2101 (fontified t) 2101 2102 (display (raise -0.2) fontified t face (subscript)) 2102 2105 (fontified t) 2105 2106 (display (raise -0.2) fontified t face (subscript)) 2106 2141 (fontified t) 2141 2143 (fontified t face font-lock-keyword-face) 2143 2157 (fontified t) 2157 2159 (fontified t face font-lock-keyword-face) 2159 2161 (fontified t) 2161 2163 (fontified t face font-lock-keyword-face) 2163 2168 (fontified t) 2168 2170 (fontified t face font-lock-keyword-face) 2170 2173 (fontified t) 2173 2175 (fontified t face font-lock-keyword-face) 2175 2216 (fontified t)) . -22034) (undo-tree-id432 . 206) (undo-tree-id433 . -2161) (undo-tree-id434 . -1956) (undo-tree-id435 . -2161) (undo-tree-id436 . -1067) (undo-tree-id437 . -2006) (undo-tree-id438 . -2161) (undo-tree-id439 . -2161) (undo-tree-id440 . -2161) (undo-tree-id441 . -2161) (undo-tree-id442 . -2009) (undo-tree-id443 . -2009) (undo-tree-id444 . -2009) (undo-tree-id445 . -2009) (undo-tree-id446 . -2009) (undo-tree-id447 . -2009) (undo-tree-id448 . -2005) (undo-tree-id449 . -2005) (undo-tree-id450 . -2005) (undo-tree-id451 . -2005) (undo-tree-id452 . -2005) (undo-tree-id453 . -2005) (undo-tree-id454 . -1956) (undo-tree-id455 . -1070) (undo-tree-id456 . -720) (undo-tree-id457 . -720) (undo-tree-id458 . -720) (undo-tree-id459 . -598) (undo-tree-id460 . -598) (undo-tree-id461 . -241) (undo-tree-id462 . -598) (undo-tree-id463 . -241) (undo-tree-id464 . -241) (undo-tree-id465 . -241) (undo-tree-id466 . -241) (undo-tree-id467 . -241) (undo-tree-id468 . -241) (undo-tree-id469 . -2216) (undo-tree-id470 . -2161) (undo-tree-id471 . -241) (undo-tree-id472 . -598) (undo-tree-id473 . -751) (undo-tree-id474 . -887) (undo-tree-id475 . -996) (undo-tree-id476 . -1100) (undo-tree-id477 . -1100) (undo-tree-id478 . -1129) (undo-tree-id479 . -1556) (undo-tree-id480 . -1585) (undo-tree-id481 . -1695) (undo-tree-id482 . -1723) (undo-tree-id483 . -1809) (undo-tree-id484 . -2005) (undo-tree-id485 . -2161) (undo-tree-id486 . -2161) (undo-tree-id487 . -2161) (undo-tree-id488 . -2216) 24250) nil (25753 47210 966688 156000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 23626) (undo-tree-id526 . 1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (t 25753 47210 970493 737000)) nil (25753 47255 921785 682000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . 23626) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . 1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1)) nil (25753 47255 921779 116000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 23626) (undo-tree-id513 . 1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1)) nil (25753 47255 921770 37000) 0 nil])
([nil nil ((23626 . 23627)) nil (25753 47255 921754 672000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 24364) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (t 25753 47255 926913 708000)) nil (25753 47259 453658 451000) 0 nil])
nil
