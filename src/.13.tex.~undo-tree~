(undo-tree-save-format-version . 1)
"1f53fc410e1f5b45e82f9ce4fc6cb6069c62b31e"
[nil nil nil nil (25756 19674 437169 847000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -63755) (1 . 63756) (t 25756 19650 862852 460000)) nil (25756 19674 437167 402000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (25756 19674 437164 50000) 0 nil])
([nil nil ((63754 . 63755) 9) nil (25756 19674 437137 860000) 0 nil])
([nil nil ((nil fontified t 63049 . 63050) (nil face (italic) 63049 . 63050) (nil fontified t 63042 . 63049) (nil face (font-lock-keyword-face italic) 63042 . 63049) (#("\\textbf{" 0 7 (face (font-lock-keyword-face italic) fontified t) 7 8 (face (italic) fontified t)) . 63039) (63047 . 63058) (nil fontified t 62394 . 62395) (nil face (italic) 62394 . 62395) (nil fontified t 62387 . 62394) (nil face (font-lock-keyword-face italic) 62387 . 62394) (#("\\textbf{" 0 7 (face (font-lock-keyword-face italic) fontified t) 7 8 (face (italic) fontified t)) . 62384) (62392 . 62403) (nil fontified t 58854 . 58855) (nil face font-lock-keyword-face 58847 . 58854) (nil fontified t 58847 . 58854) (#("\\textbf{" 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . 58844) (58852 . 58863) (nil face font-lock-keyword-face 55551 . 55558) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 55548) (55556 . 55567) (nil face font-lock-keyword-face 9650 . 9657) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 9647) (9655 . 9666) (nil face font-lock-keyword-face 8927 . 8934) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 8924) (8932 . 8943) (nil face font-lock-keyword-face 7617 . 7624) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 7614) (7622 . 7633) (nil face font-lock-keyword-face 5416 . 5423) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5413) (5421 . 5432) (nil face font-lock-keyword-face 5320 . 5327) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5317) (5325 . 5336) (nil face font-lock-keyword-face 5274 . 5281) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5271) (5279 . 5290) (nil face font-lock-keyword-face 5232 . 5239) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5229) (5237 . 5248) (nil face font-lock-keyword-face 5181 . 5188) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5178) (5186 . 5197) (nil face font-lock-keyword-face 5101 . 5108) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5098) (5106 . 5117) (nil face font-lock-keyword-face 5048 . 5055) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 5045) (5053 . 5064) (nil face font-lock-keyword-face 4916 . 4923) (#("\\textbf{" 0 7 (face font-lock-keyword-face)) . 4913) (4921 . 4932) (nil fontified t 2759 . 2760) (nil fontified t 2752 . 2759) (nil face font-lock-keyword-face 2752 . 2759) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2749) (2757 . 2768) (nil fontified t 2644 . 2645) (nil fontified t 2637 . 2644) (nil face font-lock-keyword-face 2637 . 2644) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2634) (2642 . 2653) (nil fontified t 2537 . 2538) (nil fontified t 2530 . 2537) (nil face font-lock-keyword-face 2530 . 2537) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2527) (2535 . 2546) (nil fontified t 2418 . 2419) (nil fontified t 2411 . 2418) (nil face font-lock-keyword-face 2411 . 2418) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 2408) (2416 . 2427) (nil fontified t 400 . 401) (nil face (italic) 400 . 401) (nil fontified t 393 . 400) (nil face (font-lock-keyword-face italic) 393 . 400) (#("\\textbf{" 0 7 (face (font-lock-keyword-face italic) fontified t) 7 8 (face (italic) fontified t)) . 390) (398 . 409) (nil fontified t 296 . 297) (nil face (italic) 296 . 297) (nil fontified t 289 . 296) (nil face (font-lock-keyword-face italic) 289 . 296) (#("\\textbf{" 0 7 (face (font-lock-keyword-face italic) fontified t) 7 8 (face (italic) fontified t)) . 286) (294 . 305) (nil fontified t 172 . 173) (nil fontified t 165 . 172) (nil face font-lock-keyword-face 165 . 172) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 162) (170 . 181) (nil fontified t 67 . 68) (nil fontified t 60 . 67) (nil face font-lock-keyword-face 60 . 67) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 57) (65 . 76) (nil fontified t 11 . 12) (t 25756 19674 439389 752000) (nil fontified t 4 . 11) (t 25756 19674 439389 752000) (nil face font-lock-keyword-face 4 . 11) (t 25756 19674 439389 752000) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 1) (t 25756 19674 439389 752000) (9 . 20) (t 25756 19674 439389 752000)) nil (25756 19701 220626 425000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 58) (undo-tree-id109 . -9) (undo-tree-id110 . -10) (t 25756 19701 222576 114000)) nil (25756 21809 636873 353000) 0 nil])
([nil nil ((62 . 65) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -62) (undo-tree-id108 . -1) (57 . 63)) nil (25756 21809 636869 581000) 0 nil])
([nil nil ((160 . 590) (#("{\\bfseries Z.R. Karbetova\\textsuperscript{1*},
A.S.Baktymbet\\textsuperscript{1}, Sh.R. Karbetova\\textsuperscript{2}}

\\emph{{\\bfseries \\textsuperscript{1}}}Kazakh University of Technology and
Business, Astana, Kazakhstan

\\emph{{\\bfseries \\textsuperscript{2}}}International Transport and
Humanitarian University, Almaty, Kazakhstan

e-mаil \\href{mailto:kzr_2011@mail.ru}{\\nolinkurl{kzr\\_2011@mail.ru}}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 25 (face (bold) fontified t) 25 41 (face (font-lock-keyword-face bold) fontified t) 41 47 (face (bold) fontified t) 47 60 (face (bold) fontified t) 60 76 (face (font-lock-keyword-face bold) fontified t) 76 96 (face (bold) fontified t) 96 112 (face (font-lock-keyword-face bold) fontified t) 112 115 (face (bold) fontified t) 115 118 (fontified t) 118 123 (face font-lock-keyword-face fontified t) 123 124 (fontified t) 124 125 (face (italic) fontified t) 125 134 (face (font-lock-keyword-face italic) fontified t) 134 135 (face (italic bold) fontified t) 135 151 (face (font-lock-keyword-face italic bold) fontified t) 151 154 (face (italic bold) fontified t) 154 192 (fontified t) 192 222 (fontified t) 222 227 (face font-lock-keyword-face fontified t) 227 228 (fontified t) 228 229 (face (italic) fontified t) 229 238 (face (font-lock-keyword-face italic) fontified t) 238 239 (face (italic bold) fontified t) 239 255 (face (font-lock-keyword-face italic bold) fontified t) 255 258 (face (italic bold) fontified t) 258 288 (fontified t) 288 340 (fontified t) 340 345 (face font-lock-keyword-face fontified t) 345 357 (fontified t) 357 358 (face (subscript) fontified t display (raise -0.2)) 358 371 (fontified t) 371 372 (face font-lock-keyword-face fontified t) 372 381 (face font-lock-keyword-face fontified t) 381 382 (fontified t) 382 399 (face tex-verbatim fontified t) 399 402 (fontified t)) . -160) (undo-tree-id98 . -340) (undo-tree-id99 . -7) (undo-tree-id100 . -340) (undo-tree-id101 . -402) (undo-tree-id102 . -7) (undo-tree-id103 . -340) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -333) (undo-tree-id107 . -402) 562) nil (25756 21809 636866 299000) 0 nil])
([nil nil ((2554 . 2560)) nil (25756 21809 636550 686000) 0 nil])
([nil nil ((2553 . 3073) (#("{\\large\\bfseries СИСТЕМА МОТИВАЦИИ ГОСУДАРСТВЕННЫХ СЛУЖАЩИХ КАЗАХСТАНА: ОЦЕНКА И
ПЕРСПЕКТИВЫ СОВЕРШЕНСТВОВАНИЯ}

{\\bfseries З.Р.Карбетова\\textsuperscript{1*},
А.С.Бактымбет\\textsuperscript{1}, Ш.Р.Карбетова\\textsuperscript{1}}

{\\bfseries \\textsuperscript{1}}Казахский университет технологии и бизнеса,
г.Астана, Казахстан

\\emph{\\textsuperscript{2}}Международный транспортно-гуманитарный
университет, г.Алматы, Казахстан

e-mаil \\href{mailto:kzr_2011@mail.ru}{\\nolinkurl{kzr\\_2011@mail.ru}}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 16 (face font-lock-keyword-face fontified t) 16 17 (face (bold) fontified t) 17 81 (face (bold) fontified t) 81 110 (fontified t) 110 113 (fontified t) 113 114 (fontified t) 114 123 (face font-lock-keyword-face fontified t) 123 124 (face (bold) fontified t) 124 137 (face (bold) fontified t) 137 153 (face (font-lock-keyword-face bold) fontified t) 153 159 (face (bold) fontified t) 159 172 (face (bold) fontified t) 172 188 (face (font-lock-keyword-face bold) fontified t) 188 206 (face (bold) fontified t) 206 222 (face (font-lock-keyword-face bold) fontified t) 222 225 (face (bold) fontified t) 225 228 (fontified t) 228 229 (fontified t) 229 238 (face font-lock-keyword-face fontified t) 238 239 (face (bold) fontified t) 239 255 (face (font-lock-keyword-face bold) fontified t) 255 258 (face (bold) fontified t) 258 303 (fontified t) 303 324 (fontified t) 324 329 (face font-lock-keyword-face fontified t) 329 330 (fontified t) 330 346 (face (font-lock-keyword-face italic) fontified t) 346 349 (face (italic) fontified t) 349 430 (fontified t) 430 435 (face font-lock-keyword-face fontified t) 435 447 (fontified t) 447 448 (face (subscript) fontified t display (raise -0.2)) 448 461 (fontified t) 461 471 (face font-lock-keyword-face fontified t) 471 472 (fontified t) 472 489 (face tex-verbatim fontified t) 489 492 (fontified t)) . -2553) (undo-tree-id43 . -429) (undo-tree-id44 . 485) (undo-tree-id45 . -6) (undo-tree-id46 . -429) (undo-tree-id47 . -112) (undo-tree-id48 . -112) (undo-tree-id49 . -112) (undo-tree-id50 . -227) (undo-tree-id51 . -227) (undo-tree-id52 . -227) (undo-tree-id53 . -323) (undo-tree-id54 . -323) (undo-tree-id55 . -323) (undo-tree-id56 . -422) (undo-tree-id57 . -422) (undo-tree-id58 . -422) (undo-tree-id59 . -492) (undo-tree-id60 . -492) (undo-tree-id61 . -492) (undo-tree-id62 . -492) (undo-tree-id63 . -492) (undo-tree-id64 . -492) (undo-tree-id65 . -422) (undo-tree-id66 . -422) (undo-tree-id67 . -422) (undo-tree-id68 . -323) (undo-tree-id69 . -323) (undo-tree-id70 . -323) (undo-tree-id71 . -227) (undo-tree-id72 . -227) (undo-tree-id73 . -227) (undo-tree-id74 . -112) (undo-tree-id75 . -112) (undo-tree-id76 . -112) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -3) (undo-tree-id80 . -4) (undo-tree-id81 . -5) (undo-tree-id82 . 485) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -492) (undo-tree-id90 . -6) (undo-tree-id91 . -429) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -492) (undo-tree-id95 . -492) (undo-tree-id96 . -423) (undo-tree-id97 . -492) 3045) nil (25756 21809 636546 426000) 0 nil])
([nil nil ((#("~" 0 1 (fontified nil)) . 3971) (3972 . 3972) (#("~" 0 1 (fontified nil)) . 3957) (3958 . 3958) (#("~" 0 1 (fontified nil)) . 3933) (3934 . 3934) (#("~" 0 1 (fontified nil)) . 3931) (3932 . 3932) (#("~" 0 1 (fontified t)) . 3907) (3908 . 3908) (#("~~" 0 2 (fontified nil)) . 3877) (3879 . 3879) (#("~" 0 1 (fontified t)) . 3868) (3869 . 3869)) nil (25756 21809 636515 416000) 0 nil])
([nil nil ((3877 . 3878)) nil (25756 21809 636512 134000) 0 nil])
([nil nil ((3958 . 3959)) nil (25756 21809 636510 248000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 4003) (undo-tree-id41 . -1) (undo-tree-id42 . -1)) nil (25756 21809 636508 432000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 4171) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1)) nil (25756 21809 636504 172000) 0 nil])
([nil nil ((4171 . 4172) (#("
" 0 1 (fontified t)) . -4171) (undo-tree-id22 . 1) (undo-tree-id23 . -1) (#("
" 0 1 (fontified t)) . -4171) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 4170) nil (25756 21809 636494 534000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4171) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1)) nil (25756 21809 636488 807000) 0 nil])
([nil nil ((4173 . 4174) (#(" " 0 1 (fontified t)) . -4173) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 4174) nil (25756 21809 636484 58000) 0 nil])
([nil nil ((4332 . 4333) (#("
" 0 1 (fontified t)) . -4332) (undo-tree-id11 . -1) (#("
" 0 1 (fontified t)) . -4332) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 4301) nil (25756 21809 636479 238000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 4331) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) nil (25756 21809 636474 559000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4331) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (25756 21809 636469 321000) 0 nil])
([nil nil ((#("~" 0 1 (fontified nil)) . 4846) (4847 . 4847) (#("~" 0 1 (fontified t)) . 4823) (4824 . 4824) (#("~" 0 1 (fontified t)) . 4695) (4696 . 4696) (#("~" 0 1 (fontified t)) . 4431) (4432 . 4432)) nil (25756 21809 636241 708000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 3601) (undo-tree-id3 . -1) (undo-tree-id4 . -1)) nil (25756 21809 636235 911000) 0 nil])
([nil nil ((5088 . 5094) (t 25756 21809 641006 281000)) nil (25756 21817 61199 532000) 0 nil])
([nil nil ((5087 . 5658) (#("{\\large\\bfseries ҚАЗАҚСТАН РЕСПУБЛИКАСЫНДАҒЫ МЕМЛЕКЕТТІК}

{\\bfseries ҚЫЗМЕТШІЛЕРІН МОТИВАЦИЯЛАУ ЖҮЙЕСІ: БАҒАЛАУ ЖӘНЕ ЖЕТІЛДІРУ
БОЛАШАҒЫ}

{\\bfseries З.Р.Карбетова\\textsuperscript{1*},
А.С}.{\\bfseries Бақтымбет\\textsuperscript{1}},
{\\bfseries Ш.Р.Карбетова\\textsuperscript{2}}

{\\bfseries \\textsuperscript{1}}Қазақ технология және бизнес университеті,
Астана к., Қазақстан

{\\bfseries \\textsuperscript{2}}Халықаралық
көлікжәнегуманитарлықуниверситеті, Алматы к., Қазақстан

e-mаil \\href{mailto:kzr_2011@mail.ru}{\\nolinkurl{kzr\\_2011@mail.ru}}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 16 (face font-lock-keyword-face fontified t) 16 17 (face (bold) fontified t) 17 49 (face (bold) fontified t) 49 56 (face (bold) fontified t) 56 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 69 (face font-lock-keyword-face fontified t) 69 70 (face (bold) fontified t) 70 128 (face (bold) fontified t) 128 136 (face (bold) fontified t) 136 139 (fontified t) 139 140 (fontified t) 140 149 (face font-lock-keyword-face fontified t) 149 150 (face (bold) fontified t) 150 163 (face (bold) fontified t) 163 179 (face (font-lock-keyword-face bold) fontified t) 179 185 (face (bold) fontified t) 185 188 (face (bold) fontified t) 188 190 (fontified t) 190 191 (fontified t) 191 200 (face font-lock-keyword-face fontified t) 200 201 (face (bold) fontified t) 201 210 (face (bold) fontified t) 210 226 (face (font-lock-keyword-face bold) fontified t) 226 229 (face (bold) fontified t) 229 232 (fontified t) 232 233 (fontified t) 233 242 (face font-lock-keyword-face fontified t) 242 243 (face (bold) fontified t) 243 256 (face (bold) fontified t) 256 272 (face (font-lock-keyword-face bold) fontified t) 272 275 (face (bold) fontified t) 275 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 288 (face font-lock-keyword-face fontified t) 288 289 (face (bold) fontified t) 289 305 (face (font-lock-keyword-face bold) fontified t) 305 308 (face (bold) fontified t) 308 316 (fontified t) 316 352 (fontified t) 352 374 (fontified t) 374 375 (fontified t) 375 382 (face font-lock-keyword-face fontified t) 382 383 (face font-lock-keyword-face fontified t) 383 384 (face font-lock-keyword-face fontified t) 384 385 (face (bold) fontified t) 385 401 (face (font-lock-keyword-face bold) fontified t) 401 404 (face (bold) fontified t) 404 417 (fontified t) 417 443 (fontified t) 443 473 (fontified t) 473 481 (fontified t) 481 486 (face font-lock-keyword-face fontified t) 486 498 (fontified t) 498 499 (face (subscript) fontified t display (raise -0.2)) 499 512 (fontified t) 512 522 (face font-lock-keyword-face fontified t) 522 523 (fontified t) 523 539 (face tex-verbatim fontified t) 539 540 (face tex-verbatim fontified t) 540 543 (fontified t)) . -5087) (undo-tree-id111 . 536) (undo-tree-id112 . -6) (undo-tree-id113 . -480) (undo-tree-id114 . -42) (undo-tree-id115 . -480) (undo-tree-id116 . -42) (undo-tree-id117 . -42) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -2) (undo-tree-id121 . -3) (undo-tree-id122 . -6) (undo-tree-id123 . 536) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -543) (undo-tree-id131 . -6) (undo-tree-id132 . -480) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -284) (undo-tree-id136 . -474) (undo-tree-id137 . -543) 5630) nil (25756 21817 61192 828000) 0 nil])
([nil nil ((7822 . 7829) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -7822) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("l" 0 1 (face font-lock-function-name-face fontified t)) . -7823) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -7824) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 7825 (7820 . 7825) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -7820) (undo-tree-id155 . -1) (7813 . 7821) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -7813) (undo-tree-id156 . -1) (7809 . 7814) (7808 . 7809) (t 25756 21817 67632 194000) 7808) nil (25756 21875 507911 586000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26405 . 26406) (#("
" 0 1 (fontified nil)) . -26426) (26405 . 26427) 26388) nil (25756 21875 507902 856000) 0 nil])
([nil nil ((26407 . 26410) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 26407) (undo-tree-id146 . -4) (undo-tree-id147 . -5) (undo-tree-id148 . -5)) nil (25756 21875 507899 503000) 0 nil])
([nil nil ((#("{2}" 0 3 (fontified t latex-env-pair t)) . 26421) (undo-tree-id138 . -3) (undo-tree-id139 . -2) (undo-tree-id140 . 3) (undo-tree-id141 . -1) (undo-tree-id142 . 1) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3)) nil (25756 21875 507892 380000) 0 nil])
([nil nil ((26428 . 26432) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -26428) (undo-tree-id225 . -1) (26423 . 26429) (t 25756 21875 513978 140000)) nil (25756 21899 836617 315000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-keyword-face fontified t)) . 26429) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1)) nil (25756 21899 836614 382000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26430 . 26431) (nil fontified nil 26430 . 26431) (26430 . 26431) 26429) nil (25756 21899 836610 51000) 0 nil])
([nil nil ((26533 . 26534)) nil (25756 21899 836607 677000) 0 nil])
([nil nil ((26431 . 26432)) nil (25756 21899 836606 210000) 0 nil])
([nil nil ((26535 . 26538)) nil (25756 21899 836604 324000) 0 nil])
([nil nil ((#("\\caption*{Table 1. The opinion of civil servants on the level of factors affecting
the motivation of their work} \\\\
" 0 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face rear-nonsticky t fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 15 (fontified t) 15 83 (fontified t) 83 113 (fontified t) 113 115 (face font-lock-warning-face fontified t) 115 116 (fontified t)) . 26423) (undo-tree-id157 . -114) (undo-tree-id158 . -115) (undo-tree-id159 . 1) (undo-tree-id160 . -31) (undo-tree-id161 . -114) (undo-tree-id162 . -114) (undo-tree-id163 . -1) (undo-tree-id164 . -2) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -7) (undo-tree-id174 . -7) (undo-tree-id175 . -7) (undo-tree-id176 . -7) (undo-tree-id177 . -91) (undo-tree-id178 . -91) (undo-tree-id179 . -6) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -111) (undo-tree-id186 . -111) (undo-tree-id187 . -112) (undo-tree-id188 . -111) (undo-tree-id189 . -111) (undo-tree-id190 . -111) (undo-tree-id191 . -111) (undo-tree-id192 . -111) (undo-tree-id193 . -111) (undo-tree-id194 . -8) (undo-tree-id195 . -8) (undo-tree-id196 . -8) (undo-tree-id197 . -8) (undo-tree-id198 . -8) (undo-tree-id199 . -8) (undo-tree-id200 . -91) (undo-tree-id201 . -91) (undo-tree-id202 . -112) (undo-tree-id203 . -112) (undo-tree-id204 . -115) (undo-tree-id205 . -115) (undo-tree-id206 . 1) (undo-tree-id207 . -114) (undo-tree-id208 . -114) (undo-tree-id209 . -114) (undo-tree-id210 . -114) (undo-tree-id211 . -31) (undo-tree-id212 . -31) (undo-tree-id213 . -116) (undo-tree-id214 . -31) (undo-tree-id215 . -114) (undo-tree-id216 . -31) (undo-tree-id217 . -31) (undo-tree-id218 . -83) (undo-tree-id219 . -114) (undo-tree-id220 . -116) 26537) nil (25756 21899 836599 86000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26937 . 26938) (#("
" 0 1 (fontified nil)) . -27053) (26937 . 27054) 26853) nil (25756 21899 836556 274000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26423) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1) (undo-tree-id269 . -1) (t 25756 21899 837178 1000)) nil (25756 21939 668991 539000) 0 nil])
([nil nil ((27307 . 27308)) nil (25756 21939 668987 768000) 0 nil])
([nil nil ((#("\\end{minipage" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 13 (face font-lock-function-name-face fontified t latex-env-pair t)) . 27316) (undo-tree-id262 . -12) (undo-tree-id263 . -6) (undo-tree-id264 . -6) (undo-tree-id265 . -13)) nil (25756 21939 668984 974000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t latex-env-pair t)) . 27316) (undo-tree-id258 . 1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1)) nil (25756 21939 668980 714000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -27315) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) 27301) nil (25756 21939 668974 917000) 0 nil])
([nil nil ((#("\\begin{minipage}[b]{\\linewidth}\\raggedright
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t)) . 27257) (undo-tree-id226 . -43) (undo-tree-id227 . -14) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -44) (undo-tree-id231 . -44) (undo-tree-id232 . -44) (undo-tree-id233 . -14) (undo-tree-id234 . -14) (undo-tree-id235 . -14) (undo-tree-id236 . -14) (undo-tree-id237 . -14) (undo-tree-id238 . -14) (undo-tree-id239 . -14) (undo-tree-id240 . -44) 27271) nil (25756 21939 668960 41000) 0 nil])
([nil nil ((#("\\begin{minipage}[b]{\\linewidth}\\raggedright
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t)) . 27072) (undo-tree-id283 . -43) (undo-tree-id284 . -16) (undo-tree-id285 . -16) (undo-tree-id286 . 28) (undo-tree-id287 . -17) (undo-tree-id288 . 26) (undo-tree-id289 . -19) (undo-tree-id290 . -16) (undo-tree-id291 . -16) (undo-tree-id292 . -16) (undo-tree-id293 . -16) (undo-tree-id294 . -16) (undo-tree-id295 . -44) 27088 (t 25756 21939 673626 67000)) nil (25756 21946 145544 862000) 0 nil])
([nil nil ((#("\\end{minipage} " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 6 (face font-lock-function-name-face fontified t latex-env-pair t) 6 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 27081) (undo-tree-id279 . -14) (undo-tree-id280 . -7) (undo-tree-id281 . -7) (undo-tree-id282 . -15)) nil (25756 21946 145534 875000) 0 nil])
([nil nil ((27080 . 27081) (#("
" 0 1 (fontified t)) . -27080) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 27072) nil (25756 21946 145526 843000) 0 nil])
([nil nil ((27418 . 27419) (#("*" 0 1 (fontified t)) . 27418) (undo-tree-id296 . -1) (t 25756 21946 150257 194000)) nil (25756 21971 908373 577000) 0 nil])
([nil nil ((27951 . 27952) (#("*" 0 1 (fontified t)) . 27951) (undo-tree-id301 . -1) (t 25756 21971 913449 153000)) nil (25756 21986 762646 693000) 0 nil])
([nil nil ((28713 . 28714) (#("*" 0 1 (fontified t)) . 28713) (undo-tree-id300 . -1)) nil (25756 21986 762642 922000) 0 nil])
([nil nil ((28397 . 28398) (#("*" 0 1 (fontified t)) . 28397) (undo-tree-id299 . -1)) nil (25756 21986 762639 80000) 0 nil])
([nil nil ((29011 . 29012) (#("*" 0 1 (fontified t)) . 29011) (undo-tree-id298 . -1)) nil (25756 21986 762635 798000) 0 nil])
([nil nil ((29356 . 29357) (#("*" 0 1 (fontified t)) . 29356) (undo-tree-id297 . -1)) nil (25756 21986 762629 233000) 0 nil])
([nil nil ((27938 . 27950) (27937 . 27938) (t 25756 21986 766700 980000) 27914) nil (25756 22009 783176 881000) 0 nil])
([nil nil ((#("\\vspace{1cm}
" 0 7 (face font-lock-keyword-face fontified t) 7 12 (fontified t) 12 13 (fontified t)) . 27938) (undo-tree-id302 . -12) (undo-tree-id303 . 1) (undo-tree-id304 . -11) (undo-tree-id305 . -11) (undo-tree-id306 . 1) (undo-tree-id307 . 2) (undo-tree-id308 . -12) (undo-tree-id309 . 6) (undo-tree-id310 . -8) (undo-tree-id311 . -11) (undo-tree-id312 . -11) (undo-tree-id313 . -11) (undo-tree-id314 . -11) (undo-tree-id315 . -11) (undo-tree-id316 . -11) (undo-tree-id317 . -11) (undo-tree-id318 . -11) (undo-tree-id319 . -11) (undo-tree-id320 . -13) 27949 (t 25756 22009 786574 659000)) nil (25756 22038 736546 262000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27665 . 27666) (#("
" 0 1 (fontified nil)) . -27678) (27665 . 27679) 27639) nil (25756 22038 736523 494000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -27674) (t 25756 22038 739749 114000) (27675 . 27676) 27674 (t 25756 22038 739749 114000)) nil (25756 22045 819050 542000) 0 nil])
([nil nil ((#("\\multicolumn{5}{>{\\raggedright\\arraybackslash}p{(\\columnwidth - 10\\tabcolsep) * \\real{0.7614} + 8\\tabcolsep}@{}}{%
" 0 12 (face font-lock-keyword-face fontified t) 12 18 (fontified t) 18 30 (face font-lock-keyword-face fontified t) 30 45 (face font-lock-keyword-face fontified t) 45 49 (fontified t) 49 61 (face font-lock-keyword-face fontified t) 61 66 (fontified t) 66 76 (face font-lock-keyword-face fontified t) 76 80 (fontified t) 80 85 (face font-lock-keyword-face fontified t) 85 97 (fontified t) 97 107 (face font-lock-keyword-face fontified t) 107 113 (fontified t) 113 115 (face font-lock-comment-face fontified t)) . 27284) (undo-tree-id334 . -114) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -8) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -115) 27292 (t 25756 22045 823043 578000)) nil (25756 22096 52848 751000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 27285) (undo-tree-id329 . -1) (undo-tree-id330 . 1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1)) nil (25756 22096 52840 161000) 0 nil])
([nil nil ((27283 . 27284) (#("
" 0 1 (fontified t)) . -27283) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) 27281) nil (25756 22096 52834 364000) 0 nil])
([nil nil ((nil fontified t 27558 . 27559) (#("2" 0 1 (fontified t)) . -27558) (27559 . 27560) 27558) nil (25756 22096 52819 697000) 0 nil])
([nil nil ((nil fontified t 27558 . 27559) (#("3" 0 1 (fontified t)) . -27558) (27559 . 27560) 27558) nil (25756 22096 52813 411000) 0 nil])
([nil nil ((27562 . 27563) (t 25756 22096 59434 575000) 27558) nil (25756 22138 514236 562000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -27563) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("t" 0 1 (fontified t)) . -27564) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("t" 0 1 (fontified t)) . -27565) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) 27566 (27563 . 27566) (t 25756 22138 515868 264000)) nil (25756 22153 948030 178000) 0 nil])
([nil nil ((nil fontified t 27558 . 27559) (#("4" 0 1 (fontified t)) . -27558) (27559 . 27560) 27558) nil (25756 22158 265379 322000) 0 nil] [nil nil ((#("\\vspace{4cm}
" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 12 (fontified t) 12 13 (fontified t)) . 27550) (undo-tree-id372 . -12) (undo-tree-id373 . -12) (undo-tree-id374 . -13) (undo-tree-id375 . -8) (undo-tree-id376 . -13) (undo-tree-id377 . -13) (undo-tree-id378 . -13) (undo-tree-id379 . -13) (undo-tree-id380 . -13) (undo-tree-id381 . -13) (undo-tree-id382 . -13) (undo-tree-id383 . -13) (undo-tree-id384 . -13) (undo-tree-id385 . -13) (undo-tree-id386 . -13) (undo-tree-id387 . -13) (undo-tree-id388 . -13) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -13) 27558 (t 25756 22143 162509 433000)) ((27550 . 27563) (t 25756 22150 349136 663000)) (25756 22150 346337 843000) 0 nil])
([nil nil ((nil fontified t 27558 . 27559) (#("3" 0 1 (fontified t)) . -27558) (27559 . 27560) 27558) nil (25756 22158 265372 967000) 0 nil])
nil
([nil nil ((27720 . 27721) (t 25756 22158 269093 203000)) nil (25756 22177 889132 416000) 0 nil])
([nil nil ((27725 . 27726)) nil (25756 22177 889126 689000) 0 nil])
([nil nil ((27569 . 27580) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -27569) (undo-tree-id395 . -1) (27564 . 27570) (t 25756 22177 892318 855000)) nil (25756 22242 394437 926000) 0 nil])
([nil nil ((27672 . 27673)) nil (25756 22242 394425 215000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 27672) (undo-tree-id396 . 1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (t 25756 22242 401964 861000)) nil (25756 22256 47378 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27673 . 27674) (nil fontified nil 27673 . 27674) (27673 . 27674) 27672) nil (25756 22257 38879 604000) 0 nil] [nil nil ((nil rear-nonsticky nil 27674 . 27675) (nil fontified nil 27674 . 27675) (27674 . 27675) 27673) ((#("}" 0 1 (rear-nonsticky nil fontified nil)) . 27674) (undo-tree-id400 . 1) (undo-tree-id401 . -1) (nil rear-nonsticky t 27674 . 27675)) (25756 22256 47058 827000) 0 nil])
([nil nil ((27431 . 27432) (#(" " 0 1 (fontified t)) . -27431) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) 27432 (t 25756 22257 45217 841000)) nil (25756 22284 681432 606000) 0 nil])
nil
([nil nil ((27431 . 27432) (#("
" 0 1 (fontified t)) . -27431) (undo-tree-id406 . 1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) 27413) nil (25756 22284 681426 460000) 0 nil])
([nil nil ((27433 . 27434) (#(" " 0 1 (fontified t)) . -27433) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) 27434) nil (25756 22284 681414 726000) 0 nil])
([nil nil ((27439 . 27440) (#(" " 0 1 (fontified t)) . -27439) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) 27440 (t 25756 22284 688399 484000)) nil (25756 22299 283513 519000) 0 nil])
([nil nil ((27444 . 27445) (#(" " 0 1 (fontified t)) . -27444) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) 27445) nil (25756 22299 283507 303000) 0 nil])
([nil nil ((27451 . 27452)) nil (25756 22299 283503 42000) 0 nil])
([nil nil ((27455 . 27456)) nil (25756 22299 283501 157000) 0 nil])
([nil nil ((27460 . 27461)) nil (25756 22299 283918 668000) 0 nil])
([nil nil ((27465 . 27466) (#(" " 0 1 (fontified t)) . -27465) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) 27466) nil (25756 22322 45065 444000) 0 nil] [nil nil ((27463 . 27464) (#(" " 0 1 (fontified t)) . -27463) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) 27464) ((27463 . 27464) (#("
" 0 1 (fontified t)) . 27463) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1)) (25756 22299 283494 103000) 0 nil])
([nil nil ((27485 . 27486) (#("
" 0 1 (fontified t)) . -27485) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) 27466) nil (25756 22322 45015 787000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -27489) (undo-tree-id450 . -1) (undo-tree-id451 . 1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) 27490 (27489 . 27490) (#(" " 0 1 (fontified t)) . -27489) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 27490) nil (25756 22322 45010 968000) 0 nil])
([nil nil ((27489 . 27490)) nil (25756 22322 44863 603000) 0 nil])
([nil nil ((27491 . 27492) (#(" " 0 1 (fontified t)) . -27491) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) 27492) nil (25756 22322 44860 809000) 0 nil])
([nil nil ((#("\\vspace{2cm}
" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 12 (fontified t) 12 13 (fontified t)) . 27553) (undo-tree-id439 . -12) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -12) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -13)) nil (25756 22322 44852 289000) 0 nil])
([nil nil ((27554 . 27566) (27553 . 27554) (27552 . 27553) (t 25756 22322 51527 789000) 27515) nil (25756 22341 486799 157000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27705 . 27706) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -27718) (27705 . 27719) 27680 (t 25756 22341 491421 113000)) nil (25756 22353 686831 175000) 0 nil])
([nil nil ((#("\\vspace{2cm}
" 0 7 (face font-lock-keyword-face fontified t) 7 12 (fontified t) 12 13 (fontified t)) . 27706) (undo-tree-id521 . -12) (undo-tree-id522 . -12) (undo-tree-id523 . -13) (t 25756 22353 691354 167000)) nil (25756 22392 585766 280000) 0 nil])
([nil nil ((#("\\vspace{2cm}
" 0 7 (face font-lock-keyword-face fontified t) 7 12 (fontified t) 12 13 (fontified t rear-nonsticky t)) . 27554) (undo-tree-id512 . -12) (undo-tree-id513 . 1) (undo-tree-id514 . -13) (undo-tree-id515 . -13) (undo-tree-id516 . -13) (undo-tree-id517 . -13) (undo-tree-id518 . -13) (undo-tree-id519 . 1) (undo-tree-id520 . -13)) nil (25756 22392 585762 858000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27554) (undo-tree-id508 . 1) (undo-tree-id509 . 1) (undo-tree-id510 . 1) (undo-tree-id511 . -1)) nil (25756 22392 585756 711000) 0 nil])
([nil nil ((27640 . 27642) (27666 . 27667) (#(" " 0 1 (fontified t)) . -27666) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) 27667) nil (25756 22392 585752 381000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -27693) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) 27669) nil (25756 22392 585747 562000) 0 nil])
([nil nil ((27716 . 27717) (#(" " 0 1 (fontified t)) . -27716) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) 27717) nil (25756 22392 585738 972000) 0 nil])
([nil nil ((27741 . 27742) (#(" " 0 1 (fontified t)) . -27741) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) 27742) nil (25756 22392 585733 873000) 0 nil])
([nil nil ((27750 . 27751) (#("
" 0 1 (fontified t)) . -27750) (undo-tree-id479 . -1) (#("
" 0 1 (fontified t)) . -27750) (undo-tree-id480 . -1) 27742) nil (25756 22392 585729 54000) 0 nil])
([nil nil ((27759 . 27760) (#(" " 0 1 (fontified t)) . -27759) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) 27760) nil (25756 22392 586020 991000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 27784) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (27785 . 27786)) nil (25756 22443 80345 913000) 0 nil] [nil nil ((27782 . 27783) (#(" " 0 1 (fontified t)) . -27782) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) 27783) ((27782 . 27783) (#("
" 0 1 (fontified t)) . 27782) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1)) (25756 22392 585716 64000) 0 nil])
([nil nil ((27434 . 27446) (27433 . 27434) 27431) nil (25756 22449 203916 560000) 0 nil] [nil nil ((nil rear-nonsticky nil 27433 . 27434) (#("
" 0 1 (fontified nil)) . -27434) (27433 . 27435) 27431) ((#("

" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil)) . 27433) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (27434 . 27435) (nil rear-nonsticky t 27433 . 27434)) (25756 22443 79976 802000) 0 nil] [nil nil ((27437 . 27442) (#("}" 0 1 (fontified t)) . -27437) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . 1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("{" 0 1 (fontified t)) . -27438) (undo-tree-id537 . -1) (undo-tree-id538 . -1) 27439 (27430 . 27439) (t 25756 22395 341125 616000)) ((#("\\vspace}{" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 27430) (undo-tree-id539 . -7) (undo-tree-id540 . -9) (undo-tree-id541 . -8) (undo-tree-id542 . -8) (undo-tree-id543 . 3) (undo-tree-id544 . -8) (undo-tree-id545 . 2) (undo-tree-id546 . -7) (undo-tree-id547 . -7) (undo-tree-id548 . -7) (undo-tree-id549 . -7) (undo-tree-id550 . -7) (undo-tree-id551 . -7) (undo-tree-id552 . -7) (undo-tree-id553 . -7) (undo-tree-id554 . -7) (undo-tree-id555 . -7) (undo-tree-id556 . -7) (undo-tree-id557 . -7) (27437 . 27439) (#("{2cm}" 0 5 (fontified t)) . 27437) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . 1) (undo-tree-id561 . -5) (undo-tree-id562 . 5) (undo-tree-id563 . -1) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (t 25756 22427 384283 114000)) (25756 22427 381723 291000) 0 nil])
nil
([nil nil ((#("\\vspace{2cm}
" 0 7 (face font-lock-keyword-face fontified t) 7 12 (fontified t) 12 13 (fontified t)) . 27434) (undo-tree-id581 . -12) (undo-tree-id582 . 1) (undo-tree-id583 . -11) (undo-tree-id584 . -11) (undo-tree-id585 . 1) (undo-tree-id586 . -11) (undo-tree-id587 . -11) (undo-tree-id588 . -11) (undo-tree-id589 . -11) (undo-tree-id590 . -11) (undo-tree-id591 . -11) (undo-tree-id592 . 2) (undo-tree-id593 . -12) (undo-tree-id594 . 6) (undo-tree-id595 . -8) (undo-tree-id596 . -11) (undo-tree-id597 . -11) (undo-tree-id598 . -11) (undo-tree-id599 . -11) (undo-tree-id600 . -11) (undo-tree-id601 . -11) (undo-tree-id602 . -11) (undo-tree-id603 . -13) 27445 (t 25756 22449 210830 9000)) nil (25756 22487 437382 383000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (fontified t)) . 27640) (undo-tree-id630 . -1) (undo-tree-id631 . -1)) nil (25756 22507 135474 52000) 0 nil] [nil nil ((nil rear-nonsticky nil 27553 . 27554) (#("
" 0 1 (fontified nil)) . -27566) (27553 . 27567)) ((#("
\\vspace{2cm}
" 0 1 (rear-nonsticky nil fontified nil) 1 8 (face font-lock-keyword-face fontified nil) 8 13 (fontified nil) 13 14 (fontified nil)) . 27553) (undo-tree-id615 . -13) (undo-tree-id616 . -1) (undo-tree-id617 . -13) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (27566 . 27567) (nil rear-nonsticky t 27553 . 27554) (t 25756 22483 297309 628000)) (25756 22483 293107 557000) 0 nil] [nil nil ((nil rear-nonsticky nil 27668 . 27669) (#("
" 0 1 (fontified nil)) . -27681) (27668 . 27682) 27644) ((#("
\\vspace{2cm}
" 0 1 (fontified nil rear-nonsticky nil) 1 8 (face font-lock-keyword-face fontified nil) 8 13 (fontified nil) 13 14 (fontified nil)) . 27668) (undo-tree-id604 . -13) (undo-tree-id605 . -1) (undo-tree-id606 . -13) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (27681 . 27682) (nil rear-nonsticky t 27668 . 27669) (t 25756 22478 940666 868000)) (25756 22478 932348 352000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 27640) (undo-tree-id628 . -1) (undo-tree-id629 . -1)) nil (25756 22507 135470 141000) 0 nil])
nil
nil
([nil nil ((27842 . 27843) 27806) nil (25756 22507 135459 665000) 0 nil])
([nil nil ((28289 . 28290) 28253) nil (25756 22518 881668 456000) 0 nil])
([nil nil ((27551 . 27562) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -27551) (undo-tree-id647 . -1) (undo-tree-id648 . -1) 27552 (27550 . 27552) (t 25756 22519 727109 721000)) nil (25756 22546 457539 513000) 0 nil] [nil nil ((28606 . 28607) 28570) ((#("
" 0 1 (fontified t)) . 28606)) (25756 22518 712351 180000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -27561) (undo-tree-id649 . -1) (undo-tree-id650 . -1) 27562 (27559 . 27562) (#("}" 0 1 (fontified t)) . -27559) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . 1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (#("." 0 1 (fontified t)) . -27560) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) 27561 (27558 . 27561) (#("2" 0 1 (fontified t)) . -27558) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) 27559 (t 25756 22546 463629 673000)) nil (25756 22556 669555 537000) 0 nil])
([nil nil ((28905 . 28906) 28869) ((#("
" 0 1 (fontified t)) . 28905) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (t 25756 22507 140512 123000)) (25756 22507 135449 677000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -28846) (undo-tree-id671 . -1) 28845 (t 25756 22556 673573 646000)) nil (25756 22593 673806 771000) 0 nil])
nil
([nil nil ((28926 . 28927) (#("(" 0 1 (fontified t)) . -28926) (undo-tree-id672 . -1) (undo-tree-id673 . -1) 28927 (28923 . 28927) (28922 . 28923) (#("(" 0 1 (fontified t)) . -28922) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (#("1" 0 1 (fontified t)) . -28923) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (#("c" 0 1 (fontified t)) . -28924) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (#("m" 0 1 (fontified t)) . -28925) (undo-tree-id694 . -1) (undo-tree-id695 . -1) 28926 (28915 . 28926)) nil (25756 22601 530988 915000) 0 nil] [nil nil ((28917 . 28918) (#("
" 0 1 (fontified t)) . -28917) (undo-tree-id670 . -1) 28915) ((28917 . 28918) (#(" " 0 1 (fontified t)) . 28917)) (25756 22593 673521 259000) 0 nil])
([nil nil ((29048 . 29049) (t 25756 22601 536660 796000)) nil (25756 22612 909690 766000) 0 nil])
nil
([nil nil ((29059 . 29060)) nil (25756 22612 909687 903000) 0 nil])
([nil nil ((29072 . 29073)) nil (25756 22612 909682 665000) 0 nil])
([nil nil ((29104 . 29105) (t 25756 22612 909931 719000)) nil (25756 22618 94969 371000) 0 nil])
([nil nil ((29542 . 29554) (t 25756 22618 96569 924000)) nil (25756 22641 79471 583000) 0 nil])
([nil nil ((29551 . 29553) (t 25756 22641 79777 138000)) nil (25756 22646 327481 491000) 0 nil])
([nil nil ((29553 . 29554) (t 25756 22646 329748 329000)) nil (25756 22647 288229 182000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -29553) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) 29554) nil (25756 22647 288223 525000) 0 nil])
([nil nil ((29575 . 29576) (#("@{}>{\\raggedright\\arraybackslash}p{(\\columnwidth - 10\\tabcolsep) * \\real{1.0000} + 10\\tabcolsep}@{}" 0 5 (fontified t) 5 17 (face font-lock-keyword-face fontified t) 17 32 (face font-lock-keyword-face fontified t) 32 36 (fontified t) 36 48 (face font-lock-keyword-face fontified t) 48 53 (fontified t) 53 63 (face font-lock-keyword-face fontified t) 63 67 (fontified t) 67 72 (face font-lock-keyword-face fontified t) 72 85 (fontified t) 85 95 (face font-lock-keyword-face fontified t) 95 99 (fontified t)) . 29575) (undo-tree-id725 . -98) (undo-tree-id726 . -99) (undo-tree-id727 . -99) (t 25756 22647 293076 377000)) nil (25756 22659 866945 889000) 0 nil])
([nil nil ((#("%" 0 1 (face font-lock-comment-face fontified t)) . 29578) (undo-tree-id729 . -1) (undo-tree-id730 . -1)) nil (25756 22661 984928 694000) 0 nil] [nil nil ((#("\\multicolumn{6}{c}{%
" 0 12 (face font-lock-keyword-face fontified t) 12 17 (fontified t) 17 19 (fontified t) 19 21 (face font-lock-comment-face fontified t)) . 29559) (undo-tree-id703 . -20) (undo-tree-id704 . 4) (undo-tree-id705 . -19) (undo-tree-id706 . -16) (undo-tree-id707 . -16) (undo-tree-id708 . -16) (undo-tree-id709 . -16) (undo-tree-id710 . 4) (undo-tree-id711 . -16) (undo-tree-id712 . -16) (undo-tree-id713 . -16) (undo-tree-id714 . -16) (undo-tree-id715 . -16) (undo-tree-id716 . -16) (undo-tree-id717 . -16) (undo-tree-id718 . -16) (undo-tree-id719 . -19) (undo-tree-id720 . -19) (undo-tree-id721 . -19) (undo-tree-id722 . -19) (undo-tree-id723 . -19) (undo-tree-id724 . -21) 29578) ((29559 . 29580)) (25756 22659 866633 908000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -29578) (undo-tree-id728 . -1) 29577) nil (25756 22661 984922 59000) 0 nil])
nil
([nil nil ((29681 . 29685) (29672 . 29681) (#("multicols" 0 9 (fontified nil)) . -29672) (29672 . 29681) (#("multico" 0 7 (face font-lock-function-name-face fontified t)) . -29672) (undo-tree-id735 . -7) (undo-tree-id736 . -3) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -6) (undo-tree-id740 . -6) (undo-tree-id741 . -7) (undo-tree-id742 . -7) (undo-tree-id743 . -7) (undo-tree-id744 . -7) 29679 (29676 . 29679) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -29676) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (29669 . 29677) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -29669) (undo-tree-id747 . -1) (29665 . 29670) (29664 . 29665) (t 25756 22661 989662 396000) 29664) nil (25756 22687 88504 910000) 0 nil])
([nil nil ((39246 . 39247) (39237 . 39246) (#("multicols" 0 9 (fontified nil)) . -39237) (39237 . 39246) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -39237) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) 39238 (39235 . 39238) (39232 . 39235) (39231 . 39232) 39211) nil (25756 22687 88489 964000) 0 nil])
([nil nil ((39254 . 39259) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -39254) (undo-tree-id792 . -1) (39249 . 39255) (t 25756 22687 92857 977000)) nil (25756 22750 710047 521000) 0 nil])
([nil nil ((39348 . 39352)) nil (25756 22750 710043 750000) 0 nil])
([nil nil ((#("\\caption*{Table 2. Results of a survey of the population on the quality of public
services provided} \\\\
" 0 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 15 (fontified t) 15 82 (fontified t) 82 101 (fontified t) 101 103 (face font-lock-warning-face fontified t) 103 104 (fontified t)) . 39249) (undo-tree-id753 . -102) (undo-tree-id754 . -103) (undo-tree-id755 . 1) (undo-tree-id756 . -20) (undo-tree-id757 . -102) (undo-tree-id758 . -102) (undo-tree-id759 . -24) (undo-tree-id760 . -24) (undo-tree-id761 . -1) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -7) (undo-tree-id765 . -7) (undo-tree-id766 . -9) (undo-tree-id767 . -9) (undo-tree-id768 . -9) (undo-tree-id769 . -9) (undo-tree-id770 . -91) (undo-tree-id771 . -91) (undo-tree-id772 . -99) (undo-tree-id773 . -99) (undo-tree-id774 . -100) (undo-tree-id775 . -103) (undo-tree-id776 . -103) (undo-tree-id777 . 1) (undo-tree-id778 . -102) (undo-tree-id779 . -102) (undo-tree-id780 . -102) (undo-tree-id781 . -102) (undo-tree-id782 . -20) (undo-tree-id783 . -20) (undo-tree-id784 . -104) (undo-tree-id785 . -20) (undo-tree-id786 . -102) (undo-tree-id787 . -20) (undo-tree-id788 . -20) (undo-tree-id789 . -82) (undo-tree-id790 . -102) (undo-tree-id791 . -104) 39351) nil (25756 22750 710039 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39597 . 39598) (#("
" 0 1 (fontified nil)) . -39701) (39597 . 39702) 39514) nil (25756 22750 709628 683000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39249) (undo-tree-id748 . 1) (undo-tree-id749 . 1) (undo-tree-id750 . 1) (undo-tree-id751 . -1) (undo-tree-id752 . -1)) nil (25756 22750 709622 886000) 0 nil])
([nil nil ((39888 . 39889) (t 25756 22750 712508 868000)) nil (25756 22755 484395 995000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 40311) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (t 25756 22755 489149 323000)) nil (25756 22786 121040 863000) 0 nil])
([nil nil ((40328 . 40331) (40313 . 40328) (#("textsu" 0 6 (fontified nil)) . 40313) (40313 . 40319) (#("textsuperscript" 0 15 (fontified nil)) . -40313) (40313 . 40328) (#("textsuper" 0 9 (face font-lock-keyword-face fontified t)) . -40313) (undo-tree-id793 . -9) (undo-tree-id794 . -1) (undo-tree-id795 . -2) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -5) (undo-tree-id800 . -6) (undo-tree-id801 . -9) (undo-tree-id802 . -9) (undo-tree-id803 . -9) 40322 (40312 . 40322)) nil (25756 22800 201444 248000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40610 . 40611) (nil fontified nil 40591 . 40611) (40591 . 40611) 40590) nil (25756 22823 747456 288000) 0 nil] [nil nil ((nil rear-nonsticky nil 40798 . 40799) (nil fontified nil 40779 . 40799) (40779 . 40799) 40778) ((#("\\textsuperscript{1} " 0 16 (face font-lock-keyword-face fontified nil) 16 19 (fontified nil) 19 20 (rear-nonsticky nil fontified nil)) . 40779) (undo-tree-id806 . -19) (undo-tree-id807 . -8) (undo-tree-id808 . -8) (nil rear-nonsticky t 40798 . 40799)) (25756 22800 201183 321000) 0 nil] [nil nil ((nil rear-nonsticky nil 40780 . 40781) (nil fontified nil 40780 . 40781) (40780 . 40781) 40779) ((#("1" 0 1 (rear-nonsticky nil fontified nil)) . 40780) (nil rear-nonsticky t 40780 . 40781)) (25756 22786 121015 301000) 0 nil])
([nil nil ((40608 . 40609) (#("2" 0 1 (fontified t)) . 40608) (undo-tree-id815 . -1) (40608 . 40609) (#("1" 0 1 (fontified t)) . 40608) (undo-tree-id816 . -1)) nil (25756 22823 747452 447000) 0 nil])
nil
nil
([nil nil ((#("3" 0 1 (fontified t)) . 40588) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1)) nil (25756 22823 747445 672000) 0 nil])
([nil nil ((40591 . 40594) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -40591) (undo-tree-id817 . -1) (40588 . 40592) (40587 . 40588) (t 25756 22823 752108 67000) 40581) nil (25756 22851 972605 41000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40826 . 40827) (#("
" 0 1 (fontified nil)) . -40833) (40826 . 40834) 40825) nil (25756 22851 972592 190000) 0 nil])
([nil nil ((41247 . 41248) (#("
" 0 1 (fontified t)) . -41247) (undo-tree-id818 . -1) 41180 (t 25756 22851 978619 842000)) nil (25756 22882 403646 313000) 0 nil])
([nil nil ((41286 . 41290) (41277 . 41286) (#("multicols" 0 9 (fontified nil)) . -41277) (41277 . 41286) (#("mu" 0 2 (face font-lock-function-name-face fontified t)) . -41277) (undo-tree-id839 . -2) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -2) (undo-tree-id843 . -2) (undo-tree-id844 . -2) 41279 (41278 . 41279) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -41278) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) 41279 (41278 . 41279) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -41278) (undo-tree-id849 . -1) (41274 . 41279) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -41274) (undo-tree-id850 . -1) (41270 . 41275) (41269 . 41270) (t 25756 22882 411786 175000) 41269) nil (25756 22931 414106 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 55528 . 55529) (#("
" 0 1 (fontified nil)) . -55549) (55528 . 55550) 55510) nil (25756 22931 414094 505000) 0 nil])
([nil nil ((55530 . 55533) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 55530) (undo-tree-id836 . -4) (undo-tree-id837 . -5) (undo-tree-id838 . -5)) nil (25756 22931 414091 642000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t latex-env-pair t)) . -55544) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("2" 0 1 (fontified t latex-env-pair t)) . -55545) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (#("}" 0 1 (fontified t latex-env-pair t)) . -55546) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . 1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) 55547) nil (25756 22931 414084 29000) 0 nil])
([nil nil ((55572 . 58904) (#("1. In Kazakhstan, by now, it has been possible to create a stable and
optimal in terms of the number of state administrative apparatus. There
is an understaffing of civil servants, which, in turn, indicates the
presence of gaps in the work of the personnel service of the state
apparatus.

2. In the civil service in Kazakhstan, there is a tendency towards a
gradual rejuvenation of the state administration apparatus, which
increases the opportunities for training, retraining and advanced
training, as young employees more effectively perceive new knowledge.
There is a gender balance (59.8\\%).

3. The educational level of civil servants is quite high and tends to
further increase. However, we consider it necessary to note that the
increase in the level of education is accompanied by a decrease in the
quality of services provided by civil servants. Consequently,
professional development, being a multifaceted process, is not always
associated with higher education, but directly proportional to the level
of acquired knowledge and skills.

4. The Strategic Plan of the Agency of the Republic of Kazakhstan for
Civil Service Affairs for 2020-2024 provides for the implementation of a
number of measures, including carrying out the necessary amount of work
on retraining and advanced training of civil servants, as well as
improving the quality of public services from 83\\% in 2018 to 90.1\\% in
2024.

5. Recent reforms in the Republic of Kazakhstan modernized the civil
service, including systems of material incentives and career planning
for civil servants through the introduction of a factor-score scale.

6. The modernization of the civil service involves the improvement of
the internal management system and the introduction of flexible methods
of human resource management based on achieving the best results of
socio-economic development by improving the quality of public services
and attracting qualified specialists.

7. To this end, the governments of various countries create and develop
systems of material incentives and career planning for civil servants.
The ultimate goal of the ongoing reforms is to create a professional and
efficient public service.

8. The final point in optimizing the system of motivation for the
professional activities of civil servants in the Republic of Kazakhstan
is the introduction of elements of project management, which defines a
completely new approach to management for the civil service.

9. The project approach to the management of the professional activities
of civil servants implies not only the presence of a certain deadline
for the performance of work, but also a clear definition of the
necessary resources, which makes it possible to evaluate the
effectiveness of the work of both an individual employee and the team as
a whole.

10. The integrated system of motivation and performance assessment that
we have considered allows for continuous monitoring of the motivational
profile of a civil servant at all stages of professional activity from
selection to a position to dismissal. And the practical implementation
and effective use of all the identified factors in combination can
create and maintain a positive motivation for civil servants to improve
their educational and professional level.
" 592 594 (face font-lock-keyword-face) 1047 1377 (fontified t) 1377 1379 (face font-lock-keyword-face fontified t) 1379 1395 (fontified t) 1395 1397 (face font-lock-keyword-face fontified t) 1397 2080 (fontified t) 2080 2153 (fontified t) 2153 2547 (fontified t) 2547 2594 (fontified t) 2594 3269 (fontified t)) . -55572) (undo-tree-id885 . -14) (undo-tree-id886 . -3241) (undo-tree-id887 . -1047) (undo-tree-id888 . -2608) (undo-tree-id889 . -3241) (undo-tree-id890 . -3269) (undo-tree-id891 . -14) (undo-tree-id892 . -3241) (undo-tree-id893 . -14) (undo-tree-id894 . -14) (undo-tree-id895 . -1047) (undo-tree-id896 . -2194) (undo-tree-id897 . -2608) (undo-tree-id898 . -2608) (undo-tree-id899 . -3227) (undo-tree-id900 . -3241) (undo-tree-id901 . -3241) (undo-tree-id902 . -3269) 58841 (t 25756 22931 421517 237000)) nil (25756 22947 462959 511000) 0 nil])
([nil nil ((58929 . 62519) (#("1. Khaziev, A. O. Features of the system of motivation of public civil
servants. // Young scientist. - 2019. - No. 47 (285). --- S. 234-237.

2. Message of the President of the Republic of Kazakhstan N. Nazarbayev
to the people of Kazakhstan. October 5, 2018. Increasing the well-being
of Kazakhstanis: increasing incomes and quality of LIFE

3. Moskaleva N.V. Kuzmenkova V.D. Methods of economic research. -
Smolensk: FGBOU Smolensk State Agricultural Academy, 2016 - 86 p.

4. Motivation of civil servants in Kazakhstan. 04.04.2018..
09.11.2019.//International Journal of Civil Service Reform and
Practice.: p. 71.

5. Abilmazhinov T.T. The evolution of systems for assessing and
motivating the professional activities of civil servants // Bulletin of
Modern Research.-2018.- No. 1.1 (16).- P. 179-183.

6. Evseenko V.V.A. Foreign experience of personnel motivation and the
possibility of its application in domestic practice // Manager. - 2022.
- No. 1 (99). - -- S. 87-95

7. RabigaNurbay. Factor-point scale of civil servants: efficiency and
prospects

8. National report on the state of public service in the Republic of
Kazakhstan. Nur-Sultan, 2022 https://online.zakon.kz › Document

9. National report on the state of the civil service in the Republic of
Kazakhstan for 2019 - GOV.KZ https://www.gov.kz › qyzmet › documents ›
details

10.November 11, 2020 National report on the state of the civil service
in the Republic of Kazakhstan. - GOV.KZhttps://www.gov.kz › uploads

11. Improving the management of state bodies. - under the scientific
supervision of Isenova G.K., Kazakhstan, Nur-Sultan, 2020, 161 p.

12. The plan of the nation \"100 concrete steps to implement five
institutional reforms\" / ed. ed. A. M. Rakhimzhanova, B. M. Kaipova. -
Nur-Sultan: Library of the First President of the Republic of Kazakhstan
- Elbasy, 2019. - 196 p.

13. Strategic Plan of the Agency of the Republic of Kazakhstan for Civil
Service Affairs and Anti-Corruptionfor 2017--2021. Astana, 2017, - 26 p.

14. Baiturina G.R. Transformation of the Weberian bureaucracy in the
model of R. Merton and A. Gouldner Interpretation of bureaucracy by A.
Gouldner 2018) https://cyberleninka.ru › article ›
transformatsiya-veber.

15. Maslow A.G. Theory of human motivation / per. in Russian S.A.
language Chetvertakova,2013//
ttp://www.sergeychet.narod.ru/bibl\\_psy/hummotiv1943.htm. (Date of
access 26.01.2017).

16. Methodology for studying the motivation of professional activity
(methodology of K. Zamfir in the modification of A.
Rean)http://psihdocs.ru › metodika-izuchenie-motivacii-profe...
(accessed March 7, 2021)

17. Appendix to the order of the Chairman of the Agency of the Republic
of Kazakhstan for Civil Service Affairs for 2020-2024 (dated July 21,
2022 No. 163)

18. Fofanova A. Yu. Criteria for assessing the effectiveness of labor
motivation of civil servants in an organization // CETERIS PARIBUS -
2016 - No. 1-2 - P. 63-67.

19. Belova N.P., Miroshnichenko O.N. Foreign experience of motivating
the professional activities of civil servants // Bulletin of the Russian
University of Cooperation -2019.- No. 3 (37) - P. 28-31.

20.Morgan D.G. The Singapore Constitution: A Brief Introduction /
Singapore Management University //
https://\\href{http://www.smu.edu.sg/faculty/profile/9491/Jeremy-}{www.smu.edu.sg/faculty/profile/9491/Jeremy-}
GOH.

21. CebroYu.A. Modern problems of motivation and stimulation of labor of
state civil servants // Innovations and investments. - 2019. - No.
3.-S.141-144.
" 0 800 (fontified t) 800 805 (fontified t) 805 1207 (fontified t) 1207 1264 (fontified t) 1264 1491 (fontified t) 1491 1553 (fontified t) 1553 2347 (fontified t) 2347 2349 (face font-lock-keyword-face fontified t) 2349 2764 (fontified t) 2764 2768 (fontified t) 2768 3053 (fontified t) 3053 3079 (fontified t) 3079 3203 (fontified t) 3203 3246 (fontified t) 3246 3251 (face font-lock-keyword-face fontified t) 3251 3509 (fontified t)) . -58929) (undo-tree-id851 . -3203) (undo-tree-id852 . -3495) (undo-tree-id853 . -2001) (undo-tree-id854 . -3495) (undo-tree-id855 . -141) (undo-tree-id856 . -141) (undo-tree-id857 . -3509) (undo-tree-id858 . -3495) (undo-tree-id859 . -141) (undo-tree-id860 . -342) (undo-tree-id861 . -475) (undo-tree-id862 . -617) (undo-tree-id863 . -805) (undo-tree-id864 . -976) (undo-tree-id865 . -976) (undo-tree-id866 . -1057) (undo-tree-id867 . -1191) (undo-tree-id868 . -1343) (undo-tree-id869 . -1483) (undo-tree-id870 . -1619) (undo-tree-id871 . -1854) (undo-tree-id872 . -2001) (undo-tree-id873 . -2001) (undo-tree-id874 . -2216) (undo-tree-id875 . -2400) (undo-tree-id876 . -2611) (undo-tree-id877 . -2768) (undo-tree-id878 . -2935) (undo-tree-id879 . -2935) (undo-tree-id880 . -3136) (undo-tree-id881 . -3354) (undo-tree-id882 . -3354) (undo-tree-id883 . -3495) (undo-tree-id884 . -3509) 62438) nil (25756 22947 462943 867000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 60318) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (t 25756 22947 471429 164000)) nil (25756 22993 125494 17000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 60318) (undo-tree-id915 . -1) (undo-tree-id916 . -1)) nil (25756 22993 125491 223000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 60318) (undo-tree-id913 . -1) (undo-tree-id914 . -1)) nil (25756 22993 125487 871000) 0 nil])
([nil nil ((60319 . 60323) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -60319) (undo-tree-id910 . -1) (60318 . 60320) (#("L" 0 1 (fontified t)) . -60318) (undo-tree-id911 . -1) (undo-tree-id912 . -1) 60319 (60318 . 60319) (60317 . 60318)) nil (25756 22993 125484 30000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 62132) (undo-tree-id908 . -1) (undo-tree-id909 . -1)) nil (25756 22993 125478 372000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 62132) (undo-tree-id906 . -1) (undo-tree-id907 . -1)) nil (25756 22993 125475 579000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 62132) (undo-tree-id904 . -1) (undo-tree-id905 . -1)) nil (25756 22993 125471 179000) 0 nil])
([nil nil ((62133 . 62137) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -62133) (undo-tree-id903 . -1) (62132 . 62134) (62131 . 62132) 62131) nil (25756 22993 125463 985000) 0 nil])
([nil nil ((62572 . 63228) (#("Karbetova Zatira Rakhimovna - Ph.D., Professorof Economics, Kazakh
University of Technology and Business, Department of Economics and
Service, e-meil kzr\\_2011@mail.ru

Baktymbet Asem Serikovna - Candidateof Economics, AssociateProfessor,
Head. Department of \"Economics and Management\" of theKazakh University
of Technology and Business, e-meil asem\\_abs@mail.ru

Karbetova Sholpan Rakhimovna - Ph.D. in Economics, AssociateProfessor,
International Transport and Humanitarian University, Department of
Business and Management, e-meil
\\href{mailto:karbetova_2013@mail.ru}{\\nolinkurl{karbetova\\_2013@mail.ru}}
" 0 153 (fontified t) 153 155 (face font-lock-keyword-face fontified t) 155 231 (fontified t) 231 239 (fontified t) 239 349 (fontified t) 349 351 (face font-lock-keyword-face fontified t) 351 534 (fontified t) 534 539 (face font-lock-keyword-face fontified t) 539 557 (fontified t) 557 558 (face (subscript) fontified t display (raise -0.2)) 558 571 (fontified t) 571 581 (face font-lock-keyword-face fontified t) 581 582 (fontified t) 582 605 (face tex-verbatim fontified t) 605 608 (fontified t)) . -62572) (undo-tree-id928 . -4) (undo-tree-id929 . -538) (undo-tree-id930 . -538) (undo-tree-id931 . -538) (undo-tree-id932 . -368) (undo-tree-id933 . -608) (undo-tree-id934 . -4) (undo-tree-id935 . -538) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -534) (undo-tree-id939 . -538) (undo-tree-id940 . -538) (undo-tree-id941 . -538) (undo-tree-id942 . -538) (undo-tree-id943 . -538) (undo-tree-id944 . -608) 63180 (t 25756 22993 131178 609000)) nil (25756 23018 838265 247000) 0 nil])
([nil nil ((63270 . 63824) (#("Карбетова Затира Рахимовна - кандидат технических наук, профессор,
Казахский университет технологии и бизнеса, факультет экономики и
сервиса, e-meil kzr\\_2011@mail.ru

Бактымбет Асем Сериковна - кандидат экономических наук, доцент,
заведующий кафедрой «Экономика и управление» Казахского университета
технологии и бизнеса.

Карбетова Шолпан Рахимовна - кандидат экономических наук, доцент,
Международный транспортно-гуманитарный университет, факультет бизнеса и
менеджмента, e-meil karbetova\\_2013@mail.ru
" 0 62 (fontified t) 62 67 (fontified t) 67 133 (fontified t) 133 152 (fontified t) 152 154 (face font-lock-keyword-face fontified t) 154 182 (fontified t) 182 232 (fontified t) 232 252 (fontified t) 252 253 (face font-lock-keyword-face fontified t) 253 275 (face font-lock-string-face fontified t) 275 276 (face font-lock-keyword-face fontified t) 276 416 (fontified t) 416 462 (fontified t) 462 491 (fontified t) 491 493 (face font-lock-keyword-face fontified t) 493 497 (fontified t) 497 506 (fontified t)) . -63270) (undo-tree-id919 . -462) (undo-tree-id920 . -462) (undo-tree-id921 . -506) (undo-tree-id922 . -462) (undo-tree-id923 . -506) (undo-tree-id924 . -462) (undo-tree-id925 . -462) (undo-tree-id926 . -462) (undo-tree-id927 . -506) 63776) nil (25756 23018 838251 558000) 0 nil])
([nil nil ((63825 . 63833) (63824 . 63825) (63823 . 63824) 63810) nil (25756 23018 838234 726000) 0 nil])
([nil nil ((63835 . 64109) (#("Редактор: Оспанова М.К.

Верстка на компьютере:Ундасынов Р. Е.

Подписано в печать 29.06.2023 г.

Издание АО «КазУТБ» 010000, Астана, Казахстан,

ул. Кайыма Мухамедханова, 37 А,

телефон рабочий + (7172) 72-58-12 (134)

е-mail: vestnik@kaztbu.kz
" 0 109 (fontified t) 109 110 (face font-lock-keyword-face fontified t) 110 116 (face font-lock-string-face fontified t) 116 117 (face font-lock-keyword-face fontified t) 117 220 (fontified t) 220 221 (fontified t) 221 245 (fontified t) 245 246 (fontified t)) . -63835) (undo-tree-id945 . -7) (undo-tree-id946 . -227) (undo-tree-id947 . -227) (undo-tree-id948 . -246) (undo-tree-id949 . -7) (undo-tree-id950 . -227) (undo-tree-id951 . -7) (undo-tree-id952 . -7) (undo-tree-id953 . -220) (undo-tree-id954 . -227) (undo-tree-id955 . -227) (undo-tree-id956 . -246) 64081 (t 25756 23018 844370 842000)) nil (25756 23027 570391 362000) 0 nil])
([nil nil ((28545 . 28546) (t 25756 23027 577656 252000)) nil (25756 23060 460720 652000) 0 nil])
([nil nil ((28547 . 28548)) nil (25756 23060 460714 855000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 2) (undo-tree-id961 . -9) (undo-tree-id962 . -10) (t 25756 23060 467475 771000)) nil (25756 24898 924954 399000) 0 nil])
([nil nil ((3 . 9) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -3) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (#("p" 0 1 (face font-lock-keyword-face fontified t)) . -4) (undo-tree-id959 . -1) (undo-tree-id960 . -1) 5 (1 . 5)) nil (25756 24898 924946 787000) 0 nil])
([nil nil ((46 . 50) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -46) (undo-tree-id963 . -1) (39 . 47) (#("\\" 0 1 (face font-lock-keyword-face fontified t)) . -39) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) 40 (39 . 40) (t 25756 24898 930720 636000)) nil (25756 25148 176595 912000) 0 nil])
([nil nil ((64 . 65)) nil (25756 25148 176579 779000) 0 nil])
([nil nil ((39 . 49) (38 . 39) 38) nil (25756 25148 176573 633000) 0 nil])
([nil nil ((#("\\clearpage
" 0 10 (face font-lock-warning-face fontified t) 10 11 (fontified t)) . 39) (undo-tree-id967 . -10) (undo-tree-id968 . 1) (undo-tree-id969 . -9) (undo-tree-id970 . -9) (undo-tree-id971 . -9) (undo-tree-id972 . -9) (undo-tree-id973 . -9) (undo-tree-id974 . -9) (undo-tree-id975 . -9) (undo-tree-id976 . -9) (undo-tree-id977 . -9) (undo-tree-id978 . -9) (undo-tree-id979 . -11) 48 (t 25756 25148 182686 212000)) nil (25756 25233 898423 659000) 0 nil])
([nil nil ((1 . 12) 10) nil (25756 25233 898400 401000) 0 nil])
([nil nil ((#("\\clearpage
" 0 10 (face font-lock-warning-face fontified t) 10 11 (fontified t)) . 1) (undo-tree-id980 . -11) (undo-tree-id981 . -10) (undo-tree-id982 . -11) (t 25756 25233 902215 831000)) nil (25756 25909 21812 913000) 0 nil])
([nil nil ((1 . 32) (t 25756 25909 21844 481000)) nil (25756 28992 521467 478000) 0 nil])
([nil nil ((29618 . 29619) (#("c" 0 1 (fontified t)) . 29618) (undo-tree-id983 . -1) (t 25756 28992 528257 239000)) nil (25756 38236 286455 23000) 0 nil])
([nil nil ((63272 . 63340) (#("\\emph{{\\bfseries Сведения об авторах:}}
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face (italic)) 7 16 (fontified t face (font-lock-keyword-face italic)) 16 37 (fontified t face (italic bold)) 37 38 (fontified t face (italic)) 38 40 (fontified t)) . -63272) (undo-tree-id9 . -40) (undo-tree-id10 . -40) 63312 (t 25757 18135 777868 848000)) nil (25757 20001 264428 764000) 0 nil] [nil nil ((63881 . 63884) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -63881) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (63878 . 63882) (63877 . 63878) (t 25756 38188 427795 232000) 63877) ((#("
" 0 1 (fontified t)) . 63877) (undo-tree-id992 . -1) (#("\\vfi" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 63878) (undo-tree-id993 . -4) (63881 . 63882) (#("ill" 0 3 (face font-lock-keyword-face fontified t)) . 63881)) (25756 38235 908537 470000) 0 nil])
([nil nil ((62569 . 62642) (#("\\emph{{\\bfseries Information about authors}}
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face (italic)) 7 16 (fontified t face (font-lock-keyword-face italic)) 16 42 (fontified t face (italic bold)) 42 43 (fontified t face (italic)) 43 45 (fontified t)) . -62569) (undo-tree-id7 . -45) (undo-tree-id8 . -45) 62614) nil (25757 20001 264424 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 64159 . 64160) (#("
" 0 1 (fontified nil)) . -64166) (64159 . 64167)) ((#("
\\vfill
" 0 1 (fontified nil rear-nonsticky nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil)) . 64159) (undo-tree-id989 . -7) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (64166 . 64167) (nil rear-nonsticky t 64159 . 64160)) (25756 38235 207794 10000) 0 nil])
([nil nil ((58948 . 58999) (#("{\\bfseries References}
" 0 1 (fontified t) 1 10 (fontified t face font-lock-keyword-face) 10 21 (fontified t face (bold)) 21 23 (fontified t)) . -58948) (undo-tree-id1 . 23) (undo-tree-id2 . -1) (undo-tree-id3 . 2) (undo-tree-id4 . -22) (undo-tree-id5 . -23) (undo-tree-id6 . -23) 58971) nil (25757 20001 264420 931000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 64159) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1)) ((64159 . 64160)) (25756 38235 37494 206000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 55588) (undo-tree-id0 . -1)) nil (25757 20001 264410 303000) 0 nil])
([nil nil ((64165 . 64166) 64159) ((#("
" 0 1 (fontified t)) . 64165) (t 25756 38226 630918 927000)) (25756 38226 624910 62000) 0 nil])
([nil nil ((#("{\\bfseries Conclusions.}
" 0 1 (fontified t) 1 10 (fontified t face font-lock-keyword-face) 10 23 (fontified t face (bold)) 23 24 (fontified t) 24 25 (fontified t)) . 55588) (undo-tree-id11 . -24) (undo-tree-id12 . 25) (undo-tree-id13 . -1) (undo-tree-id14 . 2) (undo-tree-id15 . -24) (undo-tree-id16 . -25) (t 25757 20001 271211 20000)) nil (25757 20015 615941 171000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 55571 . 55572) (#("
" 0 1 (fontified nil)) . -55596) (55571 . 55597) 55534) nil (25757 20017 410441 506000) 0 nil] [nil nil ((55534 . 55559)) ((#("{\\bfseries Conclusions.}
" 0 1 (fontified t) 1 10 (fontified t face font-lock-keyword-face) 10 23 (fontified t face (bold)) 23 24 (fontified t) 24 25 (fontified t)) . 55534) (undo-tree-id17 . -25) (undo-tree-id18 . -24) (undo-tree-id19 . 25) (undo-tree-id20 . -1) (undo-tree-id21 . 2) (undo-tree-id22 . -24)) (25757 20015 615814 777000) 0 nil])
([nil nil ((#("{\\bfseries Conclusions.}
" 0 1 (fontified t) 1 10 (fontified t face font-lock-keyword-face) 10 23 (fontified t face (bold)) 23 24 (fontified t) 24 25 (fontified t)) . 55572) (undo-tree-id23 . -24) (undo-tree-id24 . -24) (undo-tree-id25 . 25) (undo-tree-id26 . -1) (undo-tree-id27 . 2) (undo-tree-id28 . -24) (undo-tree-id29 . -25) (t 25757 20017 414544 432000)) nil (25757 20036 858269 845000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 55587 . 55588) (#("
" 0 1 (fontified nil)) . -55612) (55587 . 55613) 55572) nil (25757 20036 858249 865000) 0 nil])
([nil nil ((60197 . 60202) (t 25757 20036 864544 522000)) nil (25757 20084 896412 110000) 0 nil])
([nil nil ((60225 . 60226)) nil (25757 20084 896406 490000) 0 nil])
([nil nil ((60343 . 60348) (t 25757 20084 901211 422000)) nil (25757 20094 222755 486000) 0 nil])
([nil nil ((60366 . 60367)) nil (25757 20094 222749 758000) 0 nil])
([nil nil ((60513 . 60519) (t 25757 20094 227878 133000)) nil (25757 20104 514112 239000) 0 nil])
([nil nil ((60537 . 60538)) nil (25757 20104 514107 212000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 62325) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (t 25757 20104 521211 517000)) nil (25757 20161 591289 902000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 62325) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) nil (25757 20161 591286 963000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 62325) (undo-tree-id40 . -1) (undo-tree-id41 . -1)) nil (25757 20161 591284 158000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 62325) (undo-tree-id38 . -1) (undo-tree-id39 . -1)) nil (25757 20161 591281 156000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 62325) (undo-tree-id36 . -1) (undo-tree-id37 . -1)) nil (25757 20161 591278 119000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 62325) (undo-tree-id34 . -1) (undo-tree-id35 . -1)) nil (25757 20161 591275 69000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 62325) (undo-tree-id32 . -1) (undo-tree-id33 . -1)) nil (25757 20161 591270 842000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 62325) (undo-tree-id30 . -1) (undo-tree-id31 . -1)) nil (25757 20161 591263 888000) 0 nil])
([nil nil ((62326 . 62329) (#("href" 0 4 (fontified t face font-lock-keyword-face)) . 62326) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -3) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (t 25757 20161 597878 463000)) nil (25757 20183 362175 633000) 0 nil])
([nil nil ((#("{www.smu.edu.sg/faculty/profile/9491/Jeremy-}" 0 45 (fontified t)) . 62381) (undo-tree-id46 . -44) (undo-tree-id47 . 45) (undo-tree-id48 . -1) (undo-tree-id49 . 1) (undo-tree-id50 . -45) (undo-tree-id51 . -45) (undo-tree-id52 . -45)) nil (25757 20183 362161 201000) 0 nil])
([nil nil ((61605 . 61611) (t 25757 20183 367878 567000)) nil (25757 20223 193035 546000) 0 nil])
([nil nil ((61629 . 61630)) nil (25757 20223 193034 170000) 0 nil])
([nil nil ((61389 . 61390)) nil (25757 20223 193033 259000) 0 nil])
([nil nil ((61390 . 61394) (61389 . 61390)) nil (25757 20223 193031 999000) 0 nil])
([nil nil ((61451 . 61452)) nil (25757 20223 193206 914000) 0 nil])
([nil current ((#("-" 0 1 (fontified t)) . 41922) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (t 25757 20223 827878 776000)) nil (25757 22335 380902 412000) 0 nil] [nil nil ((61388 . 61389) (#("
" 0 1 (fontified t)) . -61388) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 61387) ((61388 . 61389) (#(" " 0 1 (fontified t)) . 61388)) (25757 20223 193025 201000) 0 nil])
nil
nil
